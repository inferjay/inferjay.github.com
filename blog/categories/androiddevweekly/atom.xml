<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: AndroidDevWeekly | 脉脉不得语的技术博客]]></title>
  <link href="http://www.inferjay.com/blog/categories/androiddevweekly/atom.xml" rel="self"/>
  <link href="http://www.inferjay.com/"/>
  <updated>2014-12-15T14:02:16+08:00</updated>
  <id>http://www.inferjay.com/</id>
  <author>
    <name><![CDATA[inferjay]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Android开发周报 Issue#11]]></title>
    <link href="http://www.inferjay.com/blog/2014/12/15/android-dev-weekly-issue-11/"/>
    <updated>2014-12-15T13:56:36+08:00</updated>
    <id>http://www.inferjay.com/blog/2014/12/15/android-dev-weekly-issue-11</id>
    <content type="html"><![CDATA[<h3 id="section">文章</h3>

<ol>
  <li>
    <p><a href="http://droidyue.com/blog/2014/11/29/why-onsharedpreferencechangelistener-was-not-called/">Google为何这样设计OnSharedPreferenceChangeListener</a></p>

    <p>之前使用OnSharedPreferenceChangeListener，遇到了点小问题，就是有些时候OnSharedPreferenceChangeListener没有被触发。最近花了点时间研究了一下，小做整理。本文将会介绍监听器不被触发的原因，解决方法，以及其中隐含的一些技术细节。</p>
  </li>
  <li>
    <p><a href="http://blog.isming.me/2014/12/12/import-library-to-android-studio/">导入开源库到基于Android Studio构建的项目中</a></p>

    <p>前两天，谷歌发布了Android Studio 1.0的正式版，也有更多的人开始迁移到Android Studio进行开发。然而，网上很多的开源库,控件等还是以前的基于Eclipse进行开发，很多人不知道怎么导入到自己的基于Android Studio项目中来，微博上也有人私信我，让我来写写，正好今天回来的比较早，就写写吧。主要介绍一下常见的一些导包的场景。</p>
  </li>
  <li>
    <p><a href="http://www.cnblogs.com/ct2011/p/4152323.html">Android批量打包提速 - 1分钟900个市场不是梦</a></p>

    <p>使用Ant或者Gradle来给程序进行多渠道批量打包，通常都是在manifest文件中写入一个meta标签：<code>&lt;meta-data android:name="CHANNEL" android:value="xxx" /&gt;</code> meta的key值固定，通过循环改变meta中的value值来实现市场渠道的写入。Ant批量打包实现相对麻烦，以前写的时候多亏了<a href="http://www.cnblogs.com/qianxudetianxia/archive/2012/07/04/2573687.html">谦虚的天下-《App自动化之使用Ant编译项目多渠道打包》</a> 。如果没有这篇帖子，真不知道当时Ant要折腾多少回才能写好。</p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/maosidiaoxian/article/details/41692535">上传Android或Java库到Maven central repository</a></p>

    <p>主要介绍利用Sonatype将jar或aar提交到Maven的中央仓库。是不是希望将自己的jar或是aar传到maven官方库中，在The Central Repository中可以被其他人搜索使用呢，是的话，往下看吧。</p>
  </li>
</ol>

<!--more-->

<ol>
  <li>
    <p><a href="http://greenrobot.me/devpost/android-custom-layout/">深入解析Android的自定义布局</a></p>

    <p>这篇文章是前Firefox Android工程师（现在跳槽去Facebook了） Lucas Rocha所写，文中对Android中常用的四种自定义布局方案进行了很好地分析，并结合这四种Android自定义布局方案所写的示例项目讲解了它们各自的优劣以及四种方案之间的比较。</p>
  </li>
  <li>
    <p><a href="http://greenrobot.me/devpost/java-faster-less-jvm-garbage/">Linkedin工程师是如何优化他们的Java代码的</a></p>

    <p>最近在刷各大公司的技术博客的时候，我在Linkedin的技术博客上面发现了一篇很不错博文。这篇博文介绍了Linkedin信息流中间层Feed Mixer，它为Linkedin的Web主页，大学主页，公司主页以及客户端等多个分发渠道提供支撑（如下图所示）。</p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/column/details/android5.html">跟着ym学习Android5.0</a></p>

    <p>跟着作者一步步学习Android 5.0开发。从创建模拟器开始，再到Material主题、Palette、AnimatedVectorDrawable、RecyclerView、CardView、Activity过渡动画、如何定义阴影等。</p>
  </li>
  <li>
    <p><a href="http://qichaochen.github.io/2014/12/08/108-Android-Toolbar-DrawerLayout-01/">[Material Design]使用Toolbar + DrawerLayout快速实现高大上菜单侧滑</a></p>

    <p>如果你有在关注一些遵循最新的Material Design设计规范的应用的话（如果没有，假设你有！），也许会发现有很多使用了看起来很舒服、很高大上的侧滑菜单动画效果。</p>
  </li>
  <li>
    <p><a href="http://www.dgtle.com/article-5885-1.html">安卓中的 Cydia — Xposed 框架插件专题</a></p>

    <p>大名鼎鼎的 Xposed，相信不少经常泡在各类安卓论坛的安卓粉们都听说过。在安卓进入 4.0 的时代后，不少“大神”也都会在自己做的 Rom 中添加这个 Xposed 软件。</p>
  </li>
</ol>

<h3 id="section-1">代码&amp;开源库</h3>

<ol>
  <li>
    <p><a href="https://github.com/chrisbatt/AndroidFastImageProcessing">AndroidFastImageProcessing</a></p>

    <p>A framework for speeding up image processing on android devices by taking advantage of shaders on the GPU.	</p>
  </li>
  <li>
    <p><a href="https://github.com/stephanenicolas/loglifecycle">loglifecycle</a></p>

    <p>Logs all lifecycle methods of annotated Activities, Fragments, Services, Views, etc.</p>
  </li>
  <li>
    <p><a href="https://github.com/Narfss/ParallaxEverywhere">ParallaxEverywhere</a></p>

    <p>Parallax everywhere is a library with alternative android widgets with parallax effects.</p>
  </li>
  <li>
    <p><a href="https://github.com/adnan-SM/TimelyTextView">TimelyTextView</a></p>

    <p>Animated TextView like Timely app.</p>
  </li>
  <li>
    <p><a href="https://github.com/Manabu-GT/ExpandableTextView">ExpandableTextView</a></p>

    <p>ExpandableTextView是一个可以使开发人员能够轻松地创建可扩展/折叠的TextView效果，就像Google Play里用于显示App描述的TextView一样.</p>
  </li>
  <li>
    <p><a href="https://github.com/googlesamples">Google Samples</a></p>

    <p>Google在Github上发布了大量Demo，针对不同的特性，也包含了最新的API 21 (Lollipop).</p>
  </li>
</ol>

<h3 id="section-2">工具</h3>

<ol>
  <li>
    <p><a href="http://tools.android.com/download/studio/canary/1-0rc4">Android Studio 1.0正式版发布啦</a></p>

    <p><strong>墙内下载地址：</strong><a href="http://www.androiddevtools.cn/#android-studio">http://www.androiddevtools.cn/#android-studio</a>	 	 </p>
  </li>
  <li>
    <p><a href="https://github.com/airk000/gologcat">gologcat</a></p>

    <p>一个由golang编写，可以在终端中彩色输出logcat的实用工具，支持自定义颜色。</p>
  </li>
  <li>
    <p><a href="http://inloop.github.io/shadow4android/">Android 9-patch shadow generator</a></p>

    <p>Android点9图片阴影生成器。</p>
  </li>
</ol>

<h3 id="section-3">视频</h3>

<ol>
  <li>
    <p><a href="http://v.youku.com/v_show/id_XODQ1MjI2MDQ0.html?f=23088492">精通Android触摸系统(中英字幕)</a></p>

    <p><a href="http://www.weibo.com/oceancx?from=feed&amp;loc=nickname">@Ocean-藏心</a>同学历经3周的翻译,将1小时18分钟的视频,终于完成了. 简介:<a href="http://t.cn/RzxZs6E">的姊妹篇</a>，详细讲解了Android自定义事件处理的方方面面。配合<a href="http://blog.csdn.net/guolin_blog/">guolin</a> 大神CSDN的博客和上一个视频，让你对开发Android 自定义控件游刃有余。此外还有<a href="http://">@Trinea</a>大神的<a href="http://www.trinea.cn/android/touch-event-delivery-mechanism/">Android Touch事件传递机制</a>简略解读。</p>

    <p>视频中用到的PPT(PDF版)下载地址：<a href="http://wugengxin.cn/download/pdf/android/PRE_andevcon_mastering-the-android-touch-system.pdf">http://wugengxin.cn/download/pdf/android/PRE_andevcon_mastering-the-android-touch-system.pdf</a></p>
  </li>
  <li>
    <p><a href="http://www.jikexueyuan.com/course/396.html">Android Studio 1.0 (稳定版)的使用</a></p>

    <p>经过 2 年时间的研发，Google 终于在近日正式发布了面向 Android 开发者的集成开发环境 Android Studio 1.0（稳定版）。Android Studio 是 Google 开发的一款面向 Android 开发者的 IDE，支持 Windows、Mac、Linux 等操作系统，基于流行的 Java 语言集成开发环境 IntelliJ 搭建而成。该 IDE 在 2013 年 5 月的 Google I/O 开发者大会上首次露面，此间推出了若干个测试版，12 月 8 日发布的版本是 Android Studio 的首个稳定版。Google 称，相对于其他开发工具，Android Studio 更快、更具生产力，Android Studio 1.0 推出后，Google 将逐步放弃对原来主要的 Android 开发工具 Eclipse ADT 的支持。</p>
  </li>
</ol>

<h3 id="section-4">设计</h3>

<h4 id="section-5">文章</h4>

<ol>
  <li>
    <p><a href="http://www.jianshu.com/p/a3b2422b5465?utm_campaign=hugo&amp;utm_medium=reader_share&amp;utm_content=note&amp;utm_source=weibo">关于Material Design，做到这四点便足以让用户惊喜</a></p>

    <p>Material Design 主张将现实世界中的交互体验，应用到界面设计中来，以求用户的经验能够迁移，并更快习惯新系统。Teambition 已经根据 Material Design 重新设计了旗下所有的 Android 客户端产品。在实践过程中，设计和产品团队总结了一些值得分析的要点，与大家分享。</p>
  </li>
  <li>
    <p><a href="http://www.cocoachina.com/special/design/">给程序员的设计学习指南</a></p>

    <p>这是给 移动开发者 准备的设计学习指南。在这里你将接触到三大平台的设计规范、基础设计理论，以及设计实践，还有一些学习设计的资源。程序员为什么需要学习设计？理解设计能让程序员更上一层楼，能让TA与设计师的交流协作更高效愉快，甚至拥有独立开发面向大众的APP的能力。 <a href="http://www.cocoachina.com/programmer/20141113/10214.html">《程序员需要学习设计的5大理由》</a>。</p>
  </li>
  <li>
    <p><a href="http://zhuanlan.zhihu.com/zhezhexiong/19565895">[无线手册-4] dp、sp、px傻傻分不清楚[完整]</a></p>

    <p>做移动设计的同学，不管是原生app或者web app，应该对字体字号都是很头痛的问题。根本原因是，我们用唯一分辨率的电脑，设计各个不同尺寸大小分辨率的设备，那简直要疯掉了。 <a href="http://zhuanlan.zhihu.com/zhezhexiong/1956455">[无线手册-2]不得不说的icon-font</a> 	<a href="http://zhuanlan.zhihu.com/zhezhexiong/1956）4893">[无线手册-3] 移动App上的动画们</a></p>
  </li>
</ol>

<h4 id="section-6">资源</h4>

<ol>
  <li>
    <p><a href="http://www.androidicons.com/">250 free icons in 5 sizes and 14 colors</a></p>

    <p>包含5种尺寸和14种颜色的250个免费icons。</p>
  </li>
</ol>

<hr />
<p>版权声明：欢迎自由转载-非商用-非衍生-保持署名 | <a href="http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh">Creative Commons BY-NC-ND 3.0</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android开发周报 Issue#10]]></title>
    <link href="http://www.inferjay.com/blog/2014/12/08/android-dev-weekly-issue-10/"/>
    <updated>2014-12-08T11:10:12+08:00</updated>
    <id>http://www.inferjay.com/blog/2014/12/08/android-dev-weekly-issue-10</id>
    <content type="html"><![CDATA[<h3 id="section">文章</h3>

<ol>
  <li>
    <p><a href="http://blog.csdn.net/maosidiaoxian/article/details/41692535">Android Apk 拆分机制</a></p>

    <p>拆分机制比起使用 flavors，能让应用程序更有效地构建一些形式的多个apk。多 apk 只支持以下类型: 1.
屏幕密度 2.ABI.使用新的拆分机制，构建同一个应用程序的hdpi版本和mdpi版本，能够共享很多的任务 （如 javac，dx，proguard）。此外，它会被认为是一个单一的variant，并且同一个测试程序将会被用来测试每​​个多APK。</p>
  </li>
  <li>
    <p><a href="http://relex.me/using-manifestplaceholders/">使用manifestPlaceholders</a></p>

    <p>在项目中我需要打包不同渠道的APK，需要在AndroidManifest中定义渠道名称，以便在java中调用。以前ant或gradle打包时动态改变渠道的思路是：正则AndroidManifest的特定字符然后替换.</p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/xushuaic/article/details/40424379">Property Anim详解</a></p>

    <p>本篇文章将对PropertyAnimation进行全面深入的探讨，本篇文章可以分为两大块，从第六部分可以作为分界点。前五部分着重讲解了PropertyAnim的动画值的计算过程，ValueAnimator与ObjectAnimator以及TimeInterpolation与TypeEvaluator之间的介绍和比较，这几点是比较重要的，从第六部分开始是通过源码的角度分析了整个动画计算以及内部的处理细节，以及引出了对JakeWharton大神的NineOldAndroids 开源库的分析，如果你觉得太多，可以分开来看，有理解不准确的地方，欢迎大家指正。</p>
  </li>
</ol>

<!--more-->

<ol>
  <li>
    <p><a href="http://stormzhang.com/posts.html#AndroidStudio">Android Studio系列教程</a></p>

    <p>相信大家对Android Studio已经不陌生了，Android Studio是Google于2013 I/O大会针对Android开发推出的新的开发工具，目前很多开源项目都已经在采用，Google的更新速度也很快，明显能感觉到这是Android开发的未来，那么我们还有什么理由不去拥抱未来呢？虽然推出了很久，但是国内貌似普及的程度并不高，鉴于很多朋友求studio的详细教程，那么今天我就手把手教大家下载、安装、使用，Studio之路从这里开始。</p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/luoshengyang/article/details/41581063">Dalvik虚拟机Java堆创建过程分析</a></p>

    <p>使用C/C++开发应用程序最令头痛的问题就是内存管理。慎不留神，要么内存泄漏，要么内存破坏。虚拟机要解决的问题之一就是帮助应用程序自动分配和释放内存。为了达到这个目的，虚拟机在启动的时候向操作系统申请一大块内存当作对象堆。之后当应用程序创建对象时，虚拟机就会在堆上分配合适的内存块。而当对象不再使用时，虚拟机就会将它占用的内存块归还给堆。Dalvik虚拟机也不例外，本文就分析它的Java堆创建过程。</p>
  </li>
</ol>

<h3 id="section-1">代码&amp;开源库</h3>

<ol>
  <li>
    <p><a href="https://github.com/googlesamples">Google Samples</a></p>

    <p>Google在Github上发布了大量Demo，针对不同的特性，也包含了最新的API 21 (Lollipop),学习的好资料/</p>
  </li>
  <li>
    <p><a href="https://github.com/Rogero0o/MatchView">MatchView</a></p>

    <p>TextView中的文字由类似火柴棍分散组合的效果。</p>

    <p><img src="https://camo.githubusercontent.com/a71e9d26a7f90ea70270b3681d99785a29f83be5/687474703a2f2f7777312e73696e61696d672e636e2f6d773639302f6136393561636465677731656d79746e6b347334356732306567306d6b3439302e676966" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/Musenkishi/wally">Wally</a></p>

    <p>Wally is a fast and efficient open source wallpaper application for Android.</p>
  </li>
  <li>
    <p><a href="https://github.com/kyze8439690/FolderLayout">FolderLayout</a></p>

    <p>A layout like a stack of files and you can choose one to open. Just imitate the UI of Tencent’s QQ手机管家.</p>
  </li>
  <li>
    <p><a href="https://github.com/Malinskiy/android-material-icons">android-material-icons</a></p>

    <p>一个让你方便的在Android开发中使用Google发布出来的Material Design风格图标的库。	</p>
  </li>
  <li>
    <p><a href="https://github.com/quiqueqs/BabushkaText">BabushkaText</a></p>

    <p>A simpler way to style your TextViews</p>

    <p><img src="https://github.com/quiqueqs/BabushkaText/raw/master/images/example.png" alt="image" /></p>
  </li>
</ol>

<h3 id="section-2">工具</h3>

<ol>
  <li>
    <p><a href="http://www.chinagdg.com/thread-6053-1-1.html">Google 技术资源离线版</a></p>

    <p>Google 发布了一套4张 DVD，将 Google Developers 上的在线技术文档和视频打包到离线文件中。内容很丰富，如 Android 官方文档和SDK、Google Cloud 文档和视频、Web Fundamentals 文档、I/O 大会和 Dev Bytes 视频、Google Udacity 课程视频 等等。</p>
  </li>
  <li>
    <p><a href="http://tools.android.com/download/studio/canary/1-0rc4">Android Studio 1.0 Release Candidate 4</a></p>

    <p><strong>墙内下载地址：</strong><a href="http://www.androiddevtools.cn/#android-studio">http://www.androiddevtools.cn/#android-studio</a></p>
  </li>
</ol>

<h3 id="section-3">设计</h3>

<h4 id="section-4">文章</h4>

<ol>
  <li>
    <p><a href="http://www.ui.cn/project.php?id=33849">中国移动应用设计趋势解读</a></p>

    <p>铺天盖地的二维码、丧心病狂的小红点，还有繁花似锦的安卓ROMs…</p>

    <p>——老外对中国式App设计趋势的分析  by  Dan Grover (微信产品经理) </p>
  </li>
</ol>

<hr />
<p>版权声明：欢迎自由转载-非商用-非衍生-保持署名 | <a href="http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh">Creative Commons BY-NC-ND 3.0</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android开发周报 Issue#9]]></title>
    <link href="http://www.inferjay.com/blog/2014/12/01/android-dev-weekly-issue-9/"/>
    <updated>2014-12-01T12:42:08+08:00</updated>
    <id>http://www.inferjay.com/blog/2014/12/01/android-dev-weekly-issue-9</id>
    <content type="html"><![CDATA[<h3 id="section">文章</h3>

<ol>
  <li>
    <p><a href="http://blog.csdn.net/luoshengyang/article/details/41581063">Dalvik虚拟机Java堆创建过程分析</a></p>

    <p>使用C/C++开发应用程序最令头痛的问题就是内存管理。慎不留神，要么内存泄漏，要么内存破坏。虚拟机要解决的问题之一就是帮助应用程序自动分配和释放内存。为了达到这个目的，虚拟机在启动的时候向操作系统申请一大块内存当作对象堆。之后当应用程序创建对象时，虚拟机就会在堆上分配合适的内存块。而当对象不再使用时，虚拟机就会将它占用的内存块归还给堆。Dalvik虚拟机也不例外，本文就分析它的Java堆创建过程。</p>
  </li>
  <li>
    <p><a href="http://www.kuqin.com/shuoit/20140826/341828.html?url_type=39&amp;object_type=crawler&amp;pos=1">为什么Android的图片质量会比iPhone的差？</a></p>

    <p>经常看到有人问：“安卓版微信发出去的图片怎么那么渣！比iPhone的差远了！”。不只是微信，很多应用安卓版的图片质量就是要比iPhone版逊色很多，这到底是怎么回事？</p>
  </li>
  <li>
    <p><a href="http://qichaochen.github.io/2014/11/21/107-Facebook-Rebound-Demo/">[Material Design]使用Fackbook Rebound快速实现弹簧动画效果</a></p>

    <p>Rebound是Facebook推出的一款Android的物理和动画库，于2013年10月在Mobile@Scale大会上正式发布，旨在解决笨重、缓慢的传统移动网络界面。Rebound不是一款通用物理库，但其弹簧模型在应用程序中引入了现实世界的物理，易于集成，创建的动画能够让人感觉到非常自然，并且可以和Material Design的设计原则呼应，可用于滚动条、切换开关、呼叫等场景下。</p>
  </li>
  <li>
    <p><a href="http://stormzhang.com/devtools/2014/11/07/use-curl-debug/">使用curl来调试你的应用</a></p>

    <p>我们在客户端开发过程中总免不了和后端进行api对接，有时候需要对返回的数据格式进行调试，有时候每次运行客户端来发送请求，这个未免效率太低，这里就来介绍一个好用的工具–curl。</p>
  </li>
</ol>

<!--more-->

<ol>
  <li>
    <p><a href="http://www.codeceo.com/article/android-taskaffinity.html">Android taskAffinity属性使用详解</a></p>

    <p>Activity的归属，也就是Activity应该在哪个Task中，Activity与Task的吸附关系。我们知道，一般情况下在同一个应用中，启 动的Activity都在同一个Task中，它们在该Task中度过自己的生命周期，这些Activity是从一而终的好榜样。</p>
  </li>
  <li>
    <p><a href="http://www.codeceo.com/article/android-memory-manage.html">每个Android开发者必须知道的内存管理知识</a></p>

    <p>相信一步步走过来的Android从业者，每个人都会遇到OOM的情况。如何避免和防范OOM的出现，对于每一个程序员来说确实是一门必不可少的能力。今天我们就谈谈在Android平台下内存的管理之道，开始今天的主题之前，先再次回顾两个概念。</p>
  </li>
</ol>

<h3 id="section-1">代码&amp;开源库</h3>

<ol>
  <li>
    <p><a href="https://github.com/liaohuqiu/android-Ultra-Pull-To-Refresh">android-Ultra-Pull-To-Refresh</a></p>

    <p>很炫的下拉刷新效果库。</p>

    <p><img src="https://camo.githubusercontent.com/588a2ef2cdcfb6c71e88437df486226dd15605b3/687474703a2f2f737261696e2d6769746875622e71696e6975646e2e636f6d2f756c7472612d7074722f73746f72652d686f7573652d737472696e672d61727261792e676966" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/AnderWeb/discreteSeekBar">discreteSeekBar</a></p>

    <p><img src="https://camo.githubusercontent.com/e717e2597779d1ddc980ace6f3943f62483d8a8c/68747470733a2f2f6c68332e676f6f676c6575736572636f6e74656e742e636f6d2f2d376e62565058785568596b2f56472d724f3634704d57492f414141414141414148734d2f614d52676c7432567a726b2f773633392d683438302f616e696d6174696f6e2e676966" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/frogermcs/InstaMaterial">InstaMaterial</a></p>

    <p>Material Design风格的Instagram的客户端。</p>
  </li>
  <li>
    <p><a href="https://github.com/pnikosis/materialish-progress">materialish-progress</a></p>

    <p>Material Design风格的圆形进度条，最低支持到2.3的系统。</p>

    <p><img src="https://github.com/pnikosis/materialish-progress/raw/master/spinningwheel.gif" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/inaka/galgo">galgo</a></p>

    <p>Android日志工具库，可以把log显示在屏幕上。</p>

    <p><img src="https://camo.githubusercontent.com/1e2d3b204a0898b697876817cc19ab4a2fef5de2/687474703a2f2f6936312e74696e797069632e636f6d2f327177336279302e676966" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/cookpad/puree-android">puree-android</a></p>

    <p>一个Log日志收集框架。</p>
  </li>
  <li>
    <p><a href="https://github.com/gdpancheng/LoonAndroid">LoonAndroid</a></p>

    <p>一个ioc（依赖注入）框架，但是整个框架式不同于androidannotations，Roboguice等ioc框架，这是一个类似spring的实现方式。在整应用的生命周期中找到切入点，然后对activity的生命周期进行拦截，然后插入自己的功能。</p>
  </li>
</ol>

<h3 id="section-2">工具</h3>

<ol>
  <li>
    <p><a href="http://tools.android.com/download/studio/canary/1-0rc2">Android Studio 1.0 Release Candidate 2</a></p>

    <p>本次Release没有添加什么新的特性，只是修复了一些Bug，如果你之前已经升级到了RC1建议更新到RC2版。另外本次Release还针对Windows用户推出了包含SDK的安装包。</p>

    <p><strong>墙内下载地址：</strong><a href="http://www.androiddevtools.cn/#android-studio">http://www.androiddevtools.cn/#android-studio</a></p>
  </li>
</ol>

<h3 id="section-3">设计</h3>

<h4 id="section-4">文章</h4>

<ol>
  <li>
    <p><a href="http://www.oschina.net/news/57379/what-is-good-ui-design#0-tsina-1-76379-397232819ff9a47a7b7e80a40613cfe1">什么才是优秀的用户界面设计</a></p>

    <p>本文分享一些 Good UI 在一些项目中获取的设计以及运营策略等方面的经验。Good UI 是一家研究用户体验的设计机构。我们知道成功的页面设计不仅有很高的转化率更便于用户使用，既能满足商业目标更能为用户带来良好的体验。</p>
  </li>
  <li>
    <p><a href="https://medium.com/sebs-top-tips/material-navigation-drawer-sizing-558aea1ad266">Material Navigation Drawer sizing</a></p>

    <p>本文分析了Material的抽屉导航的大小到底多少才最符合设计规范和美观。</p>
  </li>
</ol>

<h4 id="section-5">素材</h4>

<ol>
  <li>
    <p><a href="https://dribbble.com/shots/1683873-Android-L-GUI-KIT">Android L GUI KIT</a></p>

    <p>Android L GUI KIT。</p>
  </li>
</ol>

<h4 id="section-6">工具</h4>

<ol>
  <li>
    <p><a href="http://oven.chrometaphore.com">OVEN</a></p>

    <p>A BETTER ASSETS WORKFLOW For Photoshop CC / 2014。</p>

    <p><img src="http://oven.chrometaphore.com/assets/oven_panel_screenshot@2x.png" alt="image" /></p>
  </li>
</ol>

<hr />
<p>版权声明：欢迎自由转载-非商用-非衍生-保持署名 | <a href="http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh">Creative Commons BY-NC-ND 3.0</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android开发周报 Issue#8]]></title>
    <link href="http://www.inferjay.com/blog/2014/11/24/android-dev-weekly-issue-8/"/>
    <updated>2014-11-24T10:56:01+08:00</updated>
    <id>http://www.inferjay.com/blog/2014/11/24/android-dev-weekly-issue-8</id>
    <content type="html"><![CDATA[<h3 id="section">文章</h3>

<ol>
  <li>
    <p><a href="http://blog.isming.me/2014/11/21/use-gradle-new/">使用gradle构建android项目（续）</a></p>

    <p>在几个月之前，我已经写过一篇使用gradle构建android项目的博客了<a href="http://blog.isming.me/2014/05/20/android4gradle/">http://blog.isming.me/2014/05/20/android4gradle/</a>,那篇文章已经介绍了如何使用gradle进行项目构建，以及为谷歌会推荐使用gradle。当时android的gradle插件是0.11.0,现在插件的版本已经是0.14.3了，对于一些老的方法和api，有一些已经被移除，无法使用。因此有必要再写一篇博客介绍这些被移除的部分和替代方案。同时由于个人学识原因，当时没有介绍的一些技巧，其他功能，也会在本文中进行介绍。</p>
  </li>
  <li>
    <p><a href="http://www.csdn.net/article/2014-11-21/2822753-material-design-libs/1">直接拿来用！十大Material Design开源项目</a></p>

    <p>本文详细介绍了十个Material Design开源项目，从示例、FAB、菜单、动画、Ripple到Dialog，看被誉为“Google第一次在设计语言和规范上超越了Apple”的Material Design是如何逐渐成为App的一种全新设计标准。另外推荐大家去 Github 上 Star 或者 Fork <a href="https://github.com/lightSky/MaterialDesignCenter"><code>MaterialDesignCenter</code></a>这个项目，该收集整理了</p>
  </li>
  <li>
    <p><a href="http://www.cnblogs.com/ct2011/p/4100132.html">放弃WebView，使用Crosswalk做富文本编辑器</a></p>

    <p>Android WebView做普通浏览还好，做富文本编辑器（<code>document.body.contentEditable=true;</code>），常常会遇到各种奇葩的bug，而且很难修复。尽管Google在版本迭代中不断修复bug，但依旧没法用它来做富文本编辑。</p>
  </li>
  <li>
    <p><a href="http://blog.isming.me/2014/11/17/material-design-for-pre-lollipop-android/">在低版本android系统上实现Material设计应用</a></p>

    <p>​Material Design真的很好看，动画效果真的很实用。前面也写了一些文章介绍如何编写Material风格的程序，但是很多都是一些新的api，低版本上面没有这些api，我们没办法使用。但是不用气馁，google官方，以及一些大牛，给我们提供了一些程序，让我们在低版本上面可以实现Material风格的程序，这里就给大家介绍一下。</p>
  </li>
</ol>

<!--more-->

<ol>
  <li>
    <p><a href="http://qichaochen.github.io/2014/11/17/106-Android-RoundedBitmapDrawable/">使用RoundedBitmapDrawable快速生成圆角和圆形图片</a></p>

    <p>在I/O大会之后，Google发布了新的Support lib，其中有一个是RoundedBitmapDrawable类，通过这个类可以很容易实现圆角和圆形图片。</p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/androidsecurity/article/details/41207959">“黑暗潜伏者” – 手机病毒新型攻击方式分析</a></p>

    <p>近期百度安全实验室发现一款“黑暗潜伏者”新型手机病毒。该病毒附着在众多壁纸和游戏类应用中。截至目前，已经发现感染该病毒的应用超过1万多款，感染用户超过3000万。</p>
  </li>
  <li>
    <p><a href="http://blog.jobbole.com/78995/">正确使用Android性能分析工具——TraceView</a></p>

    <p>TraceView是一个非常强大的性能分析工具，因为Android 官网对这个工具的使用介绍文档很少，而且一些中文博客中写的也都是抄来抄去，没有讲到底怎么使用。</p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/xyz_lmn/article/details/41052977#0-tsina-1-81289-397232819ff9a47a7b7e80a40613cfe1">移动web开发框架研究</a></p>

    <p>纯粹的总结一下移动web开发框架，移动web开发框架有jQuery Mobile 、Sencha Touch等等,他们都来源于web开发，是成熟的框架，jQuery Mobile出自于jQuery家族，Sencha Touch来自于ExtJS。jQuery Mobile 和Sencha Touch都是比较成熟老牌的框架，项目中也有应用。国内也有公司，像BAT巨头也在探索和实现了适合自己的移动web框架。</p>
  </li>
</ol>

<h3 id="section-1">代码&amp;开源库</h3>

<ol>
  <li>
    <p><a href="https://github.com/ekx/GitLabAndroid">GitLabAndroid</a></p>

    <p>GitLab的非官方开源客户端.</p>

    <p><img src="https://github.com/ekx/GitLabAndroid/raw/master/screenshots.png" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/snowdream/awesome-android">awesome-android</a></p>

    <p>收集整理了Gihub上Android相关的各种开源控件。</p>
  </li>
  <li>
    <p><a href="https://github.com/vince-styling/Netroid">Netroid</a></p>

    <p>Netroid是一个基于Volley实现的Android Http库。提供执行网络请求、缓存返回结果、批量图片加载、大文件断点下载的常见Http交互功能。致力于避免每个项目重复开发基础Http功能，实现显著地缩短开发周期的愿景。</p>
  </li>
  <li>
    <p><a href="https://github.com/kyze8439690/RevealLayout">RevealLayout</a></p>

    <p>附带一些Reveal动画效果的Layout，支持Android4.0以上系统。</p>
  </li>
  <li>
    <p><a href="https://github.com/03uk/CircularReveal">CircularReveal</a></p>

    <p>可以让你在2.3+系统使用Android 5.0的Reveal动画效果的库。</p>
  </li>
  <li>
    <p><a href="https://github.com/pavlospt/RoundedLetterView">RoundedLetterView</a></p>

    <p>仿Android 5.0联系人App的列表效果。</p>
  </li>
  <li>
    <p><a href="http://git.oschina.net/shelwee/UpdateHelper">UpdateHelper</a></p>

    <p>UpdateHelper是一个为了简化Android App的迭代升级开发的Android Library。</p>
  </li>
</ol>

<h3 id="section-2">新闻</h3>

<ol>
  <li>
    <p><a href="http://www.csdn.net/article/2014-11-20/2822732-google-play-android-dev-china">不任性了！Google Play宣布开通国内开发者通道</a></p>

    <p>Google今天宣布，中国的开发者现在可以通过Google Play将付费应用程序向130个国家进行发布。开发者可以利用Google Play发布免费及付费应用程序，并支持应用程序内购买和订阅，收入将汇至开发者在中国本地银行账户。</p>
  </li>
  <li>
    <p><a href="http://linux.cn/article-4249-1.html">安卓编年史(1)</a></p>

    <p>让我们跟着安卓从0.5版本到4.4的无尽迭代来看看它的发展历史。安卓已经以不止一种形式陪伴了我们六年以上。在这段时间内，我们已经看到了不同于任何已有开发周期的，绝对惊人的变化速度。当Google卷入智能手机的战场中时，它拿出了它的快速迭代，Web风格的更新周期，把它们应用到了开发这个操作系统之中，而结果就是突击式的持续改进。</p>
  </li>
</ol>

<h3 id="section-3">视频</h3>

<ol>
  <li>
    <p><a href="http://www.youku.com/playlist_show/id_23094862.html">Google Play 中国开发者中文入门视频</a></p>

    <p>Google Developers 最新发布的 3个 Google Play 中国开发者中文入门视频。教你怎么注册成为Google play开发者。</p>
  </li>
  <li>
    <p><a href="http://v.youku.com/v_show/id_XODMwMjg5Nzg4.html">Tutorial Enhancing Android UI with Custom Views</a></p>

    <p>Android自定义View视频教程，中文字幕，示例源码地址:http://pan.baidu.com/s/1pJp0CIn</p>
  </li>
  <li>
    <p><a href="http://www.youku.com/playlist_show/id_23078962.html">Droidcon London 2014的视频</a></p>

    <p>包含《What’s New in Android》、《Material design &amp; implementation》和《Deep Dive Into the Gradle》这个3个视频，都是来自官方工程师的干货。</p>
  </li>
  <li>
    <p><a href="http://www.infoq.com/cn/presentations/expose-mobile-application-performance">移动应用性能揭秘</a></p>

    <p>目前大部分移动应用都是需要与服务器进行交互的，哪么影响这些应用程序性能的主要因素有哪些？如网络请求、IO操作、多线程等都会对性能产生影响，本议题将分享基调网络在移动应用性能监控中遇到的与移动应用性能提升相关的代码问题，希望能够为程序员开发高性能的应用提供帮助。</p>
  </li>
</ol>

<h3 id="section-4">工具</h3>

<ol>
  <li>
    <p><a href="https://developer.magnet.com">rest2mobile</a></p>

    <p>一个可以将REST services生成Objective-C、Javascript和Java代码的开源工具，并且提供了支持Xcode、Android Studio &amp; IntelliJ IDEA的生成代码的插件以及可以生成iOS，JS和Android跨平台代码的命令行工具。</p>

    <p><img src="http://ww2.sinaimg.cn/bmiddle/8a41f469jw1emk7cqynx7j21cw1660xx.jpg" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://chrome.google.com/webstore/detail/octotree/bkhaagjahfmjljalopjnoealnfndnagc">树形展示 Github 项目代码的Chrome插件</a> （@程序员的那些事）</p>

    <p>国外程序员 Buu Nguyen 做的一个 Chrome 插件，安装之后，浏览托管在Github上的项目，可看到左侧的树形结构，更方便查看代码（有点 IDE 的感觉，用着好来点个赞吧）。</p>

    <p><img src="http://ww4.sinaimg.cn/bmiddle/7cc829d3jw1egep4g1ljcj20h10ae3zy.jpg" alt="image" /></p>
  </li>
  <li>
    <p><a href="http://jgilfelt.github.io/AndroidAssetStudio/icons-launcher.html#foreground.space.trim=1&amp;foreground.space.pad=0&amp;foreColor=E8EAF6%2C0&amp;crop=0&amp;backgroundShape=square&amp;backColor=3F51B5%2C100&amp;effects=none&amp;elevate=0">Android Launcher图标在线生成工具</a></p>

    <p>一个帮助你快速生成Android Launcher图标的在线生成工具，此工具是由Google 的 <a href="https://github.com/romannurik"><code>Roman Nurik</code></a>大神开发的 <a href="https://github.com/romannurik/AndroidAssetStudio"><code>AndroidAssetStudio</code></a> 系列Android资源自动生成工具（包含：）中的其中一个，支持从指定图片、文字和内置的icon生成Android Launcher图标，并且可以设置图标的前景和背景色，缩放类型、图标形状等。</p>

    <p><img src="http://ww4.sinaimg.cn/bmiddle/005GSHYzjw1emit4rrvf7j318g158tds.jpg" alt="image" /></p>
  </li>
  <li>
    <p><a href="http://astralapp.com">Astral</a>（@WillYan）</p>

    <p>可以把你Github上加星的项目进行标签管理，用Github账号授权登陆即可，强迫症患者的福音啊😄。</p>

    <p><img src="http://ww2.sinaimg.cn/bmiddle/5fb87788tw1emils89ritj20x50g6tb2.jpg" alt="image" /></p>
  </li>
  <li>
    <p><a href="http://tools.android.com/download/studio/canary/1-0rc1">Android Studio 1.0 Release Candidate 1</a>	
 这次发布的是Android Studio 1.0候选版，那么距离发布Android Studio 1.0 正式版已经不远喽😄。此次更新主要修复了一些Bug，更换了新的图标和启动界面以及包含了Android Gradle插件所需要的所有依赖，当你新建一个项目的时候就不需要联网了。
 墙内下载地址：<a href="http://www.androiddevtools.cn/#android-studio">http://www.androiddevtools.cn/#android-studio</a></p>
  </li>
  <li>
    <p><a href="https://tinyjpg.com">TinyJPG</a></p>

    <p>一个支持jpg和png格式的图片压缩工具，只压图片的大小而图片的质量不会损失。</p>

    <p><img src="http://ww1.sinaimg.cn/bmiddle/8a41f469jw1emhtewxnysj21kw0imagj.jpg" alt="image" /></p>
  </li>
  <li>
    <p><a href="http://www.appiconsizes.com">IOS and Android App Icon size generator</a></p>

    <p>一键生成iPhone, Android, IOS, Facebook, web touch icons, Blackberry, Windows Phone, Bada and WebOS 等系统App图标的在线工具.</p>
  </li>
  <li>
    <p><a href="http://google.github.io/fplutil/">fplutil</a></p>

    <p>一套可以用于开发Android和其他跨平台应用的库和工具。</p>
  </li>
</ol>

<hr />
<p>版权声明：欢迎自由转载-非商用-非衍生-保持署名 | <a href="http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh">Creative Commons BY-NC-ND 3.0</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android开发周报 Issue#7]]></title>
    <link href="http://www.inferjay.com/blog/2014/11/17/android-dev-weekly-issue-7/"/>
    <updated>2014-11-17T16:31:09+08:00</updated>
    <id>http://www.inferjay.com/blog/2014/11/17/android-dev-weekly-issue-7</id>
    <content type="html"><![CDATA[<h3 id="section">新闻</h3>

<ol>
  <li>
    <p><a href="http://www.csdn.net/article/2014-11-14/2822647-12-great-lollipop-apis/1">盘点最受开发者喜爱的Android 5.0 Lollipop API</a></p>

    <p>作为Android系统的一次重大升级，Android 5.0 Lollipop突出采用全新的Material Design设计语言，不但在视觉和操作上更胜一筹，还包含扩展UI工具包供开发者使用，为应用添加3D实时阴影，可缩放矢量“drawbles”以及流畅的动画效果。本文着重介绍了其中值得开发者深爱的12款API，赶紧一睹为快吧！</p>
  </li>
  <li>
    <p><a href="http://news.cnblogs.com/n/508431/">.NET开源了，VS开始支持Android和iOS编程并自带Android模拟器</a></p>

    <p>北京时间今天凌晨的 Connect (); 大会上，多少程序员的假想成为现实。.NET 开源，集成 Clang 和 LLVM 并且自带 Android 模拟器，这意味着 Visual Studio 这个当下最好没有之一的 IDE 正式支持编写 Android 和 iOS 程序。</p>
  </li>
  <li>
    <p><a href="http://digi.it.sohu.com/20141113/n405991228.shtml">Android 5.0正式开启：Nexus系列最早更新</a>	
 从谷歌给出的公告来看，今天就将会有用户收到Android 5.0的更新提示，而首批设备包含了Nexus 4、Nexus 5、Nexus 7以及Nexus 10。值得一提的是，今天早些时候，摩托罗拉也开始向Moto G的用户提供5.0系统的升级，随后到来的是Moto X，很快LG的G3也将得到系统的升级。</p>
  </li>
</ol>

<h3 id="section-1">文章</h3>

<ol>
  <li>
    <p><a href="http://blog.csdn.net/xiaanming/article/details/41084843#0-tsina-1-26268-397232819ff9a47a7b7e80a40613cfe1">Android 那些你所不知道的Bitmap对象详解</a></p>

    <p>我们知道Android系统分配给每个应用程序的内存是有限的，Bitmap作为消耗内存大户，我们对Bitmap的管理稍有不当就可能引发OutOfMemoryError，而Bitmap对象在不同的Android版本中存在一些差异，今天就给大家介绍下这些差异，并提供一些在使用Bitmap的需要注意的地方。</p>
  </li>
  <li>
    <p><a href="http://greenrobot.me/category/devpost/">如何给你的Android 安装文件（APK）瘦身</a></p>

    <p>Android的apk文件越来越大了这已经是一个不争的事实。在Android 还是最初版本的时候，一个app的apk文件大小也还只有2 MB左右，到了现在，一个app的apk文件大小已经升级到10MB到20MB这个范围了。apk文件大小的爆炸式增长主要是因为用户对app质量的期待越来越高以及开发者的开发经验增长。</p>
  </li>
  <li>
    <p><a href="http://blog.isming.me/tags/material-design/">创建Material Design风格的Android应用系列文章</a></p>

    <p>随着Android 5.0的发布，Android Developer网站也更新了，增加了创建Material Design风格的Android应用指南,也更新了Support Library，在support library增加了一些Material Design风格的控件和动画等，这里给大家简单介绍一下怎样开发aterial Design风格的Android应用。</p>
  </li>
</ol>

<!--more-->

<ol>
  <li>
    <p><a href="http://www.importnew.com/13107.html">从Java代码到字节码（1）</a></p>

    <p>理解Java代码是如何被编译为字节码并在Java虚拟机（JVM）上执行是非常重要的，这将帮助理解你的程序是如何执行的。这样的理解不仅仅能够让你在逻辑上更好的掌握语言特性，而且能够有机会理解在做出重要决定时所需的权衡以及相应的副作用。</p>
  </li>
  <li>
    <p><a href="http://www.pedant.cn/2014/07/04/webview-js-java-interface-research/">在WebView中如何让JS与Java安全地互相调用</a></p>

    <p>在现在安卓应用原生开发中，为了追求开发的效率以及移植的便利性，使用WebView作为业务内容展示与交互的主要载体是个不错的折中方案。那么在这种Hybrid(混合式) App中，难免就会遇到页面JS需要与Java相互调用，调用Java方法去做那部分网页JS不能完成的功能。</p>
  </li>
  <li>
    <p><a href="http://droidyue.com/blog/2014/11/08/understanding-garbage-collection-output-messages-in-android/">译文：理解Android中垃圾回收日志信息</a></p>

    <p>如果你是一名Android开发者并且常常看程序日志的话，你会经常在logcat的调试日志窗口看到像 <code>GC_CONCURRENT freed 178K, 41% free 3673K/6151K, external 0K/0K, paused 2ms+2ms</code> 这样的日志信息，这就是Android系统垃圾回收的部分输出信息，本文将具体介绍这些日志信息的每一部分的含义来帮助帮助大家更好地了解垃圾回收的运行情况。</p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/t12x3456/article/details/40837287">Android 使用android-support-multidex解决Dex超出方法数的限制问题,让你的应用不再爆棚</a></p>

    <p>随着应用不断迭代，业务线的扩展,应用越来越大(比如集成了各种第三方sdk或者公共支持的jar包,项目耦合性高，重复作用的类越来越多)，相信很多人都遇到过如下的错误: <code>java.lang.IllegalArgumentException: method ID not in [0, 0xffff]: 65536 </code> 没错，你的应用中的Dex 文件方法数超过了最大值65536的上限,简单来说，应用爆棚了.</p>
  </li>
</ol>

<h3 id="section-2">代码&amp;开源库</h3>

<ol>
  <li>
    <p><a href="https://github.com/lightSky/MaterialDesignCenter">MaterialDesignCenter</a></p>

    <p>收集整理了Android Material Design相关的设计资源、视频教程、译文教程和开源库等。</p>
  </li>
  <li>
    <p><a href="https://github.com/BlueMor/Android-PullLayout">Android-PullLayout</a></p>

    <p>仿UC天气下拉和微信下拉眼睛</p>

    <p><img src="https://raw.githubusercontent.com/BlueMor/Android-PullLayout/master/screenshoot/123.gif" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/pedant/safe-java-js-webview-bridge">safe-java-js-webview-bridge</a></p>

    <p>抛弃使用高风险的WebView addJavascriptInterface方法，利用onJsPrompt解析纯JSON字符串，来实现网页JS层反射调用Java方法，同时通过对js层调用函数及回调函数的包装，支持方法参数传入所有已知的类型，包括number、string、boolean、object、function。</p>
  </li>
  <li>
    <p><a href="https://github.com/lzyzsd/CircleProgress">CircleProgress</a></p>

    <p>各种样式的自定义圆形进度条。</p>

    <p><img src="https://raw.githubusercontent.com/lzyzsd/CircleProgress/master/demos/circle_progress.gif" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/kyleduo/SwitchButton">SwitchButton</a></p>

    <p>同时支持Material Design和iOS7风格的SwitchButton。</p>

    <p><img src="https://raw.githubusercontent.com/kyleduo/SwitchButton/master/preview/easy_to_style.png" alt="image" /></p>
  </li>
</ol>

<h3 id="section-3">视频</h3>

<ol>
  <li>
    <p><a href="http://www.jikexueyuan.com/course/364.html?hmsr=sina_weibo_VisualStudio">使用Visual Studio 2015开发Android应用</a></p>

    <p>2014年的微软Connect();在线开发者大会在11月12日和11月13日举行。在大会上，微软公布了很多新的特性和功能。其中最吸引人的是.Net开源和Android模拟器。显示了微软更开放的战略思想。并突出了微软CEO移动优先和云优先的理念。</p>
  </li>
</ol>

<h3 id="section-4">工具</h3>

<ol>
  <li>
    <p><a href="https://github.com/akonior/icon-version">icon-version</a></p>

    <p>可以给Android的App图标添加版本号和变种名字的Android gradle插件。</p>

    <p><img src="https://github.com/akonior/icon-version/raw/master/doc/icon-version-screenshot.png" alt="image" /></p>
  </li>
</ol>

<h3 id="section-5">书</h3>

<ol>
  <li>
    <p><a href="http://snowdream86.gitbooks.io/github-cheat-sheet/content/zh/index.html">GitHub秘籍</a></p>

    <p>本秘籍收录了一些Git和Github非常酷同时又少有人知的功能。灵感来自于Zach Holman在2012年Aloha Ruby Conference和2013年WDCNZ上所做的演讲：Git and GitHub Secrets(slides)和More Git and GitHub Secrets(slides)。</p>
  </li>
</ol>

<h3 id="section-6">设计</h3>

<h4 id="section-7">文章</h4>

<ol>
  <li>
    <p><a href="http://mux.baidu.com/?p=3367">切图小贴士</a></p>

    <p>用户手中看到的产品界面，并非设计师呕心沥血创作的效果图，而是一个个单独的切图经由开发同学技术实现。切图作为设计师与开发者之间的桥梁，它的作用很关键，合适的切图、精准的位置可以最大限度的还原效果图的设计，精妙的切图更会有事半功倍的效果哦！	</p>
  </li>
</ol>

]]></content>
  </entry>
  
</feed>
