<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: AndroidDevWeekly | 脉脉不得语的技术博客]]></title>
  <link href="http://www.inferjay.com/blog/categories/androiddevweekly/atom.xml" rel="self"/>
  <link href="http://www.inferjay.com/"/>
  <updated>2014-11-24T11:28:50+08:00</updated>
  <id>http://www.inferjay.com/</id>
  <author>
    <name><![CDATA[inferjay]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Android开发周报 Issue#8]]></title>
    <link href="http://www.inferjay.com/blog/2014/11/24/android-dev-weekly-issue-8/"/>
    <updated>2014-11-24T10:56:01+08:00</updated>
    <id>http://www.inferjay.com/blog/2014/11/24/android-dev-weekly-issue-8</id>
    <content type="html"><![CDATA[<h3 id="section">文章</h3>

<ol>
  <li>
    <p><a href="http://blog.isming.me/2014/11/21/use-gradle-new/">使用gradle构建android项目（续）</a></p>

    <p>在几个月之前，我已经写过一篇使用gradle构建android项目的博客了<a href="http://blog.isming.me/2014/05/20/android4gradle/">http://blog.isming.me/2014/05/20/android4gradle/</a>,那篇文章已经介绍了如何使用gradle进行项目构建，以及为谷歌会推荐使用gradle。当时android的gradle插件是0.11.0,现在插件的版本已经是0.14.3了，对于一些老的方法和api，有一些已经被移除，无法使用。因此有必要再写一篇博客介绍这些被移除的部分和替代方案。同时由于个人学识原因，当时没有介绍的一些技巧，其他功能，也会在本文中进行介绍。</p>
  </li>
  <li>
    <p><a href="http://www.csdn.net/article/2014-11-21/2822753-material-design-libs/1">直接拿来用！十大Material Design开源项目</a></p>

    <p>本文详细介绍了十个Material Design开源项目，从示例、FAB、菜单、动画、Ripple到Dialog，看被誉为“Google第一次在设计语言和规范上超越了Apple”的Material Design是如何逐渐成为App的一种全新设计标准。另外推荐大家去 Github 上 Star 或者 Fork <a href="https://github.com/lightSky/MaterialDesignCenter"><code>MaterialDesignCenter</code></a>这个项目，该收集整理了</p>
  </li>
  <li>
    <p><a href="http://www.cnblogs.com/ct2011/p/4100132.html">放弃WebView，使用Crosswalk做富文本编辑器</a></p>

    <p>Android WebView做普通浏览还好，做富文本编辑器（<code>document.body.contentEditable=true;</code>），常常会遇到各种奇葩的bug，而且很难修复。尽管Google在版本迭代中不断修复bug，但依旧没法用它来做富文本编辑。</p>
  </li>
  <li>
    <p><a href="http://blog.isming.me/2014/11/17/material-design-for-pre-lollipop-android/">在低版本android系统上实现Material设计应用</a></p>

    <p>​Material Design真的很好看，动画效果真的很实用。前面也写了一些文章介绍如何编写Material风格的程序，但是很多都是一些新的api，低版本上面没有这些api，我们没办法使用。但是不用气馁，google官方，以及一些大牛，给我们提供了一些程序，让我们在低版本上面可以实现Material风格的程序，这里就给大家介绍一下。</p>
  </li>
</ol>

<!--more-->

<ol>
  <li>
    <p><a href="http://qichaochen.github.io/2014/11/17/106-Android-RoundedBitmapDrawable/">使用RoundedBitmapDrawable快速生成圆角和圆形图片</a></p>

    <p>在I/O大会之后，Google发布了新的Support lib，其中有一个是RoundedBitmapDrawable类，通过这个类可以很容易实现圆角和圆形图片。</p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/androidsecurity/article/details/41207959">“黑暗潜伏者” – 手机病毒新型攻击方式分析</a></p>

    <p>近期百度安全实验室发现一款“黑暗潜伏者”新型手机病毒。该病毒附着在众多壁纸和游戏类应用中。截至目前，已经发现感染该病毒的应用超过1万多款，感染用户超过3000万。</p>
  </li>
  <li>
    <p><a href="http://blog.jobbole.com/78995/">正确使用Android性能分析工具——TraceView</a></p>

    <p>TraceView是一个非常强大的性能分析工具，因为Android 官网对这个工具的使用介绍文档很少，而且一些中文博客中写的也都是抄来抄去，没有讲到底怎么使用。</p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/xyz_lmn/article/details/41052977#0-tsina-1-81289-397232819ff9a47a7b7e80a40613cfe1">移动web开发框架研究</a></p>

    <p>纯粹的总结一下移动web开发框架，移动web开发框架有jQuery Mobile 、Sencha Touch等等,他们都来源于web开发，是成熟的框架，jQuery Mobile出自于jQuery家族，Sencha Touch来自于ExtJS。jQuery Mobile 和Sencha Touch都是比较成熟老牌的框架，项目中也有应用。国内也有公司，像BAT巨头也在探索和实现了适合自己的移动web框架。</p>
  </li>
</ol>

<h3 id="section-1">代码&amp;开源库</h3>

<ol>
  <li>
    <p><a href="https://github.com/ekx/GitLabAndroid">GitLabAndroid</a></p>

    <p>GitLab的非官方开源客户端.</p>

    <p><img src="https://github.com/ekx/GitLabAndroid/raw/master/screenshots.png" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/snowdream/awesome-android">awesome-android</a></p>

    <p>收集整理了Gihub上Android相关的各种开源控件。</p>
  </li>
  <li>
    <p><a href="https://github.com/vince-styling/Netroid">Netroid</a></p>

    <p>Netroid是一个基于Volley实现的Android Http库。提供执行网络请求、缓存返回结果、批量图片加载、大文件断点下载的常见Http交互功能。致力于避免每个项目重复开发基础Http功能，实现显著地缩短开发周期的愿景。</p>
  </li>
  <li>
    <p><a href="https://github.com/kyze8439690/RevealLayout">RevealLayout</a></p>

    <p>附带一些Reveal动画效果的Layout，支持Android4.0以上系统。</p>
  </li>
  <li>
    <p><a href="https://github.com/03uk/CircularReveal">CircularReveal</a></p>

    <p>可以让你在2.3+系统使用Android 5.0的Reveal动画效果的库。</p>
  </li>
  <li>
    <p><a href="https://github.com/pavlospt/RoundedLetterView">RoundedLetterView</a></p>

    <p>仿Android 5.0联系人App的列表效果。</p>
  </li>
  <li>
    <p><a href="http://git.oschina.net/shelwee/UpdateHelper">UpdateHelper</a></p>

    <p>UpdateHelper是一个为了简化Android App的迭代升级开发的Android Library。</p>
  </li>
</ol>

<h3 id="section-2">新闻</h3>

<ol>
  <li>
    <p><a href="http://www.csdn.net/article/2014-11-20/2822732-google-play-android-dev-china">不任性了！Google Play宣布开通国内开发者通道</a></p>

    <p>Google今天宣布，中国的开发者现在可以通过Google Play将付费应用程序向130个国家进行发布。开发者可以利用Google Play发布免费及付费应用程序，并支持应用程序内购买和订阅，收入将汇至开发者在中国本地银行账户。</p>
  </li>
  <li>
    <p><a href="http://linux.cn/article-4249-1.html">安卓编年史(1)</a></p>

    <p>让我们跟着安卓从0.5版本到4.4的无尽迭代来看看它的发展历史。安卓已经以不止一种形式陪伴了我们六年以上。在这段时间内，我们已经看到了不同于任何已有开发周期的，绝对惊人的变化速度。当Google卷入智能手机的战场中时，它拿出了它的快速迭代，Web风格的更新周期，把它们应用到了开发这个操作系统之中，而结果就是突击式的持续改进。</p>
  </li>
</ol>

<h3 id="section-3">视频</h3>

<ol>
  <li>
    <p><a href="http://www.youku.com/playlist_show/id_23094862.html">Google Play 中国开发者中文入门视频</a></p>

    <p>Google Developers 最新发布的 3个 Google Play 中国开发者中文入门视频。教你怎么注册成为Google play开发者。</p>
  </li>
  <li>
    <p><a href="http://v.youku.com/v_show/id_XODMwMjg5Nzg4.html">Tutorial Enhancing Android UI with Custom Views</a></p>

    <p>Android自定义View视频教程，中文字幕，示例源码地址:http://pan.baidu.com/s/1pJp0CIn</p>
  </li>
  <li>
    <p><a href="http://www.youku.com/playlist_show/id_23078962.html">Droidcon London 2014的视频</a></p>

    <p>包含《What’s New in Android》、《Material design &amp; implementation》和《Deep Dive Into the Gradle》这个3个视频，都是来自官方工程师的干货。</p>
  </li>
  <li>
    <p><a href="http://www.infoq.com/cn/presentations/expose-mobile-application-performance">移动应用性能揭秘</a></p>

    <p>目前大部分移动应用都是需要与服务器进行交互的，哪么影响这些应用程序性能的主要因素有哪些？如网络请求、IO操作、多线程等都会对性能产生影响，本议题将分享基调网络在移动应用性能监控中遇到的与移动应用性能提升相关的代码问题，希望能够为程序员开发高性能的应用提供帮助。</p>
  </li>
</ol>

<h3 id="section-4">工具</h3>

<ol>
  <li>
    <p><a href="https://developer.magnet.com">rest2mobile</a></p>

    <p>一个可以将REST services生成Objective-C、Javascript和Java代码的开源工具，并且提供了支持Xcode、Android Studio &amp; IntelliJ IDEA的生成代码的插件以及可以生成iOS，JS和Android跨平台代码的命令行工具。</p>

    <p><img src="http://ww2.sinaimg.cn/bmiddle/8a41f469jw1emk7cqynx7j21cw1660xx.jpg" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://chrome.google.com/webstore/detail/octotree/bkhaagjahfmjljalopjnoealnfndnagc">树形展示 Github 项目代码的Chrome插件</a> （@程序员的那些事）</p>

    <p>国外程序员 Buu Nguyen 做的一个 Chrome 插件，安装之后，浏览托管在Github上的项目，可看到左侧的树形结构，更方便查看代码（有点 IDE 的感觉，用着好来点个赞吧）。</p>

    <p><img src="http://ww4.sinaimg.cn/bmiddle/7cc829d3jw1egep4g1ljcj20h10ae3zy.jpg" alt="image" /></p>
  </li>
  <li>
    <p><a href="http://jgilfelt.github.io/AndroidAssetStudio/icons-launcher.html#foreground.space.trim=1&amp;foreground.space.pad=0&amp;foreColor=E8EAF6%2C0&amp;crop=0&amp;backgroundShape=square&amp;backColor=3F51B5%2C100&amp;effects=none&amp;elevate=0">Android Launcher图标在线生成工具</a></p>

    <p>一个帮助你快速生成Android Launcher图标的在线生成工具，此工具是由Google 的 <a href="https://github.com/romannurik"><code>Roman Nurik</code></a>大神开发的 <a href="https://github.com/romannurik/AndroidAssetStudio"><code>AndroidAssetStudio</code></a> 系列Android资源自动生成工具（包含：）中的其中一个，支持从指定图片、文字和内置的icon生成Android Launcher图标，并且可以设置图标的前景和背景色，缩放类型、图标形状等。</p>

    <p><img src="http://ww4.sinaimg.cn/bmiddle/005GSHYzjw1emit4rrvf7j318g158tds.jpg" alt="image" /></p>
  </li>
  <li>
    <p><a href="http://astralapp.com">Astral</a>（@WillYan）</p>

    <p>可以把你Github上加星的项目进行标签管理，用Github账号授权登陆即可，强迫症患者的福音啊😄。</p>

    <p><img src="http://ww2.sinaimg.cn/bmiddle/5fb87788tw1emils89ritj20x50g6tb2.jpg" alt="image" /></p>
  </li>
  <li>
    <p><a href="http://tools.android.com/download/studio/canary/1-0rc1">Android Studio 1.0 Release Candidate 1</a>	
 这次发布的是Android Studio 1.0候选版，那么距离发布Android Studio 1.0 正式版已经不远喽😄。此次更新主要修复了一些Bug，更换了新的图标和启动界面以及包含了Android Gradle插件所需要的所有依赖，当你新建一个项目的时候就不需要联网了。
 墙内下载地址：<a href="http://www.androiddevtools.cn/#android-studio">http://www.androiddevtools.cn/#android-studio</a></p>
  </li>
  <li>
    <p><a href="https://tinyjpg.com">TinyJPG</a></p>

    <p>一个支持jpg和png格式的图片压缩工具，只压图片的大小而图片的质量不会损失。</p>

    <p><img src="http://ww1.sinaimg.cn/bmiddle/8a41f469jw1emhtewxnysj21kw0imagj.jpg" alt="image" /></p>
  </li>
  <li>
    <p><a href="http://www.appiconsizes.com">IOS and Android App Icon size generator</a></p>

    <p>一键生成iPhone, Android, IOS, Facebook, web touch icons, Blackberry, Windows Phone, Bada and WebOS 等系统App图标的在线工具.</p>
  </li>
  <li>
    <p><a href="http://google.github.io/fplutil/">fplutil</a></p>

    <p>一套可以用于开发Android和其他跨平台应用的库和工具。</p>
  </li>
</ol>

<hr />
<p>版权声明：欢迎自由转载-非商用-非衍生-保持署名 | <a href="http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh">Creative Commons BY-NC-ND 3.0</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android开发周报 Issue#7]]></title>
    <link href="http://www.inferjay.com/blog/2014/11/17/android-dev-weekly-issue-7/"/>
    <updated>2014-11-17T16:31:09+08:00</updated>
    <id>http://www.inferjay.com/blog/2014/11/17/android-dev-weekly-issue-7</id>
    <content type="html"><![CDATA[<h3 id="section">新闻</h3>

<ol>
  <li>
    <p><a href="http://www.csdn.net/article/2014-11-14/2822647-12-great-lollipop-apis/1">盘点最受开发者喜爱的Android 5.0 Lollipop API</a></p>

    <p>作为Android系统的一次重大升级，Android 5.0 Lollipop突出采用全新的Material Design设计语言，不但在视觉和操作上更胜一筹，还包含扩展UI工具包供开发者使用，为应用添加3D实时阴影，可缩放矢量“drawbles”以及流畅的动画效果。本文着重介绍了其中值得开发者深爱的12款API，赶紧一睹为快吧！</p>
  </li>
  <li>
    <p><a href="http://news.cnblogs.com/n/508431/">.NET开源了，VS开始支持Android和iOS编程并自带Android模拟器</a></p>

    <p>北京时间今天凌晨的 Connect (); 大会上，多少程序员的假想成为现实。.NET 开源，集成 Clang 和 LLVM 并且自带 Android 模拟器，这意味着 Visual Studio 这个当下最好没有之一的 IDE 正式支持编写 Android 和 iOS 程序。</p>
  </li>
  <li>
    <p><a href="http://digi.it.sohu.com/20141113/n405991228.shtml">Android 5.0正式开启：Nexus系列最早更新</a>	
 从谷歌给出的公告来看，今天就将会有用户收到Android 5.0的更新提示，而首批设备包含了Nexus 4、Nexus 5、Nexus 7以及Nexus 10。值得一提的是，今天早些时候，摩托罗拉也开始向Moto G的用户提供5.0系统的升级，随后到来的是Moto X，很快LG的G3也将得到系统的升级。</p>
  </li>
</ol>

<h3 id="section-1">文章</h3>

<ol>
  <li>
    <p><a href="http://blog.csdn.net/xiaanming/article/details/41084843#0-tsina-1-26268-397232819ff9a47a7b7e80a40613cfe1">Android 那些你所不知道的Bitmap对象详解</a></p>

    <p>我们知道Android系统分配给每个应用程序的内存是有限的，Bitmap作为消耗内存大户，我们对Bitmap的管理稍有不当就可能引发OutOfMemoryError，而Bitmap对象在不同的Android版本中存在一些差异，今天就给大家介绍下这些差异，并提供一些在使用Bitmap的需要注意的地方。</p>
  </li>
  <li>
    <p><a href="http://greenrobot.me/category/devpost/">如何给你的Android 安装文件（APK）瘦身</a></p>

    <p>Android的apk文件越来越大了这已经是一个不争的事实。在Android 还是最初版本的时候，一个app的apk文件大小也还只有2 MB左右，到了现在，一个app的apk文件大小已经升级到10MB到20MB这个范围了。apk文件大小的爆炸式增长主要是因为用户对app质量的期待越来越高以及开发者的开发经验增长。</p>
  </li>
  <li>
    <p><a href="http://blog.isming.me/tags/material-design/">创建Material Design风格的Android应用系列文章</a></p>

    <p>随着Android 5.0的发布，Android Developer网站也更新了，增加了创建Material Design风格的Android应用指南,也更新了Support Library，在support library增加了一些Material Design风格的控件和动画等，这里给大家简单介绍一下怎样开发aterial Design风格的Android应用。</p>
  </li>
</ol>

<!--more-->

<ol>
  <li>
    <p><a href="http://www.importnew.com/13107.html">从Java代码到字节码（1）</a></p>

    <p>理解Java代码是如何被编译为字节码并在Java虚拟机（JVM）上执行是非常重要的，这将帮助理解你的程序是如何执行的。这样的理解不仅仅能够让你在逻辑上更好的掌握语言特性，而且能够有机会理解在做出重要决定时所需的权衡以及相应的副作用。</p>
  </li>
  <li>
    <p><a href="http://www.pedant.cn/2014/07/04/webview-js-java-interface-research/">在WebView中如何让JS与Java安全地互相调用</a></p>

    <p>在现在安卓应用原生开发中，为了追求开发的效率以及移植的便利性，使用WebView作为业务内容展示与交互的主要载体是个不错的折中方案。那么在这种Hybrid(混合式) App中，难免就会遇到页面JS需要与Java相互调用，调用Java方法去做那部分网页JS不能完成的功能。</p>
  </li>
  <li>
    <p><a href="http://droidyue.com/blog/2014/11/08/understanding-garbage-collection-output-messages-in-android/">译文：理解Android中垃圾回收日志信息</a></p>

    <p>如果你是一名Android开发者并且常常看程序日志的话，你会经常在logcat的调试日志窗口看到像 <code>GC_CONCURRENT freed 178K, 41% free 3673K/6151K, external 0K/0K, paused 2ms+2ms</code> 这样的日志信息，这就是Android系统垃圾回收的部分输出信息，本文将具体介绍这些日志信息的每一部分的含义来帮助帮助大家更好地了解垃圾回收的运行情况。</p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/t12x3456/article/details/40837287">Android 使用android-support-multidex解决Dex超出方法数的限制问题,让你的应用不再爆棚</a></p>

    <p>随着应用不断迭代，业务线的扩展,应用越来越大(比如集成了各种第三方sdk或者公共支持的jar包,项目耦合性高，重复作用的类越来越多)，相信很多人都遇到过如下的错误: <code>java.lang.IllegalArgumentException: method ID not in [0, 0xffff]: 65536 </code> 没错，你的应用中的Dex 文件方法数超过了最大值65536的上限,简单来说，应用爆棚了.</p>
  </li>
</ol>

<h3 id="section-2">代码&amp;开源库</h3>

<ol>
  <li>
    <p><a href="https://github.com/lightSky/MaterialDesignCenter">MaterialDesignCenter</a></p>

    <p>收集整理了Android Material Design相关的设计资源、视频教程、译文教程和开源库等。</p>
  </li>
  <li>
    <p><a href="https://github.com/BlueMor/Android-PullLayout">Android-PullLayout</a></p>

    <p>仿UC天气下拉和微信下拉眼睛</p>

    <p><img src="https://raw.githubusercontent.com/BlueMor/Android-PullLayout/master/screenshoot/123.gif" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/pedant/safe-java-js-webview-bridge">safe-java-js-webview-bridge</a></p>

    <p>抛弃使用高风险的WebView addJavascriptInterface方法，利用onJsPrompt解析纯JSON字符串，来实现网页JS层反射调用Java方法，同时通过对js层调用函数及回调函数的包装，支持方法参数传入所有已知的类型，包括number、string、boolean、object、function。</p>
  </li>
  <li>
    <p><a href="https://github.com/lzyzsd/CircleProgress">CircleProgress</a></p>

    <p>各种样式的自定义圆形进度条。</p>

    <p><img src="https://raw.githubusercontent.com/lzyzsd/CircleProgress/master/demos/circle_progress.gif" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/kyleduo/SwitchButton">SwitchButton</a></p>

    <p>同时支持Material Design和iOS7风格的SwitchButton。</p>

    <p><img src="https://raw.githubusercontent.com/kyleduo/SwitchButton/master/preview/easy_to_style.png" alt="image" /></p>
  </li>
</ol>

<h3 id="section-3">视频</h3>

<ol>
  <li>
    <p><a href="http://www.jikexueyuan.com/course/364.html?hmsr=sina_weibo_VisualStudio">使用Visual Studio 2015开发Android应用</a></p>

    <p>2014年的微软Connect();在线开发者大会在11月12日和11月13日举行。在大会上，微软公布了很多新的特性和功能。其中最吸引人的是.Net开源和Android模拟器。显示了微软更开放的战略思想。并突出了微软CEO移动优先和云优先的理念。</p>
  </li>
</ol>

<h3 id="section-4">工具</h3>

<ol>
  <li>
    <p><a href="https://github.com/akonior/icon-version">icon-version</a></p>

    <p>可以给Android的App图标添加版本号和变种名字的Android gradle插件。</p>

    <p><img src="https://github.com/akonior/icon-version/raw/master/doc/icon-version-screenshot.png" alt="image" /></p>
  </li>
</ol>

<h3 id="section-5">书</h3>

<ol>
  <li>
    <p><a href="http://snowdream86.gitbooks.io/github-cheat-sheet/content/zh/index.html">GitHub秘籍</a></p>

    <p>本秘籍收录了一些Git和Github非常酷同时又少有人知的功能。灵感来自于Zach Holman在2012年Aloha Ruby Conference和2013年WDCNZ上所做的演讲：Git and GitHub Secrets(slides)和More Git and GitHub Secrets(slides)。</p>
  </li>
</ol>

<h3 id="section-6">设计</h3>

<h4 id="section-7">文章</h4>

<ol>
  <li>
    <p><a href="http://mux.baidu.com/?p=3367">切图小贴士</a></p>

    <p>用户手中看到的产品界面，并非设计师呕心沥血创作的效果图，而是一个个单独的切图经由开发同学技术实现。切图作为设计师与开发者之间的桥梁，它的作用很关键，合适的切图、精准的位置可以最大限度的还原效果图的设计，精妙的切图更会有事半功倍的效果哦！	</p>
  </li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android开发周报 Issue#6]]></title>
    <link href="http://www.inferjay.com/blog/2014/11/10/android-dev-weekly-issue-6/"/>
    <updated>2014-11-10T16:45:18+08:00</updated>
    <id>http://www.inferjay.com/blog/2014/11/10/android-dev-weekly-issue-6</id>
    <content type="html"><![CDATA[<h3 id="section">新闻</h3>

<ol>
  <li>
    <p><a href="http://linux.cn/article-4172-1.html">Android 5.0 Lollipop源代码发布</a></p>

    <p>Google将最新的Android 5.0 Lollipop系统源代码上传在公开的<a href="http://source.android.com/source/index.html">Android Open Source Project(AOSP) 库</a>。</p>
  </li>
  <li>
    <p><a href="http://linux.cn/article-4168-1.html">Android 5.0 Lollipop 安全特性详解</a></p>

    <p>Android 5.0 Lollipop 正式版发布在即，根据 Google 的说法，Android 5.0 是 Android 历史上最为重大的版本变更，带来了全新的设计风格，全新的软件运行环境，更好的续航能力以及大量的细节改进。可能关于 Material Design、ART 模式等等新特性你已经有所了解，但是我们今天要聊的是 5.0 的另一个重大变革，关于安全性的改进。</p>
  </li>
  <li>
    <p><a href="http://www.pingwest.com/copresence-is-airdrop-between-android-ios/">Copresence: Google 正为 iOS 和 Android 之间数据通讯架设的桥梁</a></p>

    <p>Google 最近被人发现正在开发的名为「Copresence」的功能，未来很有可能成为跨移动操作系统数据传输的最好解决方案。Copresence 的功能将允许 Android 和 iOS 操作系统设备之间互相传输文件、照片、发送导航定位、文字信息等多种类型的数据——并非通过互联网，而是更加本地化的点对点连接方式。</p>
  </li>
</ol>

<h3 id="section-1">文章</h3>

<ol>
  <li>
    <p><a href="https://github.com/AWCNTT/ArticleTranslateProject/blob/master/translated/Issue%23105/2014-11-06-Creating-a-Cards-UI-on-Android.md">在Android上创建卡片式UI</a></p>

    <p>自从卡片式UI第一次在Google+ app上亮相，这种设计模式在Android社区上开始变得越来越火。很多人都热衷于这种设计模式并在他们的开发中使用。这不只归功于其时尚的外观，还有它实用之处。每张卡片拥有其相关的内容及其内容所触发的动作。换句话来说，每张卡片有它唯一的内容管理机制。</p>
  </li>
  <li>
    <p><a href="http://www.codeceo.com/article/android-adb-shell.html">34个Android常用adb shell命令汇总</a></p>

    <p>调试Android程序有时需要adb shell 命令，adb全称Android Debug Bridge ，就是起到调试桥的作用。通过adb我们可以在Eclipse中通过DDMS来调试Android程序，说白了就是debug工具。adb通过监听Socket TCP 5554等端口让IDE和Qemu通讯。</p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/isming/article/details/26985317"> 使用Gradle构建Android项目</a></p>

    <p>Gradle是以Groovy为基础，面向java应用，基于DSL语法的自动化构建工具。是google引入，替换ant和maven的新工具，其依赖兼容maven和ivy。使用gradle的目的:更容易重用资源和代码；可以更容易创建不同的版本的程序，多个类型的apk包；更容易配置，扩展;更好的IDE集成;</p>
  </li>
  <li>
    <p><a href="http://toughcoder.net/blog/2014/10/26/best-practices-to-support-multiple-screen/">适配多屏幕的最佳实践</a></p>

    <p>对于Android应用开发来讲，比较头疼的，也是比较重要的一个工作就是要尽可能多的支持市场上的Android设备，由于Android的开放性，各种奇奇怪怪的设备都有，符合标准的，不符合标准的，行货，水货，山寨货鱼龙混杂，防不胜防。</p>
  </li>
  <li>
    <p><a href="http://toughcoder.net/blog/2014/10/25/tricks-to-remove-duplicates/">如何有效的减少重复的代码</a></p>

    <p>重复的代码一直都是可维护性的大敌，重构的重要任务之一也就是要去除掉重复的代码，有效的减少重复代码，可以大大提高软件的扩展性。</p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/isming/article/details/39404407">在android中画圆形图片的几种办法</a>	
 在开发中经常会有一些需求,比如显示头像，显示一些特殊的需求,将图片显示成圆角或者圆形或者其他的一些形状。但是往往我们手上的图片或者从服务器获取到的图片都是方形的。这时候就需要我们自己进行处理，将图片处理成所需要的形状。</p>
  </li>
</ol>

<!--more-->

<h3 id="section-2">代码&amp;开源库</h3>

<ol>
  <li>
    <p><a href="https://github.com/ajaysahani/MultiActionTextView">MultiActionTextView</a></p>

    <p>MultiActionTextView 一个textview的开源库，可以分别给TextView中的某几个字设置点击事件。</p>
  </li>
  <li>
    <p><a href="https://github.com/cymcsg/UltimateAndroid">UltimateAndroid</a></p>

    <p>快速开发Android应用的框架，框架目前主要包含的功能有View Injection,ORM,异步网络请求和图片加载，自动化脚本测试,磁盘LRU等功能.同时提供了类似于TripleDes、Webview快速设置、Md5处理、String处理,Https处理等常用工具类，还有超过100多种UI控件效果。</p>
  </li>
  <li>
    <p><a href="https://github.com/MustafaFerhan/DebugLog">DebugLog</a></p>

    <p>DebugLog可以帮你创建更简单和更容易理解的调试日志，能够友好的显示调试信息所在类和函数。</p>
  </li>
  <li>
    <p><a href="https://github.com/rengwuxian/MaterialEditText">MaterialEditText</a></p>

    <p>Material Design风格的EditText。虽然AppCompat v21中也提供了 Material Design 的控件外观支持，其中包括 EditText 。但 AppCompat 中的 EditText 实在有点难用，因为它是通过 colorAccent 来自动为控件着色的，并没有提供设置颜色的api，因此需要通过为控件定制theme的方式来实现自定义控件颜色。 另外，除了外观上的变化， AppCompat 没有提供任何 Google Material Design Spec 中提到的特性。  </p>
  </li>
</ol>

<h3 id="section-3">视频</h3>

<ol>
  <li>
    <p><a href="http://v.youku.com/v_show/id_XODE5NDI1MTI4.html">GoogleFit APIs for Android</a></p>

    <p>来自Google美女工程师的DevBytes系列《GoogleFit APIs for Android》视频共两集,现已搬至优酷，关注Google Fit的可以看内容，不感兴趣内容可以看美女，程序猿们我懂你们的！！！</p>
  </li>
</ol>

<h3 id="section-4">工具</h3>

<ol>
  <li>
    <p><a href="https://github.com/intrications/material-design-icons-adt-template">material-design-icons-adt-template</a></p>

    <p>Android Studio / Eclipse ADT template for including icon resources from <a href="https://github.com/google/material-design-icons">https://github.com/google/material-design-icons</a> in your project.</p>
  </li>
  <li>
    <p><a href="http://tools.android.com/download/studio/canary">Android Studio 0.9.2 Released</a></p>

    <p>Android Studio 0.9.1 released to the canary channel! </p>
  </li>
</ol>

<h3 id="section-5">书</h3>

<ol>
  <li>
    <p><a href="http://it-ebooks.info/book/646/">Pro Android Apps Performance Optimization</a></p>

    <p>Today’s Android apps developers are often running into the need to refine, improve and optimize their apps performances. As more complex apps can be created, it is even more important for developers to deal with this critical issue. </p>
  </li>
</ol>

<h3 id="section-6">设计</h3>

<h4 id="section-7">文章</h4>

<ol>
  <li>
    <p><a href="http://www.ui.cn/project.php?id=30796">熊氏切图法–一键导出App icon</a></p>

    <p>做App设计的小伙伴有没有遇到这种情况呢，同一个icon要输出N种尺寸，用传统的方法批处理调整图片大小比较繁琐，不方便同时整体预览，如果后续修改了设计，又要重复一次这个批处理的过程，有没有一键输出所有尺寸的方法呢？本熊这就给大家推荐一种强大的技巧：智能对象+生成图像资源，是的，本熊不要脸的将其命名为“熊氏切图法”.</p>
  </li>
  <li>
    <p><a href="http://www.ui.cn/project.php?id=30921">UE+UI设计流程之一二三</a></p>

    <p>在做移动端app的设计过程中，经常会碰到一些二次返工或者时间的浪费，在这里分享下自己在项目中的流程经验，供遇到问题的小伙伴们参考。</p>
  </li>
  <li>
    <p><a href="http://www.ui.cn/project.php?id=30538">从Material UI得到的设计感悟</a></p>

    <p>如果你读过Google的Material设计文档，你就会发现其对细节和深度的注重。在文档中你能学到很多东西。其中最为重要的一项，就是其证明了编写复杂视觉风格指南是完全可能的。尽管可能困难重重，但还是可能的。特别是对于Google复杂多样的产品组合来说。</p>
  </li>
  <li>
    <p><a href="http://www.ui.cn/project.php?id=30540">APP规范实例(详细的UI设计方法</a></p>

    <p>设计是无限的，可作为借鉴，这一套UI设计规范，包含了界面布局、颜色、文字规范、按钮规范、图标规范、图片规范、列表规范、控件规范、弹出浮层，超级详细。大家可以借鉴下，学会自己设计一套APP设计规范，成为高级设计师。但是不要生搬硬套，毕竟不是一个产品，总之可参考的价值很高。</p>
  </li>
</ol>

<h4 id="section-8">工具&amp;资源</h4>

<ol>
  <li>
    <p><a href="https://github.com/romashamin/Size-Marks-PS">Size-Marks-PS</a></p>

    <p>Photoshop Javascript插件，可以以新建图层的方式直接在PS中标注尺寸。</p>

    <p><img src="http://ww1.sinaimg.cn/mw1024/4b4d632fgw1elyr9qvsipg20kf08jdjf.gif" alt="image" /></p>
  </li>
  <li>
    <p><a href="http://www.uisdc.com/21-photoshop-plugins-for-designer">高效神器！21款强大实用的PHOTOSHOP扩展插件</a></p>

    <p>21款扩展插件，特别适合网页设计师。这些神器可以让平时复杂繁琐的操作变得更加简单.</p>
  </li>
</ol>

<hr />
<p>版权声明：欢迎自由转载-非商用-非衍生-保持署名 | <a href="http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh">Creative Commons BY-NC-ND 3.0</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android开发周报 Issue#5]]></title>
    <link href="http://www.inferjay.com/blog/2014/11/05/android_dev_weekly_issue_5/"/>
    <updated>2014-11-05T17:45:47+08:00</updated>
    <id>http://www.inferjay.com/blog/2014/11/05/android_dev_weekly_issue_5</id>
    <content type="html"><![CDATA[<h3 id="section">文章</h3>

<ol>
  <li>
    <p><a href="http://blog.csdn.net/xushuaic/article/details/40627389">进入Material Design时代</a></p>

    <p>Material Design是Android 5.0系统的重头戏，并在以后App中将成为一种设计标准，而且随着已支持Android 5.0 Lollipop的Nexus 6的开售，Google希望开发者更快的支持Material Design，连续发了3篇文章，来帮助开发者如何在自己的App 中实现Material Design。并表示：expect Winter 2014 to be a big quarter for design on Android.</p>
  </li>
  <li>
    <p><a href="http://www.liaohuqiu.net/cn/posts/how-does-android-caculate-the-size-of-child-view/">Android中View大小的确定过程</a></p>

    <p>子View有一个期望的尺寸大小，父容器有尺寸大小约束，这两方面的约束协调，用来计算View的大小状态。根据父容器的尺寸状态，以及子View的LayoutParams，可以确定子View的大小和状态：MeasureSpec，并要求子View确定自身大小。调用子View的measure()方法，子View的onMeasure()方法也会被执行。子View在onMeasure()方法中，根据父容器给出的尺寸大小和约束，根据自身情况，确定最终的大小。父容器根据子View的确定的大小，最终确定自身大小。</p>
  </li>
  <li>
    <p><a href="http://www.ticmy.com/?p=329">ScheduledThreadPoolExecutor实现原理</a></p>

    <p>自jdk1.5开始，Java开始提供ScheduledThreadPoolExecutor类来支持周期性任务的调度，在这之前，这些工作需要依靠Timer/TimerTask或者其它第三方工具来完成。但Timer有着不少缺陷，如Timer是单线程模式，调度多个周期性任务时，如果某个任务耗时较久就会影响其它任务的调度；如果某个任务出现异常而没有被catch则可能导致唯一的线程死掉而所有任务都不会再被调度。ScheduledThreadPoolExecutor解决了很多Timer存在的缺陷。</p>
  </li>
  <li>
    <p><a href="http://mogu.io/android-im-design">Android-IM架构设计</a></p>

    <p>文章介绍了蘑菇街开源的IM项目Android客户端的整体架构和消息流程。</p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/vipzjyno1/article/details/23542617">Android 命名规范（提高代码可以读性）</a>	
 刚接触android的时候，命名都是按照拼音来，所以有的时候想看懂命名的那个控件什么是什么用的，就要读一遍甚至好几遍才知道，这样的话，在代码的审查和修改过程中就会浪费不少不必要的时间。如果就是我一个人开发，一个人维护的话还好，可是如果一个项目是团队分工合作，这样让你的同事去看你的代码就更加吃力了，因为大家之间的编程方式不一样，所以，在开发过程中，命名规范统一尤为重要，最好是团队中统一好大家命名方法，这样对于日后的工作会轻松很多。</p>
  </li>
</ol>

<!--more-->

<h3 id="section-1">代码&amp;开源库</h3>

<ol>
  <li>
    <p><a href="https://github.com/liaohuqiu/android-GridViewWithHeaderAndFooter">android-GridViewWithHeaderAndFooter</a></p>

    <p>在HeaderGridView的基础上做了更改，可以addHeaderView()和addFooterView()的GridView来了。用法和ListView一样.</p>
  </li>
  <li>
    <p><a href="https://github.com/torryharris/Skycons">Skycons</a></p>

    <p>一组自定义的天气图标View库。</p>
  </li>
  <li>
    <p><a href="https://github.com/PhilJay/ValueBar">ValueBar</a></p>

    <p>一个漂亮的自定义View。工作原理类似于Seeker。支持API level 11+.</p>
  </li>
  <li>
    <p><a href="https://github.com/percolate/caffeine">caffeine</a></p>

    <p>一个可以加速Android开发的工具库。</p>
  </li>
  <li>
    <p><a href="https://github.com/mogutt">TeamTalk</a></p>

    <p>蘑菇街开源的 IM 项目 TeamTalk，包括 Android、iOS、Win、Mac 客户端以及 Server端、管理后台、环境自动部署，大赞！支持文字、音频、图片、表情、文件传输、屏幕振动、分组等，做聊天的同学可以看看.</p>
  </li>
  <li>
    <p><a href="https://github.com/pedant/sweet-alert-dialog">sweet-alert-dialog</a></p>

    <p>Android版的SweetAlert，清新文艺，快意灵动的甜心弹框。</p>

    <p><img src="https://github.com/pedant/sweet-alert-dialog/raw/master/change_type.gif" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/MobiDevelop/android-split-pane-layout">android-split-pane-layout</a></p>

    <p>可以将2个子View之间的可用空间按照指定比例分割的自定义Layout。</p>
  </li>
</ol>

<h3 id="section-2">视频</h3>

<ol>
  <li>
    <p><a href="https://github.com/KevinChen9117/ikevin">Android DevBytes and Google IO视频</a></p>

    <p>Youtube上的Google IO、跟Android相关的DevBytes、Android Design In Action和跟Android相关的DesignBytes视频，全部是720P的mp4. 包含英文字幕。</p>
  </li>
</ol>

<h3 id="section-3">工具</h3>

<ol>
  <li>
    <p><a href="http://tools.android.com/download/studio/canary">Android Studio 0.9.0 Released</a></p>

    <p>Android Studio 0.9.0 released to the canary channel! 
 这次发布添加了新版本的Android Gradle plugin 0.14.0，此外，修复了一些bug等。</p>
  </li>
  <li>
    <p><a href="https://github.com/matheusjardimb/ios2android">ios2android</a></p>

    <p>一个可以将iOS格式的切图转换为Android格式切图的Python脚本工具。</p>
  </li>
</ol>

<h3 id="section-4">设计</h3>

<h4 id="section-5">工具&amp;资源</h4>

<ol>
  <li>
    <p><a href="http://www.uisdc.com/21-photoshop-plugins-for-designer">高效神器！21款强大实用的PHOTOSHOP扩展插件</a></p>

    <p>21款扩展插件，特别适合网页设计师。这些神器可以让平时复杂繁琐的操作变得更加简单.</p>
  </li>
</ol>

<hr />
<p>版权声明：欢迎自由转载-非商用-非衍生-保持署名 | <a href="http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh">Creative Commons BY-NC-ND 3.0</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android开发周报 Issue#2]]></title>
    <link href="http://www.inferjay.com/blog/2014/10/12/android-dev-weekly-issue-2/"/>
    <updated>2014-10-12T09:52:49+08:00</updated>
    <id>http://www.inferjay.com/blog/2014/10/12/android-dev-weekly-issue-2</id>
    <content type="html"><![CDATA[<h3 id="section">文章</h3>

<ol>
  <li>
    <p><a href="http://blog.csdn.net/maosidiaoxian/article/category/2380095">Andriod Studio科普篇</a></p>

    <p>作者记录了自己在使用Android Studio时做的一些个性化设置，踩到的一些坑等等。</p>
  </li>
  <li>
    <p><a href="http://tech.meituan.com/mt-apk-packaging.html">美团Android自动化之旅—生成渠道包</a></p>

    <p>文章介绍了三种打渠道包的方式。目前，Android团队打包基本使用第三种方式，完成了打包的自动化，解放了工程师的生产力，善哉善哉。打包的问题解决了，但有时候还需要为不同的渠道定制不同的APK。	</p>
  </li>
  <li>
    <p><a href="http://tech.meituan.com/mt-apk-adaptation.html">美团Android自动化之旅—适配渠道包</a></p>

    <p>文章介绍了如何使用Android构建利器Gradle的flavor特性来定制渠道包。</p>
  </li>
  <li>
    <p><a href="http://tech.meituan.com/packet_forwarding.html">如何把Android手机变成一个WIFI下载热点? — 报文转发及DNS报文拦截</a>	</p>

    <p>随着wifi的普及，移动运营商的热点也越来越多了，如中国移动的CMCC、中国电信的ChinaNet、中国联通的ChinaUnicom等，一般来说，连上此类的热点，打开浏览器上网时都会自动跳转到一个验证页面，最近有个项目也有类似的需求，Android手机自建热点，别的手机wifi连接此热点，打开浏览器，输入任意内容，自动跳转到一个下载列表页面，点击相应的链接即可下载相应的文件。</p>
  </li>
  <li>
    <p><a href="http://stormzhang.github.io/posts.html#Activity">Android通过Wifi来调试你的应用</a></p>

    <p>在Android中调试我们经常要用一根USB数据线连接到手机和电脑，一方面麻烦不说，手机一直连着电脑充电时间长了对手机也是一种伤害，另一方面如果哪一天忘记带USB数据线就很悲催了。今天就来教大家一种通过wifi来连接手机调试的方法，瞬间高大上有木有？而且不需要root，以后你就可以隔空给你公司的测试妹子安装/卸载apk了。</p>
  </li>
  <li>
    <p><a href="http://stormzhang.github.io/posts.html#Activity">Activity生命周期详解系列</a></p>

    <p>文章第一部分结合官方的Activity生命周期流程图讲解了各个生命周期方法的执行顺序，第二部分结合一些特定的使用场景分析了Activity的生命周期，第三部分讲解了onSaveInstanceState和onRestoreInstanceState这两个方法的作用。</p>
  </li>
</ol>

<!--more-->

<h3 id="section-1">代码&amp;开源库</h3>

<ol>
  <li>
    <p><a href="https://github.com/kongnanlive/android-combination-avatar">android-combination-avatar</a></p>

    <p>网易工程师实现的模仿QQ讨论组头像叠加效果的控件</p>

    <p><img src="https://github.com/kongnanlive/android-combination-avatar/raw/master/screenshots/screenshot1.jpg" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/Polidea/RoboSpock">RoboSpock</a> </p>

    <p>RoboSpock是一个Android的测试框架，它可以让你非常快的在JVM上运行单元测试，而无需启动任何仿真器或进行任何部署。</p>
  </li>
  <li>
    <p><a href="https://github.com/gcacace/android-signaturepad">android-signaturepad</a></p>

    <p>一个可以平滑的绘制签名的自定义View。</p>

    <p><img src="https://github.com/gcacace/android-signaturepad/raw/master/header.png" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/sromku/android-simple-storage">android-simple-storage</a></p>

    <p>这个库可以让你使用简单的Api在内部或者外部磁盘空间上创建、读取、删除、附加、加密文件等等。</p>
  </li>
  <li>
    <p><a href="https://github.com/cundong/ZhihuPaper">ZhihuPaper</a></p>

    <p>一个「知乎日报」Android 客户端</p>

    <p><img src="https://raw.githubusercontent.com/cundong/ZhihuPaper/master/screenshot/one.png" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/cundong/SmartAppUpdates">Smart App Updates</a></p>

    <p>Android App 增量更新实例</p>
  </li>
  <li>
    <p><a href="https://github.com/chalup/cerberus">cerberus</a></p>

    <p>Android library for detecting and reporting long running SQLite queries.</p>
  </li>
  <li>
    <p><a href="https://github.com/ideaismobile/AKParallax-Android">AKParallax-Android</a></p>

    <p>一个可以为ScrollView或者ListView添加视差滚动效果的库。</p>
  </li>
  <li>
    <p><a href="https://github.com/johnkil/Android-Icon-Fonts">Android-Icon-Fonts</a></p>

    <p>Material和Holo风格的图标字体.</p>

    <p><img src="https://raw.githubusercontent.com/johnkil/Android-Icon-Fonts/master/Art/android-icon-fonts.png" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/castorflex/SmoothProgressBar">SmoothProgressBar</a></p>

    <p>平滑的进度条。</p>

    <p><img src="https://raw.githubusercontent.com/castorflex/SmoothProgressBar/master/screenshots/SPB_sample.gif" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/jgilfelt/SystemBarTint">SystemBarTint</a></p>

    <p>Apply background tinting to the Android system UI when using KitKat translucent modes。</p>

    <p><img src="https://camo.githubusercontent.com/fbbeaab2048f78e2d4974bb1559544c9f22eccae/68747470733a2f2f7261772e6769746875622e636f6d2f6a67696c66656c742f53797374656d42617254696e742f6d61737465722f73637265656e73686f742e706e67" alt="image" />	</p>
  </li>
  <li>
    <p><a href="https://github.com/chiragjain/Emoticons-Keyboard">Emoticons-Keyboard</a></p>

    <p>带表情情符号的自定义键盘。</p>

    <p><img src="https://raw.githubusercontent.com/chiragjain/Emoticons-Keyboard/master/s2.png" alt="image" />
 <img src="https://raw.githubusercontent.com/chiragjain/Emoticons-Keyboard/master/s3.png" alt="image" /></p>
  </li>
</ol>

<h3 id="section-2">工具</h3>

<ol>
  <li>
    <p><a href="http://www.androiddevtools.cn">Android Studio 0.8.12 Released</a></p>

    <p>主要更新：</p>

    <ul>
      <li>一个全新的AVD管理器，新的AVD管理器与IDE的集成更紧密了。例如，当你试图去运行一个App时，你可以快速直接地从运行对话框中创建Nexus5或7的Nexus AVD。在这个新的AVD列表里，你可以查看和编辑AVD（你可以看到每个AVD使用多少磁盘空间），你也可以启动AVD等。你还可以很容易在现有的这些默认基础硬件上创建新的AVD，而且，在不同的类别，如手机，平板电脑，耐磨，电视。一旦你选择了硬件，你可以配置特定的架构和Android版本。最后，你可以选择一个显示名称，默认方向，GPU/快照选项 - 或者更高级的设置，例如外部存储等大小。</li>
      <li>当创建新的项目，我们现在默认使用HTTPS而不是HTTP的Gradle wrapper。我们还增加了一个lint（和的quickfix）警告如何在现有项目中使用HTTP。</li>
      <li>如果你喜欢手动编辑配置XML文件（使用XML编辑器，而不是图形化的布局编辑器），你现在可以通过点击版面编辑或布局预览窗口上方工具栏中的选项图标，并选择“首选的XML编辑器“，一旦选择了，新创建的布局将在XML编辑器中打开，而不是在布局编辑器中打开。</li>
      <li>翻译编辑器现在可以在字符串编辑器中工作了。</li>
      <li>Android项目视图现在是默认选择。您可以通过右键点击上面的项目视图的下拉列表切换回普通的项目视图。</li>
      <li>现在，您可以在XML中使用的quickfix导入工具命名空间：<code>tools：</code> 前缀，然后IDE将提供插入相应的命名空间声明,同样，<code>Android：</code> 前缀它导入了Android的命名空间，而不是显示所有可用的命名空间，并要求你选择一个.</li>
      <li>一些Bug修复 </li>
    </ul>
  </li>
  <li>
    <p><a href="https://github.com/NetEase/Emmagee/releases">Emmagee</a>		
 Emmagee是网易推出的一个实用的、便利的Android App性能测试工具，Emmagee推出了2.0版本，作为一次重大的升级，2.0版本主要在UI以及用户体验上做了优化，同时提供国际化的支持(感谢国际用户的反馈)，希望本次更新给各位带来更优质的用户体验。</p>
  </li>
  <li>
    <p><a href="http://gt.tencent.com/index.html">GT</a></p>

    <p>GT（随身调）是APP的随身调测平台，它是直接运行在手机上的“集成调测环境”(IDTE, Integrated Debug&amp;Test Environment)。利用GT，仅凭一部手机，无需连接电脑，您即可对APP进行快速的性能测试(CPU、内存、流量、电量、帧率/流畅度等等)、开发日志的查看、Crash日志查看、网络数据包的抓取、APP内部参数的调试、真机代码耗时统计等等；更重要的是，您可以在任意真实场所、任何时候做如上的系列事情，这就是“APP的场测”。如果您觉得GT提供的功能还不够满足您的需要，您还可以利用GT提供的基础API自行开发有特殊功能的GT插件（目前，仅iOS版支持），帮助您解决更加复杂的APP调试、测试问题。 </p>
  </li>
</ol>

<h3 id="section-3">视频</h3>

<ol>
  <li>
    <p><a href="http://www.infoq.com/cn/presentations/android-client-architecture-evolution-and-impact-on-development-process#0-tsina-1-70270-397232819ff9a47a7b7e80a40613cfe1">微信Android客户端架构演进及其对开发流程的影响</a></p>

    <p>微信ANDROID客户端的架构演进史，可以说是一个典型ANDROID应用在从小到大的成长过程中的“踩坑”与“填坑”的历史。从1.0版本安装包的354KB，到今天5.3版本的24.1MB，从最开始两三个码农的突击作业，到今天的“集团军”开发力量，微信的体量在不断增大，开发同学遇到的“成长的烦恼”也越来越多： 为什么微信收消息又延迟了？</p>
  </li>
</ol>

<h3 id="section-4">书</h3>

<ol>
  <li>
    <p><a href="http://www.it-ebooks.info/book/2445/">50 Android Hacks</a></p>

    <p>这本书分12部分介绍了50个Android开发中的小技巧。</p>
  </li>
</ol>

<h3 id="section-5">新闻</h3>

<ol>
  <li>
    <p><a href="http://cn.engadget.com/2014/10/09/google-android-l-64-bit/">谷歌发布x86 64位Android L模拟器</a></p>

    <p>【Google Android L 模拟器已经准备好了，开发者可以开发 64 位应用】Google 公布了 x86 64-bit Android L developer preview 的模拟器映像档已经开放给开发者下载，让有意的开发者可以准备着手开发新世代的应用程序。</p>
  </li>
</ol>

<h3 id="section-6">设计</h3>

<h4 id="section-7">文章</h4>

<ol>
  <li>
    <p><a href="http://www.ui.cn/project.php?id=26650">图标设计之尺规作图全过程</a></p>

    <p>国外上年纪大品牌的Logo都是尺规作图做出来的，因为最开始电脑不发达的时候，制作标志都是手工做的，没有尺规制图，没法制作。后来这些品牌出名了，Logo成为了典范，尺规作图也成了一个logo规范与否的标准。</p>
  </li>
  <li>
    <p><a href="http://bjango.com/articles/actions/">Photoshop Actions &amp; Workflows</a></p>

    <p>文章介绍了自己在过去的几年里建立了一套自己每天都在使用的Photoshop Actions以及工作流程。</p>
  </li>
  <li>
    <p><a href="http://bjango.com/articles/appdesignworkflow/">My app design workflow</a></p>

    <p>作者完整的介绍了自己在做iOS，Android和Mac的应用程序设计的工作流程，从你第一次打开Photoshop开始，到应用程序发布。</p>
  </li>
  <li>
    <p><a href="https://medium.com/android-design/latest">Understanding Material Design</a></p>

    <p>作者分Material is the metaphor、Authentic Motion和Skeuomorphism vs Flat Design这个三个主题分析讲解了自己对Material Design的理解。</p>
  </li>
  <li>
    <p><a href="http://zhuanlan.zhihu.com/TingTalk/19865937">导航抽屉到底归属于哪个层级?</a></p>

    <p>当导航抽屉成为 Google 设计规范的一部分时, Google 明确告诉我们该这么做, 而且提供了可以让开发者直接调用的工具.难道说 Google 在一开始的时候犯了个错误? 也许第一眼看上去这样做是对的, 但是从规范上看来确实是有些问题的.</p>
  </li>
  <li>
    <p><a href="http://www.ui.cn/project.php?id=17636">2014交互设计工具革新之年</a></p>

    <p>在这一年里，我们见到了很多新颖的交互设计工具和原型设计工具。工具旨在提高我们的工作效率，改善我们的工作流程，诸多新兴的工具造就了相关的讨论团体和设计，且这些工具，大大缩短了设计成本，现在，高保真的原型设计更简便了。</p>
  </li>
  <li>
    <p><a href="http://www.zhihu.com/question/25812945/answer/31495421">如何看待 Google 让自家应用的 iOS 版与 Android 版统一使用 Material Design ？</a></p>

    <p>国内例如 腾讯QQ 等一些 App 的 Android版 完全照搬 iOS 版的 UI ，这个一直饱受很多同学的诟病，如今 Google 刚好反过来了，把自家 App 的 iOS 版刻意做的和 Android 版一致。</p>
  </li>
</ol>

<h4 id="section-8">工具</h4>

<ol>
  <li>
    <p><a href="http://www.astutegraphics.com/software/subscribe/">SubScribe</a></p>

    <p>一款增强绘图功能的AI插件，这个插件能轻易解决直线和圆、圆与圆的精准相切[外切内切]等问题。</p>
  </li>
</ol>

<hr />
<p>版权声明：欢迎自由转载-非商用-非衍生-保持署名 | <a href="http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh">Creative Commons BY-NC-ND 3.0</a></p>
]]></content>
  </entry>
  
</feed>
