<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: AndroidDevWeekly | 脉脉不得语的技术博客]]></title>
  <link href="http://www.inferjay.com/blog/categories/androiddevweekly/atom.xml" rel="self"/>
  <link href="http://www.inferjay.com/"/>
  <updated>2015-01-12T10:09:50+08:00</updated>
  <id>http://www.inferjay.com/</id>
  <author>
    <name><![CDATA[inferjay]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Android开发技术周报 Issue#15]]></title>
    <link href="http://www.inferjay.com/blog/2015/01/12/android-dev-weekly-issue-15/"/>
    <updated>2015-01-12T09:59:10+08:00</updated>
    <id>http://www.inferjay.com/blog/2015/01/12/android-dev-weekly-issue-15</id>
    <content type="html"><![CDATA[<h3 id="section">教程</h3>

<ol>
  <li>
    <p><a href="http://stormzhang.com/devtools/2015/01/05/android-studio-tutorial5/">Android Studio系列教程五–Gradle命令详解与导入第三方包</a></p>

    <p>Android Studio + Gradle的组合用起来非常方便，很多第三方开源项目也早都迁移到了Studio，为此今天就来介绍下查看、编译并导入第三方开源项目的方法。</p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/qiujuer/article/details/42471119">打造极致Material Design动画风格Button</a></p>

    <p>在我的文章中曾经有两篇关于Material Design风格的按钮实现。在第一章中只是简单的实现了动画的波纹效果，而在第二篇中对此进行了一定的扩充与优化，最后实现可以自动移动到中心位置的动画；虽然两者都可用，但是在我的使用中却发现了一定的问题，如有些位置点击会出现波纹速度的运算上的问题。</p>
  </li>
  <li>
    <p><a href="http://www.osforce.cn/group/9/thread/1065?fr=weibo&amp;mu=140910XRNWcD">Android开发-API指南-AIDL</a></p>

    <p>Android 接口定义语言 AIDL（Android Interface Definition Language）与其他已有的 IDL 很类似。 客户端和服务端可以通过由它定义的编程接口来达成共识，以便通过进程间通讯（IPC）完成相互通讯。 在 Android 系统中，通常一个进程不允许直接访问另一个进程的内存。 因此为了能够实现对话，进程需要把对象分解为操作系统可以识别的原生数据，在跨越进程边界后再组装起来。 实现组装的代码非常枯燥无趣，因此 Android 通过 AIDL 可有助于完成这一过程。</p>
  </li>
  <li>
    <p><a href="http://www.osforce.cn/group/9/thread/1053?fr=weibo&amp;mu=140910XRNWcD">Android Proguard 详解</a></p>

    <p>Java代码是非常容易反编译的。为了很好的保护Java源代码，我们往往会对编译好的class文件进行混淆处理。ProGuard是一个混淆代码的开源项目。它的主要作用就是混淆，当然它还能对字节码进行缩减体积、优化等，但那些对于我们来说都算是次要的功能。官网网址是：http://proguard.sourceforge.net/</p>
  </li>
</ol>

<!--more-->

<ol>
  <li>
    <p><a href="http://www.importnew.com/14347.html">设计模式问答2</a></p>

    <p>这是设计模式问答1的连载。在这个系列，我们将覆盖到解释器、迭代器、调停者、备忘录和观察者模式。</p>
  </li>
  <li>
    <p><a href="http://www.importnew.com/14410.html">Java不同压缩算法的性能比较</a></p>

    <p>本文将会对常用的几个压缩算法的性能作一下比较。结果表明，某些算法在极端苛刻的CPU限制下仍能正常工作。文中进行比较的算有：JDK GZIP、JDK deflate、LZ4压缩算法的Java实现和Snappy。</p>
  </li>
  <li>
    <p><a href="http://www.programmer.com.cn/15036/">Android软件安全开发实践（上）</a></p>

    <p>Android开发是当前最火的话题之一，但很少有人讨论这个领域的安全问题。本系列将分两期，探讨Android开发中常见的安全隐患和解决方案。第一期将从数据存储、网络通信、密码和认证策略这三个角度，带你走上Android软件安全开发实践之旅。</p>
  </li>
  <li>
    <p><a href="http://www.programmer.com.cn/15273/">Android软件安全开发实践（下）</a></p>

    <p>在《Android软件安全开发实践（上）》中我们讨论了数据存储、网络通信、密码和认证策略等安全问题和解决方案，本期将继续从组件间通信、数据验证和保全保护等方面来实践Android软件安全开发之路。</p>
  </li>
  <li>
    <p><a href="http://www.freebuf.com/tools/55392.html">深度：针对超强手机木马DenDroid的分析与测试</a></p>

    <p>赛门铁克的研究人员就在手机移动领域发现了一种新的名为Dendroid木马，可以轻松实现对手机远程恶意操控。而在此前赛门铁克发现了一个名为AndroidRAT的android远程管理软件被认为是第一个恶意绑定软件。然而这款最新发现的运行在http上的Dendroid具有更强功能。</p>
  </li>
  <li>
    <p><a href="http://www.importnew.com/14260.html">解析IntelliJ IDEA内部设计</a></p>

    <p>IntelliJ IDEA第一版发布于2001年1月，这是第一款集成了高级代码导航和代码重构功能的Java IDE。2009年，JetBrains开源了其社区版。从那时开始，就新出现了许多基于其社区版的IDE，如Google的Android Studio。本文使用JArchitect作为工具，深入了解Intellij IDEA社区版，探索其中使用的一些内部设计决策。</p>
  </li>
</ol>

<h3 id="section-1">代码&amp;开源库</h3>

<ol>
  <li>
    <p><a href="https://github.com/Jhuster/ImageCropper">ImageCropper</a></p>

    <p>一个Android图片剪裁库,特性:1.支持通过手势移动和缩放剪裁窗口, 2支持固定剪裁窗口大小、固定窗口的长宽比率, 3.支持设置最大的窗口长和宽, 4.支持剪裁图片的旋转。</p>
  </li>
  <li>
    <p><a href="https://github.com/JakeWharton/Telecine">Telecine</a></p>

    <p>JakeWharton大神开发的一款录屏App。</p>
  </li>
  <li>
    <p><a href="https://github.com/ismoli/DynamicRecyclerView">DynamicRecyclerView</a></p>

    <p>对RecyclerView进行了扩展，天就拖拽排序功能。</p>
  </li>
  <li>
    <p><a href="https://github.com/tajchert/BusWear">BusWear</a></p>

    <p>BusWear是一个简单的支持Android Wear设备的EventBus（事件总线）库。仅需要一行代码就可获得异步的事件总线（synchronized event buses）在Wear和移动平台之间。</p>

    <p><img src="https://raw.githubusercontent.com/tajchert/BusWear/master/docs/diagram_simple.png" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/TonicArtos/SuperSLiM">SuperSLiM</a></p>

    <p>SuperSLiM为RecyclerView提供了一个布局管理器允许您创建垂直列表和每节标题和布局。 </p>

    <p><img src="https://camo.githubusercontent.com/3a55cfd0bbfd28e72aa875f4905cc23cc37a87f4/68747470733a2f2f342e62702e626c6f6773706f742e636f6d2f2d657034364a4b70476138342f564a685831706c575743492f4141414141414141585a592f394131417272563361336b2f73313630302f5375706572534c694d2d44656d6f2d736d616c6c2e676966" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/AChep/Header2ActionBar">Header2ActionBar</a></p>

    <p>Header2ActionBar是一个实现了像Play Music and Google Newspaper应用中褪色（fading）Action Bar效果的Action Bar。</p>
  </li>
  <li>
    <p><a href="https://github.com/wasabeef/recyclerview-animators">recyclerview-animators</a></p>

    <p>一个方便你给RecyclerView items添加item动画的库。</p>
  </li>
  <li>
    <p><a href="https://github.com/Raizlabs/Singleton">Singleton</a></p>

    <p>一个非常简洁的库，可以帮助你方便将一个对象存储在磁盘。</p>
  </li>
  <li>
    <p><a href="https://github.com/JoanZapata/android-asyncservice">android-asyncservice</a></p>

    <p>AsyncService使用注释来缩短开始异步长时间运行的任务所需的代码,并返回结果。</p>
  </li>
  <li>
    <p><a href="https://github.com/sakebook/Reachability">Reachability</a></p>

    <p>类似于iPhone 6 &amp; 6 Plus的下拉悬停从而方便你操作屏幕的顶部。</p>

    <p><img src="https://raw.githubusercontent.com/sakebook/Reachability/master/images/demo.gif" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/twotoasters/SectionCursorAdapter">SectionCursorAdapter</a></p>

    <p>对CursorAdapter进行了扩展，添加sections和快速滚动滑块。</p>

    <p><img src="https://raw.githubusercontent.com/twotoasters/SectionCursorAdapter/master/screenshots/sections.png" alt="image" /><img src="https://raw.githubusercontent.com/twotoasters/SectionCursorAdapter/master/screenshots/dialog.png" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/phishman3579/android-quick-response-code">android-quick-response-code</a></p>

    <p>Android QR码编码解码库。</p>
  </li>
</ol>

<h3 id="section-2">工具</h3>

<ol>
  <li>
    <p><a href="https://github.com/tmiyamon/gradle-mdicons">gradle-mdicons</a></p>

    <p>一个帮助你管理google’s official material design图标的插件。</p>

    <p><img src="https://raw.githubusercontent.com/tmiyamon/gradle-mdicons/master/gradle-mdicons-result.png" alt="image" /></p>
  </li>
</ol>

<h3 id="section-3">视频</h3>

<ol>
  <li>
    <p><a href="http://i.youku.com/chinagdg">ChinaGDG 视频中心</a></p>

    <p>ChinaGDG 视频中心。第一时间同步 Google Developers 的各种技术视频，如 Android、Web 等技术，方便国内开发者学习。视频已包含英文字幕，部分视频还有来自国内志愿者提供的中文翻译字幕。</p>
  </li>
  <li>
    <p><a href="http://t.cn/RZJaz5I">Android性能模式</a></p>

    <p>老美新年放假归来，官方更新了16集与Android性能优化相关的视频《 Android Performance Patterns》视频已运至墙内，主题为“New year, new initiative” 详细查看<a href="http://t.cn/RZt1F4S">G+社区</a> 和 <a href="http://www.infoq.com/cn/news/2015/01/google-android-performance?utm_campaign=infoq_content&amp;utm_source=infoq&amp;utm_medium=feed&amp;utm_term=global&amp;utm_reader=feedly#0-tsina-1-92503-397232819ff9a47a7b7e80a40613cfe1">Google探讨Android性能模式的16个视频总结</a></p>
  </li>
  <li>
    <p><a href="http://www.imooc.com/view/237?from=itblog">打造Android流式布局和热门标签</a></p>

    <p>本课程将带大家通过自定义ViewGroup实现流式布局，课程详细介绍了自定义控件需要掌握的步骤，每个步骤相关方法的作用、调用时机的讲解以及编写。在完成自定义ViewGroup编写后，实战应用于热门标签（包括动态添加）的显示。</p>
  </li>
</ol>

<h3 id="section-4">设计</h3>

<h3 id="section-5">工具</h3>

<ol>
  <li>
    <p><a href="https://github.com/abynim/SketchSquares">SketchSquares</a></p>

    <p>一个将Sketch的layers自动替换为Instagram照片的插件。</p>
  </li>
</ol>

<hr />
<p>版权声明：欢迎自由转载-非商用-非衍生-保持署名 | <a href="http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh">Creative Commons BY-NC-ND 3.0</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android开发周报 Issue#14]]></title>
    <link href="http://www.inferjay.com/blog/2015/01/05/android-dev-weekly-issue-14/"/>
    <updated>2015-01-05T23:41:36+08:00</updated>
    <id>http://www.inferjay.com/blog/2015/01/05/android-dev-weekly-issue-14</id>
    <content type="html"><![CDATA[<h3 id="section">新闻</h3>

<ol>
  <li>
    <p><a href="http://www.infoq.com/cn/news/2015/01/java-date-format-with-caution">慎用Java日期格式化</a></p>

    <p>这条留言实际指向了Twitter上的一个帖子，这个帖子提醒大家，如果使用了YYYY的格式符来格式化日期，那么就有可能用错格式了。Reddit的一位读者解释说，Twitter由于误用格式符，把当天的日期变成了2015年12月的某天。</p>
  </li>
</ol>

<h3 id="section-1">教程</h3>

<ol>
  <li>
    <p><a href="http://blog.csdn.net/luoshengyang/article/details/42072975">ART运行时垃圾收集机制简要介绍和学习计划</a></p>

    <p>为了学习ART运行时的垃圾收集机制，我们先把Dalvik虚拟机的垃圾收集机制研究了一遍。这是因为两者都使用到了Mark-Sweep算法，因此它们在概念上有很多一致的地方。然而在实现上，Dalvik虚拟机的垃圾收集机制要简单一些。这样我们就可以先从简单的Dalvik虚拟机垃圾收集机制入手，然后再逐步深入地学习复杂的ART运行时垃圾收集机制。</p>
  </li>
  <li>
    <p><a href="http://www.jianshu.com/p/6c2b7d261e1a">Material Design in Action — 猿题库</a></p>

    <p>猿题库很早之前就发布了 Android 版本的客户端，但猿题库的联合创始人，郭常圳 先生，并不认同 Android Design （或者现在的 Material Design），而且认为应用程序的设计规范，应当由开发商来规定。然而当我试用猿题库的时候发现，这个应用对其进行 Material Design 的适配，其实并不困难。因此就有了对其进行重新设计的念头。</p>
  </li>
  <li>
    <p><a href="http://blog.jobbole.com/78995/">正确使用Android性能分析工具——TraceView</a></p>

    <p>最近公司app中有些列表在滑动的时候会有卡顿现象，我就开始着手解决这些问题，解决问题之前首先要分析列表滑动的性能瓶颈在什么地方。因为之前不会正确使用TraceView这个工具，主要是看不懂TraceView界面下方数据指标的值代表什么意思…以前我用StopWatch类来分析性能，现在觉得弱爆了…不过有些地方StopWatch工具类还是很简单好用的~</p>
  </li>
</ol>

<!--more-->

<ol>
  <li>
    <p><a href="http://testerhome.com/topics/1756">Gradle 中的 task 依赖</a></p>

    <p>文章讲解了如何自定义Gradle的task，以及怎样定义task之间的依赖关系。</p>
  </li>
  <li>
    <p><a href="http://www.lightskystreet.com/2014/12/15/viewpager-anim/">动画系列 - ViewPger动画</a></p>

    <p>本篇文章介绍的ViewPager动画，可以分为两类，第一类是针对于ViewPager的界面滑动动画(这个是PageTransformer的真正用途)，分析并比较了AndroidImageSlider和JazzyViewPager两种实现，第二类是对ViewPager中的内容进行动画处理，这个是这个是PageTransformer的巧妙应用，处理好了可以达到很棒的交互效果，示例是Yahoo天气的视差效果。</p>
  </li>
  <li>
    <p><a href="http://www.csdn.net/article/2014-12-30/2823366-Locate-Android-NDK">如何定位Android NDK开发中遇到的错误</a></p>

    <p>Android NDK中的错误定位对很多开发者来说是一件头疼的事，本文通过一个Demo程序详细讲解了NDK的错误是如何产生的，以及如何通过命令行工具定位NDK的问题所在。</p>
  </li>
  <li>
    <p><a href="http://www.cnblogs.com/sunzn/archive/2013/05/10/3064129.html">Android 编程下 Touch 事件的分发和消费机制</a></p>

    <p>Android 中与 Touch 事件相关的方法包括：dispatchTouchEvent(MotionEvent ev)、onInterceptTouchEvent(MotionEvent ev)、onTouchEvent(MotionEvent ev)；能够响应这些方法的控件包括：ViewGroup、View、Activity。</p>
  </li>
  <li>
    <p><a href="http://weibo.com/p/1001603793195556321741">Android源码下载和编译总结</a></p>

    <p>前几天常用的笔记本电脑挂了，要拿去维修，于是就准备用另一台备用电脑来重新下载和编译一下Android源码，以便工作研究之用。鉴于最近一直都有人问下载和编译Android源码的问题，并且我上一次写Android源码编译的文章已经是2011年的事情，于是就趁这个机会写篇文章总结一下。</p>
  </li>
</ol>

<h3 id="section-2">代码&amp;开源库</h3>

<ol>
  <li>
    <p><a href="https://github.com/wasabeef/awesome-android-ui">awesome-android-ui</a></p>

    <p>一些 Android UI/UX 库的集合列表。</p>
  </li>
  <li>
    <p><a href="https://github.com/nhachicha/android-native-dependencies">android-native-dependencies</a></p>

    <p>一个解析和下载Android native 依赖的Gradle插件。</p>
  </li>
  <li>
    <p><a href="https://github.com/xiprox/ErrorView">ErrorView</a></p>

    <p>一个用来显示错误信息的自定义View，包含图标、主标题、自标题和重试按钮。</p>

    <p><img src="https://raw.githubusercontent.com/xiprox/ErrorView/master/graphics/screenshots/ss_01.png" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/wangjiegulu/DraggableFlagView">DraggableFlagView</a></p>

    <p>可拖拽的红点，（仿新版QQ，tab下面拖拽标记为已读的效果），拖拽一定的距离可以消失回调。</p>
  </li>
</ol>

<h3 id="section-3">工具</h3>

<ol>
  <li>
    <p><a href="https://hyperfox.org/">Hyperfox</a></p>

    <p>一个用Go 语言写的强悍的抓包工具！可以抓取https协议的！</p>

    <p><img src="https://hyperfox.org/images/hyperfox-diagram.png" alt="image" /></p>
  </li>
</ol>

<h3 id="section-4">设计</h3>

<h3 id="section-5">教程</h3>

<ol>
  <li>
    <p><a href="http://www.tuyiyi.com/w/36011.html">大屏手机时代，如何重塑界面交互</a></p>

    <p>这是一个大屏手机的时代。强调这件事情的意义在于，这已经成为事实。Medium上存在一份个人统计。在过去7年，新上市的手机屏幕尺寸越来越大。</p>
  </li>
</ol>

<hr />
<p>版权声明：欢迎自由转载-非商用-非衍生-保持署名 | <a href="http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh">Creative Commons BY-NC-ND 3.0</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android开发周报 Issue#13]]></title>
    <link href="http://www.inferjay.com/blog/2014/12/29/android-dev-weekly-issue-13/"/>
    <updated>2014-12-29T10:18:59+08:00</updated>
    <id>http://www.inferjay.com/blog/2014/12/29/android-dev-weekly-issue-13</id>
    <content type="html"><![CDATA[<h3 id="section">新闻</h3>
<ol>
  <li>
    <p><a href="http://www.infoq.com/cn/news/2014/12/oracle-java-jar-package">Oracle开始从Java运行时中移除JAR包</a></p>

    <p>早在2012年8月，在Java平台首席架构师Mark Reinhold宣布<a href="http://openjdk.java.net/projects/jigsaw/">模块化项目Jigsaw</a>之后不久，<a href="http://openjdk.java.net/jeps/162">JEP 162</a>这一题为“准备模块化”的提案就指出，在Jigsaw项目中为模块化系统开发的代码不会集成到JDK 8中。那次延期直接将模块化支持推迟到JDK 9，最早也得到2016年。</p>
  </li>
  <li>
    <p><a href="http://www.eoeandroid.com/thread-558758-1-1.html">android5.0让位，Android 6.0曝光这是神马情况？</a></p>

    <p>　Android 5.0刚和我们见面没多久，下一代操作系统Android 6.0就曝光了。外媒报道称，谷歌另一个开发小组已经着手进行一款代号为“M”的系统的研发工作，而这个“M”很有可能就是Android 6.0的代号。据猜测，Android 6.0最主要的变化将会是优化车载表现，可直接安装在汽车当中，这样用户无需智能手机即可直接控制汽车。</p>
  </li>
</ol>

<h3 id="section-1">教程</h3>

<ol>
  <li>
    <p><a href="http://www.cnblogs.com/ct2011/p/4183553.html">将Eclipse代码导入到AndroidStudio的两种方式</a></p>

    <p>说到使用AndroidStudio，除了新建的项目，我们都会面临的问题是原先Eclipse的代码该怎么导入到AndroidStudio中使用。Google为了让我们更加方便的使用AndroidStudio，提供了两种导入Eclipse代码的方式：一种兼容Eclipse，一种是全新的Android Gradle Project.</p>
  </li>
  <li>
    <p><a href="http://www.importnew.com/14227.html">Java 注解指导手册 – 终极向导</a></p>

    <p>在这篇文章中我们将阐述什么是Java注解，它们如何工作，怎么使用它们。我们将揭开Java注解的面纱，包括内建注解或称元注解，还将讨论Java8中与之相关的的新特性。最后，我们将实现自定义的注解，编写一个使用注解的处理程序（消费器），它通过java反射使用注解。</p>
  </li>
  <li>
    <p><a href="http://blog.jobbole.com/30940/">缓存、缓存算法和缓存框架简介</a></p>

    <p>我们都听过 cache，当你问他们是什么是缓存的时候，他们会给你一个完美的答案，可是他们不知道缓存是怎么构建的，或者没有告诉你应该采用什么标准去选择缓存框架。在这篇文章，我们会去讨论缓存，缓存算法，缓存框架以及哪个缓存框架会更好。</p>
  </li>
</ol>

<!--more-->

<ol>
  <li>
    <p><a href="http://www.infoq.com/cn/news/2014/12/qq-mobile-practice">手机QQ的移动化实践之路</a></p>

    <p>手机QQ的移动化实践之路】在刚刚结束的AS北京上，腾讯即时通讯平台部技术总监范瑞彬做了题为《手机QQ的移动化实践之路》的演讲，从移动环境的特点、如何做好接入、架构设计理念三个方面分享了手Q一路走来的诸多经验。演讲PPT下载：<a href="http://pan.baidu.com/s/1mgIDMtU">http://pan.baidu.com/s/1mgIDMtU</a></p>
  </li>
  <li>
    <p><a href="http://www.infoq.com/cn/news/2014/12/taobao-app-evolution">手机淘宝构架演化实践</a></p>

    <p>阿里心石：手机淘宝构架演化实践】在本届ArchSummit中，来自阿里无线事业部的高级专家李敏（花名心石 @allblue_华丽地低调 ）与我们分享了《手机淘宝架构演化实践》，畅谈阿里巴巴无线从开始之初到成为日活上亿级别电商应用技术变迁和积累。演讲PPT下载：<a href="http://pan.baidu.com/s/1kTgMfMv">http://pan.baidu.com/s/1kTgMfMv</a></p>
  </li>
  <li>
    <p><a href="http://www.testerhome.com/topics/1718">Gradle 学习专辑</a></p>

    <p>该学习专辑包含：gradle 初步构建（一）、Java Project Gradle Emma、Android Project Gradle jacoco、Android Gradle Espresso tests、自由的使用 gradle 构建你的应用、Groovy 初探（一）、gradle 集成修改 Android Manifest.xml 打多个包实践和Gradle 编译交互小技巧等，并且还在持续更新中。</p>
  </li>
  <li>
    <p><a href="http://tech.glowing.com/cn/dai-ma-gui-fan-he-androidxiang-mu-zhong-de-xie-ke-yong-gong-ju/">代码规范和Android项目中的一些可用工具</a></p>

    <p>这里主要讲一下关于代码规范的相关问题，和在Android项目中如何利用一些工具进行规范和检查。代码规范不是一个Android项目特有的问题，所以前部分内容是不单针对Android的。</p>
  </li>
  <li>
    <p><a href="http://stormzhang.gitcafe.com/devtools/2014/12/18/android-studio-tutorial4/">Android Studio系列教程四–Gradle基础</a></p>

    <p><a href="http://weibo.com/zhangqi8">googdev</a>结合Stduio 1.0正式版与最新的Gradle语法通过自己的开源项目 <a href="https://github.com/stormzhang/9GAG">9GAG</a> 讲解了Gradle相关的知识，后续会介绍一种我常用的快速方便的编译查看第三方开源项目的方法，如何导入Android Studio，Gradle常用基本命令，多渠道打包配置等。</p>
  </li>
  <li>
    <p><a href="http://top.jobbole.com/17733/">每个程序员至少阅读两次的 10 篇技术论文</a></p>

    <p>这10篇论文包括：编程语言中的基本概念、为什么函数式编程重要、计算机编程的公理基础、分布式系统中的时间、时钟和事件顺序、理解类型、数据抽象和多态、符号表达式的递归函数，及其机器计算等。</p>
  </li>
</ol>

<h3 id="section-2">代码&amp;开源库</h3>

<ol>
  <li>
    <p><a href="https://github.com/oli107/material-range-bar">MaterialRangeBar</a></p>

    <p>Android widget for selecting a range of values.</p>
  </li>
  <li>
    <p><a href="https://github.com/StanKocken/SVG2Drawable">SVG2Drawable</a></p>

    <p>Use a jar executable to create a Drawable class to display a SVG on Android.</p>
  </li>
  <li>
    <p><a href="https://github.com/kageiit/gradle-robojava-plugin">gradle-robojava-plugin</a></p>

    <p>Gradle plugin to integrate Robolectric tests into Android Studio。</p>
  </li>
  <li>
    <p><a href="https://github.com/westlinkin/AndroidLocalizationer">AndroidLocalizationer</a></p>

    <p>This is a Android Studio/ IntelliJ IDEA plugin to localize your Android app, translate your string resources automactically. <a href="https://plugins.jetbrains.com/plugin/7629">https://plugins.jetbrains.com/plugin/7629</a></p>
  </li>
  <li>
    <p><a href="https://github.com/telly/MrVector">MrVector</a></p>

    <p>AKA VectorDrawableCompat: A 14+ backport of VectorDrawable.</p>
  </li>
  <li>
    <p><a href="https://github.com/frogermcs/HelloMultidex">HelloMultidex</a></p>

    <p>Example project for multi-dex project in Android.</p>
  </li>
  <li>
    <p><a href="https://github.com/jasonpolites/gesture-imageview">gesture-imageview</a></p>

    <p>Implements pinch-zoom, rotate, pan as an ImageView for Android 2.1+.</p>
  </li>
  <li>
    <p><a href="https://github.com/nispok/slidingtabs">slidingtabs</a></p>

    <p>Gradle port of Google’s SlidingTabLayout to display a custom ViewPager title strip.</p>
  </li>
  <li>
    <p><a href="https://github.com/Malinskiy/SuperRecyclerView">SuperRecyclerView</a></p>

    <p>Pumped up RecyclerView.This is an attempt to make RecyclerView easier to use.</p>

    <p>Features built in:</p>

    <ul>
      <li>ProgressBar while adapter hasn’t been set</li>
      <li>EmptyView if adapter is empty</li>
      <li>SwipeRefreshLayout (Google’s one)</li>
      <li>Infinite scrolling, when you reach the X last item, load more of them.</li>
      <li>Swipe To Dismiss</li>
      <li>Sticky headers (via <a href="https://github.com/eowise/recyclerview-stickyheaders">Eowise</a>, see sample)</li>
    </ul>
  </li>
  <li>
    <p><a href="https://github.com/aicaprio/CurtainView">CurtainView</a></p>

    <p>An android view,which can layer on any gravity for swiping.</p>
  </li>
</ol>

<h3 id="section-3">工具</h3>

<ol>
  <li>
    <p>国内几个Android SDK镜像</p>

    <p>大连东软信息学院镜像服务器的地址: <code>http://mirrors.neusoft.edu.cn</code> 端口：80</p>

    <pre><code>北京化工大学镜像服务器的地址: 
1. IPv4: `http://ubuntu.buct.edu.cn/` 端口：80
2. IPv4: `http://ubuntu.buct.cn/`   端口：80
3. IPv6: `http://ubuntu.buct6.edu.cn/`  端口：80
</code></pre>

    <p>上海GDG镜像服务器地址:<code>http://sdk.gdgshanghai.com </code>  端口：8000</p>

    <p><strong>使用方法</strong>：</p>

    <ol>
      <li>启动 Android SDK Manager ，打开主界面，依次选择『<strong>Tools</strong>』、『<strong>Options…</strong>』，弹出『<strong>Android SDK Manager - Settings</strong>』窗口；</li>
      <li>在『<strong>Android SDK Manager - Settings</strong>』窗口中，在『<strong>HTTP Proxy Server」和「HTTP Proxy Port</strong>』输入框内填入上面镜像服务器地址和端口，并且选中『<strong>Force https://… sources to be fetched using http://…</strong>』复选框。设置完成后单击『<strong>Close</strong>』按钮关闭『<strong>Android SDK Manager - Settings</strong>』窗口返回到主界面；</li>
      <li>依次选择『<strong>Packages</strong>』、『<strong>Reload</strong>』。</li>
    </ol>
  </li>
  <li>
    <p><a href="https://github.com/mcxiaoke/gradle-packer-plugin">gradle-packer-plugin Android 多渠道打包工具</a></p>

    <p>gradle-packer-plugin 是Android多渠道打包工具Gradle插件，可方便的于自动化构建系统集成，通过很少的配置可实现如下功能 ：</p>

    <ul>
      <li>支持自动替换AndroidManifest文件中的meta-data字段实现多渠道打包</li>
      <li>支持自定义多渠道打包输出的存放目录和最终APK文件名</li>
      <li>支持自动修改versionName中的build版本号，实现版本号自动增长</li>
    </ul>
  </li>
  <li>
    <p><a href="https://gitter.im">Gitter.im</a></p>

    <p>Chat, for GitHub.</p>

    <p><img src="http://ww4.sinaimg.cn/bmiddle/005GSHYzjw1eniqp77z75j31kw0w74ii.jpg" alt="image" /></p>
  </li>
</ol>

<h3 id="section-4">视频</h3>

<ol>
  <li><a href="http://v.youku.com/v_show/id_XNTMzMjYzMzM2.html">阿里技术沙龙第十六期《android插件化及动态部署—ATLAS 》伯奎</a></li>
</ol>

<h3 id="section-5">设计</h3>

<h3 id="section-6">教程</h3>

<ol>
  <li>
    <p><a href="http://zhuanlan.zhihu.com/rijing/19845226">Sketch 制作扁平图标</a></p>

    <p>用Sketch一步一步教你制作扁平图标，步骤很详细</p>
  </li>
  <li>
    <p><a href="http://leonpd.lofter.com/post/20f397_4cb74d1">动效软件 Form 教程：概览与基础 patch 介绍</a></p>

    <p>都说产品设计师的设计可以用 Axure + Sketch + Origami三者联动，完成原型、视觉和动效的一条龙工作，前一段时间也抽空学习了一下 Quartz Composer（以下简称 QC） + Origami，虽然有一定的上手难度，但是确实能够做出非常逼真的效果。</p>
  </li>
</ol>

<hr />
<p>版权声明：欢迎自由转载-非商用-非衍生-保持署名 | <a href="http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh">Creative Commons BY-NC-ND 3.0</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android开发周报 Issue#12]]></title>
    <link href="http://www.inferjay.com/blog/2014/12/22/android-dev-weekly-issue-12/"/>
    <updated>2014-12-22T09:54:44+08:00</updated>
    <id>http://www.inferjay.com/blog/2014/12/22/android-dev-weekly-issue-12</id>
    <content type="html"><![CDATA[<h3 id="section">文章</h3>

<ol>
  <li>
    <p><a href="http://blog.csdn.net/luoshengyang/article/details/41822747">Dalvik虚拟机垃圾收集（GC）过程分析</a></p>

    <p>前面我们分析了Dalvivk虚拟机堆的创建过程，以及Java对象在堆上的分配过程。这些知识是理解Dalvik虚拟机垃圾收集过程的基础。垃圾收集是一个复杂的过程，它要将那些不再被引用的对象进行回收。一方面要求Dalvik虚拟机能够标记出哪些对象是不再被引用的。另一方面要求Dalvik虚拟机尽快地回收内存，避免应用程序长时间停顿。本文就将详细分析Dalvik虚拟机是如何解决上述问题完成垃圾收集过程的。</p>
  </li>
  <li>
    <p><a href="http://www.jianshu.com/p/c85984cf99e2?utm_campaign=maleskine&amp;utm_content=note&amp;utm_medium=writer_share&amp;utm_source=weibo">使用Android Studio查看Android Lollipop源码</a></p>

    <p>作为Google的亲儿子,Nexus手机系列所收到的待遇大家有目共睹.Android5.0出来之后,Nexus5第一时间就升级到了最新的系统.那么作为Google亲儿子的Android Studio同样备受Google的重视,我也是第一时间从Eclipse转投到了Android Studio的怀抱中,从最初的测试版本一路升级到现在的1.0正式版本(今天发布了1.0.2,果断已经升级了),关于Android Studio的好处我就不用说了…</p>
  </li>
  <li>
    <p><a href="http://greenrobot.me/devnews/facebook-engineer-improve-android-app/">Facebook工程师是如何改进他们Android客户端的</a></p>

    <p>作为世界上最大的社交网络，Facebook的Android客户端面临着各种各样的使用环境（地理环境、Android设备以及移动网络等环境的差异）。也正是这个原因，为了检测自家Android客户端在发展中国家的性能表现，Android的产品经理、工程师在2013年的时候去了一趟非洲。当时我看到这个新闻的时候觉得有点怪异，后来看到他们这篇博客才有点理解他们这样做的原因了。</p>
  </li>
  <li>
    <p><a href="http://greenrobot.me/devpost/i-dont-need-your-permission/">你的Android应用完全不需要那么多的权限</a></p>

    <p>Android系统的权限从用户的角度来看有时候的确有点让人摸不着头脑。有时候可能你只需要做一些简单的事情（对联系人的信息进行编辑），却申请了远超你应用所需的权限（比如访问所有联系人信息的权限）。</p>
  </li>
</ol>

<!--more-->

<ol>
  <li>
    <p><a href="http://greenrobot.me/devpost/about-android-dex-method-number-limit/">关于 Android Dex 方法限制的一些总结</a></p>

    <p>在了解这个问题之前我们先要来看看Android 应用编译的过程:1. IDE中的资源打包工具 (Android Asset Packaging Tool ，即图中的aapt) 会将应用中的资源文件进行编译，这些资源文件包括 AndroidManifest.xml文件，为Activity定义的 XML 文件等等。在这个编译过程中也会产生一个 R.java 文件，这样你就可以在你的Java代码中引用这些资源了。</p>
  </li>
  <li>
    <p><a href="http://bobao.360.cn/learning/detail/122.html">安卓Hacking科普系列</a></p>

    <p>本系列科普文章包含：<a href="http://bobao.360.cn/learning/detail/122.html">Part 1: 应用组件攻防</a>、<a href="http://bobao.360.cn/learning/detail/127.html">Part 2: Content Provider攻防</a>、<a href="http://bobao.360.cn/learning/detail/126.html">Part 3：Broadcast Receivers攻防</a>、<a href="http://bobao.360.cn/learning/detail/133.html">Part 4:非预期的信息泄露（边信道信息泄露）</a>、<a href="http://bobao.360.cn/learning/detail/138.html">Part 5:使用JDB调试Java应用</a>、<a href="http://bobao.360.cn/learning/detail/140.html">Part 6：调试Android应用</a>、<a href="http://bobao.360.cn/learning/detail/142.html">Part 7:攻击WebView</a>、<a href="http://bobao.360.cn/learning/detail/144.html">Part 8:Root的检测和绕过</a>、<a href="http://bobao.360.cn/learning/detail/150.html">Part9: 不安全的本地存储：Shared Preferences</a>、<a href="http://bobao.360.cn/learning/detail/152.html">Part 10:不安全的本地存储</a>等，还在更新中。</p>
  </li>
</ol>

<h3 id="section-1">代码&amp;开源库</h3>

<ol>
  <li>
    <p><a href="https://github.com/golang/mobile">Go on Android</a></p>

    <p>The Go mobile repository holds packages and build tools for using Go on Android.</p>
  </li>
  <li>
    <p><a href="https://github.com/KeithYokoma/AccountAutoCompleteEditText">AccountAutoCompleteEditText</a></p>

    <p>Just a simple implementation for use of auto complete text view with device account suggestion.</p>
  </li>
  <li>
    <p><a href="https://github.com/pungrue26/SelectableRoundedImageView">SelectableRoundedImageView</a></p>

    <p>Android ImageView that supports different radiuses on each corner. It also supports oval(and circle) shape and border. This would be especially useful for using inside CardView which should be rounded only top left and top right corners(Don’t forget to call setPreventCornerOverlap(false) on your cardview).</p>
  </li>
  <li>
    <p><a href="https://github.com/ObjectLayout/ObjectLayout">ObjectLayout</a></p>

    <p>Java classes designed with optimizable object layout in mind 
<a href="http://objectlayout.github.com/ObjectLayout/">http://objectlayout.github.com/ObjectLayout/</a>。</p>
  </li>
  <li>
    <p><a href="https://github.com/glomadrian/MvpCleanArchitecture">MvpCleanArchitecture</a></p>

    <p>A sample project using Clean architecture and MVP in Android。</p>
  </li>
  <li>
    <p><a href="https://github.com/paveldudka/ViewStateSaveDemo">ViewStateSaveDemo</a></p>

    <p>Simple Demo of how do you save View’s state in Android。</p>
  </li>
  <li>
    <p><a href="https://github.com/jmolsmobile/LandscapeVideoCamera">LandscapeVideoCamera</a></p>

    <p>Powerful custom Android Camera with granular control over the video quality and filesize, restricting recordings to landscape only.</p>
  </li>
  <li>
    <p><a href="https://github.com/andkulikov/transitions-everywhere">transitions-everywhere</a></p>

    <p>Backport of Transitions API from Android KitKat and Lollipop. Compatible with Android 2.2+。</p>
  </li>
  <li>
    <p><a href="https://github.com/krschultz/android-proguard-snippets">android-proguard-snippets</a></p>

    <p>Example Proguard configurations for common Android libraries。</p>
  </li>
</ol>

<h3 id="section-2">工具</h3>

<ol>
  <li>
    <p><a href="http://tools.android.com/download/studio/canary/1-0rc4">Android Studio 1.0.2</a></p>

    <p><strong>墙内下载地址：</strong><a href="http://www.androiddevtools.cn/#android-studio">http://www.androiddevtools.cn/#android-studio</a>	 	 </p>
  </li>
</ol>

<h3 id="section-3">视频</h3>

<ol>
  <li>
    <p><a href="http://v.youku.com/v_show/id_XODUxODEzMDQ4.html?f=23217955">Android DevBytes</a></p>

    <p>墙内DevBytes视频更新啦！包括最新的《Android Vector Graphics》（难得有个华裔面孔！）、《Introducing Route 85》（Google面向iOS开发即将推出一系列视频）以及Auto和Wear（有车有表！）</p>
  </li>
</ol>

<h3 id="section-4">设计</h3>

<h4 id="section-5">工具</h4>

<ol>
  <li>
    <p><a href="http://www.materialpalette.com">Material Design Color Palette Generator - Material Palette</a></p>

    <p>一个可以快速搭配Material Design主题颜色的并且提供下载的在线网站.</p>
  </li>
  <li>
    <p><a href="https://github.com/t32k/material-design-color-palette-sketch-plugin">material-design-color-palette-sketch-plugin</a></p>

    <p>Sketch app plugin for displaying Google material design color palette.</p>
  </li>
</ol>

<hr />
<p>版权声明：欢迎自由转载-非商用-非衍生-保持署名 | <a href="http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh">Creative Commons BY-NC-ND 3.0</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android开发周报 Issue#11]]></title>
    <link href="http://www.inferjay.com/blog/2014/12/15/android-dev-weekly-issue-11/"/>
    <updated>2014-12-15T13:56:36+08:00</updated>
    <id>http://www.inferjay.com/blog/2014/12/15/android-dev-weekly-issue-11</id>
    <content type="html"><![CDATA[<h3 id="section">文章</h3>

<ol>
  <li>
    <p><a href="http://droidyue.com/blog/2014/11/29/why-onsharedpreferencechangelistener-was-not-called/">Google为何这样设计OnSharedPreferenceChangeListener</a></p>

    <p>之前使用OnSharedPreferenceChangeListener，遇到了点小问题，就是有些时候OnSharedPreferenceChangeListener没有被触发。最近花了点时间研究了一下，小做整理。本文将会介绍监听器不被触发的原因，解决方法，以及其中隐含的一些技术细节。</p>
  </li>
  <li>
    <p><a href="http://blog.isming.me/2014/12/12/import-library-to-android-studio/">导入开源库到基于Android Studio构建的项目中</a></p>

    <p>前两天，谷歌发布了Android Studio 1.0的正式版，也有更多的人开始迁移到Android Studio进行开发。然而，网上很多的开源库,控件等还是以前的基于Eclipse进行开发，很多人不知道怎么导入到自己的基于Android Studio项目中来，微博上也有人私信我，让我来写写，正好今天回来的比较早，就写写吧。主要介绍一下常见的一些导包的场景。</p>
  </li>
  <li>
    <p><a href="http://www.cnblogs.com/ct2011/p/4152323.html">Android批量打包提速 - 1分钟900个市场不是梦</a></p>

    <p>使用Ant或者Gradle来给程序进行多渠道批量打包，通常都是在manifest文件中写入一个meta标签：<code>&lt;meta-data android:name="CHANNEL" android:value="xxx" /&gt;</code> meta的key值固定，通过循环改变meta中的value值来实现市场渠道的写入。Ant批量打包实现相对麻烦，以前写的时候多亏了<a href="http://www.cnblogs.com/qianxudetianxia/archive/2012/07/04/2573687.html">谦虚的天下-《App自动化之使用Ant编译项目多渠道打包》</a> 。如果没有这篇帖子，真不知道当时Ant要折腾多少回才能写好。</p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/maosidiaoxian/article/details/41692535">上传Android或Java库到Maven central repository</a></p>

    <p>主要介绍利用Sonatype将jar或aar提交到Maven的中央仓库。是不是希望将自己的jar或是aar传到maven官方库中，在The Central Repository中可以被其他人搜索使用呢，是的话，往下看吧。</p>
  </li>
</ol>

<!--more-->

<ol>
  <li>
    <p><a href="http://greenrobot.me/devpost/android-custom-layout/">深入解析Android的自定义布局</a></p>

    <p>这篇文章是前Firefox Android工程师（现在跳槽去Facebook了） Lucas Rocha所写，文中对Android中常用的四种自定义布局方案进行了很好地分析，并结合这四种Android自定义布局方案所写的示例项目讲解了它们各自的优劣以及四种方案之间的比较。</p>
  </li>
  <li>
    <p><a href="http://greenrobot.me/devpost/java-faster-less-jvm-garbage/">Linkedin工程师是如何优化他们的Java代码的</a></p>

    <p>最近在刷各大公司的技术博客的时候，我在Linkedin的技术博客上面发现了一篇很不错博文。这篇博文介绍了Linkedin信息流中间层Feed Mixer，它为Linkedin的Web主页，大学主页，公司主页以及客户端等多个分发渠道提供支撑（如下图所示）。</p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/column/details/android5.html">跟着ym学习Android5.0</a></p>

    <p>跟着作者一步步学习Android 5.0开发。从创建模拟器开始，再到Material主题、Palette、AnimatedVectorDrawable、RecyclerView、CardView、Activity过渡动画、如何定义阴影等。</p>
  </li>
  <li>
    <p><a href="http://qichaochen.github.io/2014/12/08/108-Android-Toolbar-DrawerLayout-01/">[Material Design]使用Toolbar + DrawerLayout快速实现高大上菜单侧滑</a></p>

    <p>如果你有在关注一些遵循最新的Material Design设计规范的应用的话（如果没有，假设你有！），也许会发现有很多使用了看起来很舒服、很高大上的侧滑菜单动画效果。</p>
  </li>
  <li>
    <p><a href="http://www.dgtle.com/article-5885-1.html">安卓中的 Cydia — Xposed 框架插件专题</a></p>

    <p>大名鼎鼎的 Xposed，相信不少经常泡在各类安卓论坛的安卓粉们都听说过。在安卓进入 4.0 的时代后，不少“大神”也都会在自己做的 Rom 中添加这个 Xposed 软件。</p>
  </li>
</ol>

<h3 id="section-1">代码&amp;开源库</h3>

<ol>
  <li>
    <p><a href="https://github.com/chrisbatt/AndroidFastImageProcessing">AndroidFastImageProcessing</a></p>

    <p>A framework for speeding up image processing on android devices by taking advantage of shaders on the GPU.	</p>
  </li>
  <li>
    <p><a href="https://github.com/stephanenicolas/loglifecycle">loglifecycle</a></p>

    <p>Logs all lifecycle methods of annotated Activities, Fragments, Services, Views, etc.</p>
  </li>
  <li>
    <p><a href="https://github.com/Narfss/ParallaxEverywhere">ParallaxEverywhere</a></p>

    <p>Parallax everywhere is a library with alternative android widgets with parallax effects.</p>
  </li>
  <li>
    <p><a href="https://github.com/adnan-SM/TimelyTextView">TimelyTextView</a></p>

    <p>Animated TextView like Timely app.</p>
  </li>
  <li>
    <p><a href="https://github.com/Manabu-GT/ExpandableTextView">ExpandableTextView</a></p>

    <p>ExpandableTextView是一个可以使开发人员能够轻松地创建可扩展/折叠的TextView效果，就像Google Play里用于显示App描述的TextView一样.</p>
  </li>
  <li>
    <p><a href="https://github.com/googlesamples">Google Samples</a></p>

    <p>Google在Github上发布了大量Demo，针对不同的特性，也包含了最新的API 21 (Lollipop).</p>
  </li>
</ol>

<h3 id="section-2">工具</h3>

<ol>
  <li>
    <p><a href="http://tools.android.com/download/studio/canary/1-0rc4">Android Studio 1.0正式版发布啦</a></p>

    <p><strong>墙内下载地址：</strong><a href="http://www.androiddevtools.cn/#android-studio">http://www.androiddevtools.cn/#android-studio</a>	 	 </p>
  </li>
  <li>
    <p><a href="https://github.com/airk000/gologcat">gologcat</a></p>

    <p>一个由golang编写，可以在终端中彩色输出logcat的实用工具，支持自定义颜色。</p>
  </li>
  <li>
    <p><a href="http://inloop.github.io/shadow4android/">Android 9-patch shadow generator</a></p>

    <p>Android点9图片阴影生成器。</p>
  </li>
</ol>

<h3 id="section-3">视频</h3>

<ol>
  <li>
    <p><a href="http://v.youku.com/v_show/id_XODQ1MjI2MDQ0.html?f=23088492">精通Android触摸系统(中英字幕)</a></p>

    <p><a href="http://www.weibo.com/oceancx?from=feed&amp;loc=nickname">@Ocean-藏心</a>同学历经3周的翻译,将1小时18分钟的视频,终于完成了. 简介:<a href="http://t.cn/RzxZs6E">的姊妹篇</a>，详细讲解了Android自定义事件处理的方方面面。配合<a href="http://blog.csdn.net/guolin_blog/">guolin</a> 大神CSDN的博客和上一个视频，让你对开发Android 自定义控件游刃有余。此外还有<a href="http://">@Trinea</a>大神的<a href="http://www.trinea.cn/android/touch-event-delivery-mechanism/">Android Touch事件传递机制</a>简略解读。</p>

    <p>视频中用到的PPT(PDF版)下载地址：<a href="http://wugengxin.cn/download/pdf/android/PRE_andevcon_mastering-the-android-touch-system.pdf">http://wugengxin.cn/download/pdf/android/PRE_andevcon_mastering-the-android-touch-system.pdf</a></p>
  </li>
  <li>
    <p><a href="http://www.jikexueyuan.com/course/396.html">Android Studio 1.0 (稳定版)的使用</a></p>

    <p>经过 2 年时间的研发，Google 终于在近日正式发布了面向 Android 开发者的集成开发环境 Android Studio 1.0（稳定版）。Android Studio 是 Google 开发的一款面向 Android 开发者的 IDE，支持 Windows、Mac、Linux 等操作系统，基于流行的 Java 语言集成开发环境 IntelliJ 搭建而成。该 IDE 在 2013 年 5 月的 Google I/O 开发者大会上首次露面，此间推出了若干个测试版，12 月 8 日发布的版本是 Android Studio 的首个稳定版。Google 称，相对于其他开发工具，Android Studio 更快、更具生产力，Android Studio 1.0 推出后，Google 将逐步放弃对原来主要的 Android 开发工具 Eclipse ADT 的支持。</p>
  </li>
</ol>

<h3 id="section-4">设计</h3>

<h4 id="section-5">文章</h4>

<ol>
  <li>
    <p><a href="http://www.jianshu.com/p/a3b2422b5465?utm_campaign=hugo&amp;utm_medium=reader_share&amp;utm_content=note&amp;utm_source=weibo">关于Material Design，做到这四点便足以让用户惊喜</a></p>

    <p>Material Design 主张将现实世界中的交互体验，应用到界面设计中来，以求用户的经验能够迁移，并更快习惯新系统。Teambition 已经根据 Material Design 重新设计了旗下所有的 Android 客户端产品。在实践过程中，设计和产品团队总结了一些值得分析的要点，与大家分享。</p>
  </li>
  <li>
    <p><a href="http://www.cocoachina.com/special/design/">给程序员的设计学习指南</a></p>

    <p>这是给 移动开发者 准备的设计学习指南。在这里你将接触到三大平台的设计规范、基础设计理论，以及设计实践，还有一些学习设计的资源。程序员为什么需要学习设计？理解设计能让程序员更上一层楼，能让TA与设计师的交流协作更高效愉快，甚至拥有独立开发面向大众的APP的能力。 <a href="http://www.cocoachina.com/programmer/20141113/10214.html">《程序员需要学习设计的5大理由》</a>。</p>
  </li>
  <li>
    <p><a href="http://zhuanlan.zhihu.com/zhezhexiong/19565895">[无线手册-4] dp、sp、px傻傻分不清楚[完整]</a></p>

    <p>做移动设计的同学，不管是原生app或者web app，应该对字体字号都是很头痛的问题。根本原因是，我们用唯一分辨率的电脑，设计各个不同尺寸大小分辨率的设备，那简直要疯掉了。 <a href="http://zhuanlan.zhihu.com/zhezhexiong/1956455">[无线手册-2]不得不说的icon-font</a> 	<a href="http://zhuanlan.zhihu.com/zhezhexiong/1956）4893">[无线手册-3] 移动App上的动画们</a></p>
  </li>
</ol>

<h4 id="section-6">资源</h4>

<ol>
  <li>
    <p><a href="http://www.androidicons.com/">250 free icons in 5 sizes and 14 colors</a></p>

    <p>包含5种尺寸和14种颜色的250个免费icons。</p>
  </li>
</ol>

<hr />
<p>版权声明：欢迎自由转载-非商用-非衍生-保持署名 | <a href="http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh">Creative Commons BY-NC-ND 3.0</a></p>
]]></content>
  </entry>
  
</feed>
