<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[脉脉不得语的技术博客]]></title>
  <link href="http://www.inferjay.com/atom.xml" rel="self"/>
  <link href="http://www.inferjay.com/"/>
  <updated>2014-12-01T12:50:07+08:00</updated>
  <id>http://www.inferjay.com/</id>
  <author>
    <name><![CDATA[inferjay]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Android开发周报 Issue#9]]></title>
    <link href="http://www.inferjay.com/blog/2014/12/01/android-dev-weekly-issue-9/"/>
    <updated>2014-12-01T12:42:08+08:00</updated>
    <id>http://www.inferjay.com/blog/2014/12/01/android-dev-weekly-issue-9</id>
    <content type="html"><![CDATA[<h3 id="section">文章</h3>

<ol>
  <li>
    <p><a href="http://blog.csdn.net/luoshengyang/article/details/41581063">Dalvik虚拟机Java堆创建过程分析</a></p>

    <p>使用C/C++开发应用程序最令头痛的问题就是内存管理。慎不留神，要么内存泄漏，要么内存破坏。虚拟机要解决的问题之一就是帮助应用程序自动分配和释放内存。为了达到这个目的，虚拟机在启动的时候向操作系统申请一大块内存当作对象堆。之后当应用程序创建对象时，虚拟机就会在堆上分配合适的内存块。而当对象不再使用时，虚拟机就会将它占用的内存块归还给堆。Dalvik虚拟机也不例外，本文就分析它的Java堆创建过程。</p>
  </li>
  <li>
    <p><a href="http://www.kuqin.com/shuoit/20140826/341828.html?url_type=39&amp;object_type=crawler&amp;pos=1">为什么Android的图片质量会比iPhone的差？</a></p>

    <p>经常看到有人问：“安卓版微信发出去的图片怎么那么渣！比iPhone的差远了！”。不只是微信，很多应用安卓版的图片质量就是要比iPhone版逊色很多，这到底是怎么回事？</p>
  </li>
  <li>
    <p><a href="http://qichaochen.github.io/2014/11/21/107-Facebook-Rebound-Demo/">[Material Design]使用Fackbook Rebound快速实现弹簧动画效果</a></p>

    <p>Rebound是Facebook推出的一款Android的物理和动画库，于2013年10月在Mobile@Scale大会上正式发布，旨在解决笨重、缓慢的传统移动网络界面。Rebound不是一款通用物理库，但其弹簧模型在应用程序中引入了现实世界的物理，易于集成，创建的动画能够让人感觉到非常自然，并且可以和Material Design的设计原则呼应，可用于滚动条、切换开关、呼叫等场景下。</p>
  </li>
  <li>
    <p><a href="http://stormzhang.com/devtools/2014/11/07/use-curl-debug/">使用curl来调试你的应用</a></p>

    <p>我们在客户端开发过程中总免不了和后端进行api对接，有时候需要对返回的数据格式进行调试，有时候每次运行客户端来发送请求，这个未免效率太低，这里就来介绍一个好用的工具–curl。</p>
  </li>
</ol>

<!--more-->

<ol>
  <li>
    <p><a href="http://www.codeceo.com/article/android-taskaffinity.html">Android taskAffinity属性使用详解</a></p>

    <p>Activity的归属，也就是Activity应该在哪个Task中，Activity与Task的吸附关系。我们知道，一般情况下在同一个应用中，启 动的Activity都在同一个Task中，它们在该Task中度过自己的生命周期，这些Activity是从一而终的好榜样。</p>
  </li>
  <li>
    <p><a href="http://www.codeceo.com/article/android-memory-manage.html">每个Android开发者必须知道的内存管理知识</a></p>

    <p>相信一步步走过来的Android从业者，每个人都会遇到OOM的情况。如何避免和防范OOM的出现，对于每一个程序员来说确实是一门必不可少的能力。今天我们就谈谈在Android平台下内存的管理之道，开始今天的主题之前，先再次回顾两个概念。</p>
  </li>
</ol>

<h3 id="section-1">代码&amp;开源库</h3>

<ol>
  <li>
    <p><a href="https://github.com/liaohuqiu/android-Ultra-Pull-To-Refresh">android-Ultra-Pull-To-Refresh</a></p>

    <p>很炫的下拉刷新效果库。</p>

    <p><img src="https://camo.githubusercontent.com/588a2ef2cdcfb6c71e88437df486226dd15605b3/687474703a2f2f737261696e2d6769746875622e71696e6975646e2e636f6d2f756c7472612d7074722f73746f72652d686f7573652d737472696e672d61727261792e676966" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/AnderWeb/discreteSeekBar">discreteSeekBar</a></p>

    <p><img src="https://camo.githubusercontent.com/e717e2597779d1ddc980ace6f3943f62483d8a8c/68747470733a2f2f6c68332e676f6f676c6575736572636f6e74656e742e636f6d2f2d376e62565058785568596b2f56472d724f3634704d57492f414141414141414148734d2f614d52676c7432567a726b2f773633392d683438302f616e696d6174696f6e2e676966" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/frogermcs/InstaMaterial">InstaMaterial</a></p>

    <p>Material Design风格的Instagram的客户端。</p>
  </li>
  <li>
    <p><a href="https://github.com/pnikosis/materialish-progress">materialish-progress</a></p>

    <p>Material Design风格的圆形进度条，最低支持到2.3的系统。</p>

    <p><img src="https://github.com/pnikosis/materialish-progress/raw/master/spinningwheel.gif" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/inaka/galgo">galgo</a></p>

    <p>Android日志工具库，可以把log显示在屏幕上。</p>

    <p><img src="https://camo.githubusercontent.com/1e2d3b204a0898b697876817cc19ab4a2fef5de2/687474703a2f2f6936312e74696e797069632e636f6d2f327177336279302e676966" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/cookpad/puree-android">puree-android</a></p>

    <p>一个Log日志收集框架。</p>
  </li>
  <li>
    <p><a href="https://github.com/gdpancheng/LoonAndroid">LoonAndroid</a></p>

    <p>一个ioc（依赖注入）框架，但是整个框架式不同于androidannotations，Roboguice等ioc框架，这是一个类似spring的实现方式。在整应用的生命周期中找到切入点，然后对activity的生命周期进行拦截，然后插入自己的功能。</p>
  </li>
</ol>

<h3 id="section-2">工具</h3>

<ol>
  <li>
    <p><a href="http://tools.android.com/download/studio/canary/1-0rc2">Android Studio 1.0 Release Candidate 2</a></p>

    <p>本次Release没有添加什么新的特性，只是修复了一些Bug，如果你之前已经升级到了RC1建议更新到RC2版。另外本次Release还针对Windows用户推出了包含SDK的安装包。</p>

    <p><strong>墙内下载地址：</strong><a href="http://www.androiddevtools.cn/#android-studio">http://www.androiddevtools.cn/#android-studio</a></p>
  </li>
</ol>

<h3 id="section-3">设计</h3>

<h4 id="section-4">文章</h4>

<ol>
  <li>
    <p><a href="http://www.oschina.net/news/57379/what-is-good-ui-design#0-tsina-1-76379-397232819ff9a47a7b7e80a40613cfe1">什么才是优秀的用户界面设计</a></p>

    <p>本文分享一些 Good UI 在一些项目中获取的设计以及运营策略等方面的经验。Good UI 是一家研究用户体验的设计机构。我们知道成功的页面设计不仅有很高的转化率更便于用户使用，既能满足商业目标更能为用户带来良好的体验。</p>
  </li>
  <li>
    <p><a href="https://medium.com/sebs-top-tips/material-navigation-drawer-sizing-558aea1ad266">Material Navigation Drawer sizing</a></p>

    <p>本文分析了Material的抽屉导航的大小到底多少才最符合设计规范和美观。</p>
  </li>
</ol>

<h4 id="section-5">素材</h4>

<ol>
  <li>
    <p><a href="https://dribbble.com/shots/1683873-Android-L-GUI-KIT">Android L GUI KIT</a></p>

    <p>Android L GUI KIT。</p>
  </li>
</ol>

<h4 id="section-6">工具</h4>

<ol>
  <li>
    <p><a href="http://oven.chrometaphore.com">OVEN</a></p>

    <p>A BETTER ASSETS WORKFLOW For Photoshop CC / 2014。</p>

    <p><img src="http://oven.chrometaphore.com/assets/oven_panel_screenshot@2x.png" alt="image" /></p>
  </li>
</ol>

<hr />
<p>版权声明：欢迎自由转载-非商用-非衍生-保持署名 | <a href="http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh">Creative Commons BY-NC-ND 3.0</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android开发周报 Issue#8]]></title>
    <link href="http://www.inferjay.com/blog/2014/11/24/android-dev-weekly-issue-8/"/>
    <updated>2014-11-24T10:56:01+08:00</updated>
    <id>http://www.inferjay.com/blog/2014/11/24/android-dev-weekly-issue-8</id>
    <content type="html"><![CDATA[<h3 id="section">文章</h3>

<ol>
  <li>
    <p><a href="http://blog.isming.me/2014/11/21/use-gradle-new/">使用gradle构建android项目（续）</a></p>

    <p>在几个月之前，我已经写过一篇使用gradle构建android项目的博客了<a href="http://blog.isming.me/2014/05/20/android4gradle/">http://blog.isming.me/2014/05/20/android4gradle/</a>,那篇文章已经介绍了如何使用gradle进行项目构建，以及为谷歌会推荐使用gradle。当时android的gradle插件是0.11.0,现在插件的版本已经是0.14.3了，对于一些老的方法和api，有一些已经被移除，无法使用。因此有必要再写一篇博客介绍这些被移除的部分和替代方案。同时由于个人学识原因，当时没有介绍的一些技巧，其他功能，也会在本文中进行介绍。</p>
  </li>
  <li>
    <p><a href="http://www.csdn.net/article/2014-11-21/2822753-material-design-libs/1">直接拿来用！十大Material Design开源项目</a></p>

    <p>本文详细介绍了十个Material Design开源项目，从示例、FAB、菜单、动画、Ripple到Dialog，看被誉为“Google第一次在设计语言和规范上超越了Apple”的Material Design是如何逐渐成为App的一种全新设计标准。另外推荐大家去 Github 上 Star 或者 Fork <a href="https://github.com/lightSky/MaterialDesignCenter"><code>MaterialDesignCenter</code></a>这个项目，该收集整理了</p>
  </li>
  <li>
    <p><a href="http://www.cnblogs.com/ct2011/p/4100132.html">放弃WebView，使用Crosswalk做富文本编辑器</a></p>

    <p>Android WebView做普通浏览还好，做富文本编辑器（<code>document.body.contentEditable=true;</code>），常常会遇到各种奇葩的bug，而且很难修复。尽管Google在版本迭代中不断修复bug，但依旧没法用它来做富文本编辑。</p>
  </li>
  <li>
    <p><a href="http://blog.isming.me/2014/11/17/material-design-for-pre-lollipop-android/">在低版本android系统上实现Material设计应用</a></p>

    <p>​Material Design真的很好看，动画效果真的很实用。前面也写了一些文章介绍如何编写Material风格的程序，但是很多都是一些新的api，低版本上面没有这些api，我们没办法使用。但是不用气馁，google官方，以及一些大牛，给我们提供了一些程序，让我们在低版本上面可以实现Material风格的程序，这里就给大家介绍一下。</p>
  </li>
</ol>

<!--more-->

<ol>
  <li>
    <p><a href="http://qichaochen.github.io/2014/11/17/106-Android-RoundedBitmapDrawable/">使用RoundedBitmapDrawable快速生成圆角和圆形图片</a></p>

    <p>在I/O大会之后，Google发布了新的Support lib，其中有一个是RoundedBitmapDrawable类，通过这个类可以很容易实现圆角和圆形图片。</p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/androidsecurity/article/details/41207959">“黑暗潜伏者” – 手机病毒新型攻击方式分析</a></p>

    <p>近期百度安全实验室发现一款“黑暗潜伏者”新型手机病毒。该病毒附着在众多壁纸和游戏类应用中。截至目前，已经发现感染该病毒的应用超过1万多款，感染用户超过3000万。</p>
  </li>
  <li>
    <p><a href="http://blog.jobbole.com/78995/">正确使用Android性能分析工具——TraceView</a></p>

    <p>TraceView是一个非常强大的性能分析工具，因为Android 官网对这个工具的使用介绍文档很少，而且一些中文博客中写的也都是抄来抄去，没有讲到底怎么使用。</p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/xyz_lmn/article/details/41052977#0-tsina-1-81289-397232819ff9a47a7b7e80a40613cfe1">移动web开发框架研究</a></p>

    <p>纯粹的总结一下移动web开发框架，移动web开发框架有jQuery Mobile 、Sencha Touch等等,他们都来源于web开发，是成熟的框架，jQuery Mobile出自于jQuery家族，Sencha Touch来自于ExtJS。jQuery Mobile 和Sencha Touch都是比较成熟老牌的框架，项目中也有应用。国内也有公司，像BAT巨头也在探索和实现了适合自己的移动web框架。</p>
  </li>
</ol>

<h3 id="section-1">代码&amp;开源库</h3>

<ol>
  <li>
    <p><a href="https://github.com/ekx/GitLabAndroid">GitLabAndroid</a></p>

    <p>GitLab的非官方开源客户端.</p>

    <p><img src="https://github.com/ekx/GitLabAndroid/raw/master/screenshots.png" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/snowdream/awesome-android">awesome-android</a></p>

    <p>收集整理了Gihub上Android相关的各种开源控件。</p>
  </li>
  <li>
    <p><a href="https://github.com/vince-styling/Netroid">Netroid</a></p>

    <p>Netroid是一个基于Volley实现的Android Http库。提供执行网络请求、缓存返回结果、批量图片加载、大文件断点下载的常见Http交互功能。致力于避免每个项目重复开发基础Http功能，实现显著地缩短开发周期的愿景。</p>
  </li>
  <li>
    <p><a href="https://github.com/kyze8439690/RevealLayout">RevealLayout</a></p>

    <p>附带一些Reveal动画效果的Layout，支持Android4.0以上系统。</p>
  </li>
  <li>
    <p><a href="https://github.com/03uk/CircularReveal">CircularReveal</a></p>

    <p>可以让你在2.3+系统使用Android 5.0的Reveal动画效果的库。</p>
  </li>
  <li>
    <p><a href="https://github.com/pavlospt/RoundedLetterView">RoundedLetterView</a></p>

    <p>仿Android 5.0联系人App的列表效果。</p>
  </li>
  <li>
    <p><a href="http://git.oschina.net/shelwee/UpdateHelper">UpdateHelper</a></p>

    <p>UpdateHelper是一个为了简化Android App的迭代升级开发的Android Library。</p>
  </li>
</ol>

<h3 id="section-2">新闻</h3>

<ol>
  <li>
    <p><a href="http://www.csdn.net/article/2014-11-20/2822732-google-play-android-dev-china">不任性了！Google Play宣布开通国内开发者通道</a></p>

    <p>Google今天宣布，中国的开发者现在可以通过Google Play将付费应用程序向130个国家进行发布。开发者可以利用Google Play发布免费及付费应用程序，并支持应用程序内购买和订阅，收入将汇至开发者在中国本地银行账户。</p>
  </li>
  <li>
    <p><a href="http://linux.cn/article-4249-1.html">安卓编年史(1)</a></p>

    <p>让我们跟着安卓从0.5版本到4.4的无尽迭代来看看它的发展历史。安卓已经以不止一种形式陪伴了我们六年以上。在这段时间内，我们已经看到了不同于任何已有开发周期的，绝对惊人的变化速度。当Google卷入智能手机的战场中时，它拿出了它的快速迭代，Web风格的更新周期，把它们应用到了开发这个操作系统之中，而结果就是突击式的持续改进。</p>
  </li>
</ol>

<h3 id="section-3">视频</h3>

<ol>
  <li>
    <p><a href="http://www.youku.com/playlist_show/id_23094862.html">Google Play 中国开发者中文入门视频</a></p>

    <p>Google Developers 最新发布的 3个 Google Play 中国开发者中文入门视频。教你怎么注册成为Google play开发者。</p>
  </li>
  <li>
    <p><a href="http://v.youku.com/v_show/id_XODMwMjg5Nzg4.html">Tutorial Enhancing Android UI with Custom Views</a></p>

    <p>Android自定义View视频教程，中文字幕，示例源码地址:http://pan.baidu.com/s/1pJp0CIn</p>
  </li>
  <li>
    <p><a href="http://www.youku.com/playlist_show/id_23078962.html">Droidcon London 2014的视频</a></p>

    <p>包含《What’s New in Android》、《Material design &amp; implementation》和《Deep Dive Into the Gradle》这个3个视频，都是来自官方工程师的干货。</p>
  </li>
  <li>
    <p><a href="http://www.infoq.com/cn/presentations/expose-mobile-application-performance">移动应用性能揭秘</a></p>

    <p>目前大部分移动应用都是需要与服务器进行交互的，哪么影响这些应用程序性能的主要因素有哪些？如网络请求、IO操作、多线程等都会对性能产生影响，本议题将分享基调网络在移动应用性能监控中遇到的与移动应用性能提升相关的代码问题，希望能够为程序员开发高性能的应用提供帮助。</p>
  </li>
</ol>

<h3 id="section-4">工具</h3>

<ol>
  <li>
    <p><a href="https://developer.magnet.com">rest2mobile</a></p>

    <p>一个可以将REST services生成Objective-C、Javascript和Java代码的开源工具，并且提供了支持Xcode、Android Studio &amp; IntelliJ IDEA的生成代码的插件以及可以生成iOS，JS和Android跨平台代码的命令行工具。</p>

    <p><img src="http://ww2.sinaimg.cn/bmiddle/8a41f469jw1emk7cqynx7j21cw1660xx.jpg" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://chrome.google.com/webstore/detail/octotree/bkhaagjahfmjljalopjnoealnfndnagc">树形展示 Github 项目代码的Chrome插件</a> （@程序员的那些事）</p>

    <p>国外程序员 Buu Nguyen 做的一个 Chrome 插件，安装之后，浏览托管在Github上的项目，可看到左侧的树形结构，更方便查看代码（有点 IDE 的感觉，用着好来点个赞吧）。</p>

    <p><img src="http://ww4.sinaimg.cn/bmiddle/7cc829d3jw1egep4g1ljcj20h10ae3zy.jpg" alt="image" /></p>
  </li>
  <li>
    <p><a href="http://jgilfelt.github.io/AndroidAssetStudio/icons-launcher.html#foreground.space.trim=1&amp;foreground.space.pad=0&amp;foreColor=E8EAF6%2C0&amp;crop=0&amp;backgroundShape=square&amp;backColor=3F51B5%2C100&amp;effects=none&amp;elevate=0">Android Launcher图标在线生成工具</a></p>

    <p>一个帮助你快速生成Android Launcher图标的在线生成工具，此工具是由Google 的 <a href="https://github.com/romannurik"><code>Roman Nurik</code></a>大神开发的 <a href="https://github.com/romannurik/AndroidAssetStudio"><code>AndroidAssetStudio</code></a> 系列Android资源自动生成工具（包含：）中的其中一个，支持从指定图片、文字和内置的icon生成Android Launcher图标，并且可以设置图标的前景和背景色，缩放类型、图标形状等。</p>

    <p><img src="http://ww4.sinaimg.cn/bmiddle/005GSHYzjw1emit4rrvf7j318g158tds.jpg" alt="image" /></p>
  </li>
  <li>
    <p><a href="http://astralapp.com">Astral</a>（@WillYan）</p>

    <p>可以把你Github上加星的项目进行标签管理，用Github账号授权登陆即可，强迫症患者的福音啊😄。</p>

    <p><img src="http://ww2.sinaimg.cn/bmiddle/5fb87788tw1emils89ritj20x50g6tb2.jpg" alt="image" /></p>
  </li>
  <li>
    <p><a href="http://tools.android.com/download/studio/canary/1-0rc1">Android Studio 1.0 Release Candidate 1</a>	
 这次发布的是Android Studio 1.0候选版，那么距离发布Android Studio 1.0 正式版已经不远喽😄。此次更新主要修复了一些Bug，更换了新的图标和启动界面以及包含了Android Gradle插件所需要的所有依赖，当你新建一个项目的时候就不需要联网了。
 墙内下载地址：<a href="http://www.androiddevtools.cn/#android-studio">http://www.androiddevtools.cn/#android-studio</a></p>
  </li>
  <li>
    <p><a href="https://tinyjpg.com">TinyJPG</a></p>

    <p>一个支持jpg和png格式的图片压缩工具，只压图片的大小而图片的质量不会损失。</p>

    <p><img src="http://ww1.sinaimg.cn/bmiddle/8a41f469jw1emhtewxnysj21kw0imagj.jpg" alt="image" /></p>
  </li>
  <li>
    <p><a href="http://www.appiconsizes.com">IOS and Android App Icon size generator</a></p>

    <p>一键生成iPhone, Android, IOS, Facebook, web touch icons, Blackberry, Windows Phone, Bada and WebOS 等系统App图标的在线工具.</p>
  </li>
  <li>
    <p><a href="http://google.github.io/fplutil/">fplutil</a></p>

    <p>一套可以用于开发Android和其他跨平台应用的库和工具。</p>
  </li>
</ol>

<hr />
<p>版权声明：欢迎自由转载-非商用-非衍生-保持署名 | <a href="http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh">Creative Commons BY-NC-ND 3.0</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android开发周报 Issue#7]]></title>
    <link href="http://www.inferjay.com/blog/2014/11/17/android-dev-weekly-issue-7/"/>
    <updated>2014-11-17T16:31:09+08:00</updated>
    <id>http://www.inferjay.com/blog/2014/11/17/android-dev-weekly-issue-7</id>
    <content type="html"><![CDATA[<h3 id="section">新闻</h3>

<ol>
  <li>
    <p><a href="http://www.csdn.net/article/2014-11-14/2822647-12-great-lollipop-apis/1">盘点最受开发者喜爱的Android 5.0 Lollipop API</a></p>

    <p>作为Android系统的一次重大升级，Android 5.0 Lollipop突出采用全新的Material Design设计语言，不但在视觉和操作上更胜一筹，还包含扩展UI工具包供开发者使用，为应用添加3D实时阴影，可缩放矢量“drawbles”以及流畅的动画效果。本文着重介绍了其中值得开发者深爱的12款API，赶紧一睹为快吧！</p>
  </li>
  <li>
    <p><a href="http://news.cnblogs.com/n/508431/">.NET开源了，VS开始支持Android和iOS编程并自带Android模拟器</a></p>

    <p>北京时间今天凌晨的 Connect (); 大会上，多少程序员的假想成为现实。.NET 开源，集成 Clang 和 LLVM 并且自带 Android 模拟器，这意味着 Visual Studio 这个当下最好没有之一的 IDE 正式支持编写 Android 和 iOS 程序。</p>
  </li>
  <li>
    <p><a href="http://digi.it.sohu.com/20141113/n405991228.shtml">Android 5.0正式开启：Nexus系列最早更新</a>	
 从谷歌给出的公告来看，今天就将会有用户收到Android 5.0的更新提示，而首批设备包含了Nexus 4、Nexus 5、Nexus 7以及Nexus 10。值得一提的是，今天早些时候，摩托罗拉也开始向Moto G的用户提供5.0系统的升级，随后到来的是Moto X，很快LG的G3也将得到系统的升级。</p>
  </li>
</ol>

<h3 id="section-1">文章</h3>

<ol>
  <li>
    <p><a href="http://blog.csdn.net/xiaanming/article/details/41084843#0-tsina-1-26268-397232819ff9a47a7b7e80a40613cfe1">Android 那些你所不知道的Bitmap对象详解</a></p>

    <p>我们知道Android系统分配给每个应用程序的内存是有限的，Bitmap作为消耗内存大户，我们对Bitmap的管理稍有不当就可能引发OutOfMemoryError，而Bitmap对象在不同的Android版本中存在一些差异，今天就给大家介绍下这些差异，并提供一些在使用Bitmap的需要注意的地方。</p>
  </li>
  <li>
    <p><a href="http://greenrobot.me/category/devpost/">如何给你的Android 安装文件（APK）瘦身</a></p>

    <p>Android的apk文件越来越大了这已经是一个不争的事实。在Android 还是最初版本的时候，一个app的apk文件大小也还只有2 MB左右，到了现在，一个app的apk文件大小已经升级到10MB到20MB这个范围了。apk文件大小的爆炸式增长主要是因为用户对app质量的期待越来越高以及开发者的开发经验增长。</p>
  </li>
  <li>
    <p><a href="http://blog.isming.me/tags/material-design/">创建Material Design风格的Android应用系列文章</a></p>

    <p>随着Android 5.0的发布，Android Developer网站也更新了，增加了创建Material Design风格的Android应用指南,也更新了Support Library，在support library增加了一些Material Design风格的控件和动画等，这里给大家简单介绍一下怎样开发aterial Design风格的Android应用。</p>
  </li>
</ol>

<!--more-->

<ol>
  <li>
    <p><a href="http://www.importnew.com/13107.html">从Java代码到字节码（1）</a></p>

    <p>理解Java代码是如何被编译为字节码并在Java虚拟机（JVM）上执行是非常重要的，这将帮助理解你的程序是如何执行的。这样的理解不仅仅能够让你在逻辑上更好的掌握语言特性，而且能够有机会理解在做出重要决定时所需的权衡以及相应的副作用。</p>
  </li>
  <li>
    <p><a href="http://www.pedant.cn/2014/07/04/webview-js-java-interface-research/">在WebView中如何让JS与Java安全地互相调用</a></p>

    <p>在现在安卓应用原生开发中，为了追求开发的效率以及移植的便利性，使用WebView作为业务内容展示与交互的主要载体是个不错的折中方案。那么在这种Hybrid(混合式) App中，难免就会遇到页面JS需要与Java相互调用，调用Java方法去做那部分网页JS不能完成的功能。</p>
  </li>
  <li>
    <p><a href="http://droidyue.com/blog/2014/11/08/understanding-garbage-collection-output-messages-in-android/">译文：理解Android中垃圾回收日志信息</a></p>

    <p>如果你是一名Android开发者并且常常看程序日志的话，你会经常在logcat的调试日志窗口看到像 <code>GC_CONCURRENT freed 178K, 41% free 3673K/6151K, external 0K/0K, paused 2ms+2ms</code> 这样的日志信息，这就是Android系统垃圾回收的部分输出信息，本文将具体介绍这些日志信息的每一部分的含义来帮助帮助大家更好地了解垃圾回收的运行情况。</p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/t12x3456/article/details/40837287">Android 使用android-support-multidex解决Dex超出方法数的限制问题,让你的应用不再爆棚</a></p>

    <p>随着应用不断迭代，业务线的扩展,应用越来越大(比如集成了各种第三方sdk或者公共支持的jar包,项目耦合性高，重复作用的类越来越多)，相信很多人都遇到过如下的错误: <code>java.lang.IllegalArgumentException: method ID not in [0, 0xffff]: 65536 </code> 没错，你的应用中的Dex 文件方法数超过了最大值65536的上限,简单来说，应用爆棚了.</p>
  </li>
</ol>

<h3 id="section-2">代码&amp;开源库</h3>

<ol>
  <li>
    <p><a href="https://github.com/lightSky/MaterialDesignCenter">MaterialDesignCenter</a></p>

    <p>收集整理了Android Material Design相关的设计资源、视频教程、译文教程和开源库等。</p>
  </li>
  <li>
    <p><a href="https://github.com/BlueMor/Android-PullLayout">Android-PullLayout</a></p>

    <p>仿UC天气下拉和微信下拉眼睛</p>

    <p><img src="https://raw.githubusercontent.com/BlueMor/Android-PullLayout/master/screenshoot/123.gif" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/pedant/safe-java-js-webview-bridge">safe-java-js-webview-bridge</a></p>

    <p>抛弃使用高风险的WebView addJavascriptInterface方法，利用onJsPrompt解析纯JSON字符串，来实现网页JS层反射调用Java方法，同时通过对js层调用函数及回调函数的包装，支持方法参数传入所有已知的类型，包括number、string、boolean、object、function。</p>
  </li>
  <li>
    <p><a href="https://github.com/lzyzsd/CircleProgress">CircleProgress</a></p>

    <p>各种样式的自定义圆形进度条。</p>

    <p><img src="https://raw.githubusercontent.com/lzyzsd/CircleProgress/master/demos/circle_progress.gif" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/kyleduo/SwitchButton">SwitchButton</a></p>

    <p>同时支持Material Design和iOS7风格的SwitchButton。</p>

    <p><img src="https://raw.githubusercontent.com/kyleduo/SwitchButton/master/preview/easy_to_style.png" alt="image" /></p>
  </li>
</ol>

<h3 id="section-3">视频</h3>

<ol>
  <li>
    <p><a href="http://www.jikexueyuan.com/course/364.html?hmsr=sina_weibo_VisualStudio">使用Visual Studio 2015开发Android应用</a></p>

    <p>2014年的微软Connect();在线开发者大会在11月12日和11月13日举行。在大会上，微软公布了很多新的特性和功能。其中最吸引人的是.Net开源和Android模拟器。显示了微软更开放的战略思想。并突出了微软CEO移动优先和云优先的理念。</p>
  </li>
</ol>

<h3 id="section-4">工具</h3>

<ol>
  <li>
    <p><a href="https://github.com/akonior/icon-version">icon-version</a></p>

    <p>可以给Android的App图标添加版本号和变种名字的Android gradle插件。</p>

    <p><img src="https://github.com/akonior/icon-version/raw/master/doc/icon-version-screenshot.png" alt="image" /></p>
  </li>
</ol>

<h3 id="section-5">书</h3>

<ol>
  <li>
    <p><a href="http://snowdream86.gitbooks.io/github-cheat-sheet/content/zh/index.html">GitHub秘籍</a></p>

    <p>本秘籍收录了一些Git和Github非常酷同时又少有人知的功能。灵感来自于Zach Holman在2012年Aloha Ruby Conference和2013年WDCNZ上所做的演讲：Git and GitHub Secrets(slides)和More Git and GitHub Secrets(slides)。</p>
  </li>
</ol>

<h3 id="section-6">设计</h3>

<h4 id="section-7">文章</h4>

<ol>
  <li>
    <p><a href="http://mux.baidu.com/?p=3367">切图小贴士</a></p>

    <p>用户手中看到的产品界面，并非设计师呕心沥血创作的效果图，而是一个个单独的切图经由开发同学技术实现。切图作为设计师与开发者之间的桥梁，它的作用很关键，合适的切图、精准的位置可以最大限度的还原效果图的设计，精妙的切图更会有事半功倍的效果哦！	</p>
  </li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android开发周报 Issue#6]]></title>
    <link href="http://www.inferjay.com/blog/2014/11/10/android-dev-weekly-issue-6/"/>
    <updated>2014-11-10T16:45:18+08:00</updated>
    <id>http://www.inferjay.com/blog/2014/11/10/android-dev-weekly-issue-6</id>
    <content type="html"><![CDATA[<h3 id="section">新闻</h3>

<ol>
  <li>
    <p><a href="http://linux.cn/article-4172-1.html">Android 5.0 Lollipop源代码发布</a></p>

    <p>Google将最新的Android 5.0 Lollipop系统源代码上传在公开的<a href="http://source.android.com/source/index.html">Android Open Source Project(AOSP) 库</a>。</p>
  </li>
  <li>
    <p><a href="http://linux.cn/article-4168-1.html">Android 5.0 Lollipop 安全特性详解</a></p>

    <p>Android 5.0 Lollipop 正式版发布在即，根据 Google 的说法，Android 5.0 是 Android 历史上最为重大的版本变更，带来了全新的设计风格，全新的软件运行环境，更好的续航能力以及大量的细节改进。可能关于 Material Design、ART 模式等等新特性你已经有所了解，但是我们今天要聊的是 5.0 的另一个重大变革，关于安全性的改进。</p>
  </li>
  <li>
    <p><a href="http://www.pingwest.com/copresence-is-airdrop-between-android-ios/">Copresence: Google 正为 iOS 和 Android 之间数据通讯架设的桥梁</a></p>

    <p>Google 最近被人发现正在开发的名为「Copresence」的功能，未来很有可能成为跨移动操作系统数据传输的最好解决方案。Copresence 的功能将允许 Android 和 iOS 操作系统设备之间互相传输文件、照片、发送导航定位、文字信息等多种类型的数据——并非通过互联网，而是更加本地化的点对点连接方式。</p>
  </li>
</ol>

<h3 id="section-1">文章</h3>

<ol>
  <li>
    <p><a href="https://github.com/AWCNTT/ArticleTranslateProject/blob/master/translated/Issue%23105/2014-11-06-Creating-a-Cards-UI-on-Android.md">在Android上创建卡片式UI</a></p>

    <p>自从卡片式UI第一次在Google+ app上亮相，这种设计模式在Android社区上开始变得越来越火。很多人都热衷于这种设计模式并在他们的开发中使用。这不只归功于其时尚的外观，还有它实用之处。每张卡片拥有其相关的内容及其内容所触发的动作。换句话来说，每张卡片有它唯一的内容管理机制。</p>
  </li>
  <li>
    <p><a href="http://www.codeceo.com/article/android-adb-shell.html">34个Android常用adb shell命令汇总</a></p>

    <p>调试Android程序有时需要adb shell 命令，adb全称Android Debug Bridge ，就是起到调试桥的作用。通过adb我们可以在Eclipse中通过DDMS来调试Android程序，说白了就是debug工具。adb通过监听Socket TCP 5554等端口让IDE和Qemu通讯。</p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/isming/article/details/26985317"> 使用Gradle构建Android项目</a></p>

    <p>Gradle是以Groovy为基础，面向java应用，基于DSL语法的自动化构建工具。是google引入，替换ant和maven的新工具，其依赖兼容maven和ivy。使用gradle的目的:更容易重用资源和代码；可以更容易创建不同的版本的程序，多个类型的apk包；更容易配置，扩展;更好的IDE集成;</p>
  </li>
  <li>
    <p><a href="http://toughcoder.net/blog/2014/10/26/best-practices-to-support-multiple-screen/">适配多屏幕的最佳实践</a></p>

    <p>对于Android应用开发来讲，比较头疼的，也是比较重要的一个工作就是要尽可能多的支持市场上的Android设备，由于Android的开放性，各种奇奇怪怪的设备都有，符合标准的，不符合标准的，行货，水货，山寨货鱼龙混杂，防不胜防。</p>
  </li>
  <li>
    <p><a href="http://toughcoder.net/blog/2014/10/25/tricks-to-remove-duplicates/">如何有效的减少重复的代码</a></p>

    <p>重复的代码一直都是可维护性的大敌，重构的重要任务之一也就是要去除掉重复的代码，有效的减少重复代码，可以大大提高软件的扩展性。</p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/isming/article/details/39404407">在android中画圆形图片的几种办法</a>	
 在开发中经常会有一些需求,比如显示头像，显示一些特殊的需求,将图片显示成圆角或者圆形或者其他的一些形状。但是往往我们手上的图片或者从服务器获取到的图片都是方形的。这时候就需要我们自己进行处理，将图片处理成所需要的形状。</p>
  </li>
</ol>

<!--more-->

<h3 id="section-2">代码&amp;开源库</h3>

<ol>
  <li>
    <p><a href="https://github.com/ajaysahani/MultiActionTextView">MultiActionTextView</a></p>

    <p>MultiActionTextView 一个textview的开源库，可以分别给TextView中的某几个字设置点击事件。</p>
  </li>
  <li>
    <p><a href="https://github.com/cymcsg/UltimateAndroid">UltimateAndroid</a></p>

    <p>快速开发Android应用的框架，框架目前主要包含的功能有View Injection,ORM,异步网络请求和图片加载，自动化脚本测试,磁盘LRU等功能.同时提供了类似于TripleDes、Webview快速设置、Md5处理、String处理,Https处理等常用工具类，还有超过100多种UI控件效果。</p>
  </li>
  <li>
    <p><a href="https://github.com/MustafaFerhan/DebugLog">DebugLog</a></p>

    <p>DebugLog可以帮你创建更简单和更容易理解的调试日志，能够友好的显示调试信息所在类和函数。</p>
  </li>
  <li>
    <p><a href="https://github.com/rengwuxian/MaterialEditText">MaterialEditText</a></p>

    <p>Material Design风格的EditText。虽然AppCompat v21中也提供了 Material Design 的控件外观支持，其中包括 EditText 。但 AppCompat 中的 EditText 实在有点难用，因为它是通过 colorAccent 来自动为控件着色的，并没有提供设置颜色的api，因此需要通过为控件定制theme的方式来实现自定义控件颜色。 另外，除了外观上的变化， AppCompat 没有提供任何 Google Material Design Spec 中提到的特性。  </p>
  </li>
</ol>

<h3 id="section-3">视频</h3>

<ol>
  <li>
    <p><a href="http://v.youku.com/v_show/id_XODE5NDI1MTI4.html">GoogleFit APIs for Android</a></p>

    <p>来自Google美女工程师的DevBytes系列《GoogleFit APIs for Android》视频共两集,现已搬至优酷，关注Google Fit的可以看内容，不感兴趣内容可以看美女，程序猿们我懂你们的！！！</p>
  </li>
</ol>

<h3 id="section-4">工具</h3>

<ol>
  <li>
    <p><a href="https://github.com/intrications/material-design-icons-adt-template">material-design-icons-adt-template</a></p>

    <p>Android Studio / Eclipse ADT template for including icon resources from <a href="https://github.com/google/material-design-icons">https://github.com/google/material-design-icons</a> in your project.</p>
  </li>
  <li>
    <p><a href="http://tools.android.com/download/studio/canary">Android Studio 0.9.2 Released</a></p>

    <p>Android Studio 0.9.1 released to the canary channel! </p>
  </li>
</ol>

<h3 id="section-5">书</h3>

<ol>
  <li>
    <p><a href="http://it-ebooks.info/book/646/">Pro Android Apps Performance Optimization</a></p>

    <p>Today’s Android apps developers are often running into the need to refine, improve and optimize their apps performances. As more complex apps can be created, it is even more important for developers to deal with this critical issue. </p>
  </li>
</ol>

<h3 id="section-6">设计</h3>

<h4 id="section-7">文章</h4>

<ol>
  <li>
    <p><a href="http://www.ui.cn/project.php?id=30796">熊氏切图法–一键导出App icon</a></p>

    <p>做App设计的小伙伴有没有遇到这种情况呢，同一个icon要输出N种尺寸，用传统的方法批处理调整图片大小比较繁琐，不方便同时整体预览，如果后续修改了设计，又要重复一次这个批处理的过程，有没有一键输出所有尺寸的方法呢？本熊这就给大家推荐一种强大的技巧：智能对象+生成图像资源，是的，本熊不要脸的将其命名为“熊氏切图法”.</p>
  </li>
  <li>
    <p><a href="http://www.ui.cn/project.php?id=30921">UE+UI设计流程之一二三</a></p>

    <p>在做移动端app的设计过程中，经常会碰到一些二次返工或者时间的浪费，在这里分享下自己在项目中的流程经验，供遇到问题的小伙伴们参考。</p>
  </li>
  <li>
    <p><a href="http://www.ui.cn/project.php?id=30538">从Material UI得到的设计感悟</a></p>

    <p>如果你读过Google的Material设计文档，你就会发现其对细节和深度的注重。在文档中你能学到很多东西。其中最为重要的一项，就是其证明了编写复杂视觉风格指南是完全可能的。尽管可能困难重重，但还是可能的。特别是对于Google复杂多样的产品组合来说。</p>
  </li>
  <li>
    <p><a href="http://www.ui.cn/project.php?id=30540">APP规范实例(详细的UI设计方法</a></p>

    <p>设计是无限的，可作为借鉴，这一套UI设计规范，包含了界面布局、颜色、文字规范、按钮规范、图标规范、图片规范、列表规范、控件规范、弹出浮层，超级详细。大家可以借鉴下，学会自己设计一套APP设计规范，成为高级设计师。但是不要生搬硬套，毕竟不是一个产品，总之可参考的价值很高。</p>
  </li>
</ol>

<h4 id="section-8">工具&amp;资源</h4>

<ol>
  <li>
    <p><a href="https://github.com/romashamin/Size-Marks-PS">Size-Marks-PS</a></p>

    <p>Photoshop Javascript插件，可以以新建图层的方式直接在PS中标注尺寸。</p>

    <p><img src="http://ww1.sinaimg.cn/mw1024/4b4d632fgw1elyr9qvsipg20kf08jdjf.gif" alt="image" /></p>
  </li>
  <li>
    <p><a href="http://www.uisdc.com/21-photoshop-plugins-for-designer">高效神器！21款强大实用的PHOTOSHOP扩展插件</a></p>

    <p>21款扩展插件，特别适合网页设计师。这些神器可以让平时复杂繁琐的操作变得更加简单.</p>
  </li>
</ol>

<hr />
<p>版权声明：欢迎自由转载-非商用-非衍生-保持署名 | <a href="http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh">Creative Commons BY-NC-ND 3.0</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android开发周报 Issue#5]]></title>
    <link href="http://www.inferjay.com/blog/2014/11/05/android_dev_weekly_issue_5/"/>
    <updated>2014-11-05T17:45:47+08:00</updated>
    <id>http://www.inferjay.com/blog/2014/11/05/android_dev_weekly_issue_5</id>
    <content type="html"><![CDATA[<h3 id="section">文章</h3>

<ol>
  <li>
    <p><a href="http://blog.csdn.net/xushuaic/article/details/40627389">进入Material Design时代</a></p>

    <p>Material Design是Android 5.0系统的重头戏，并在以后App中将成为一种设计标准，而且随着已支持Android 5.0 Lollipop的Nexus 6的开售，Google希望开发者更快的支持Material Design，连续发了3篇文章，来帮助开发者如何在自己的App 中实现Material Design。并表示：expect Winter 2014 to be a big quarter for design on Android.</p>
  </li>
  <li>
    <p><a href="http://www.liaohuqiu.net/cn/posts/how-does-android-caculate-the-size-of-child-view/">Android中View大小的确定过程</a></p>

    <p>子View有一个期望的尺寸大小，父容器有尺寸大小约束，这两方面的约束协调，用来计算View的大小状态。根据父容器的尺寸状态，以及子View的LayoutParams，可以确定子View的大小和状态：MeasureSpec，并要求子View确定自身大小。调用子View的measure()方法，子View的onMeasure()方法也会被执行。子View在onMeasure()方法中，根据父容器给出的尺寸大小和约束，根据自身情况，确定最终的大小。父容器根据子View的确定的大小，最终确定自身大小。</p>
  </li>
  <li>
    <p><a href="http://www.ticmy.com/?p=329">ScheduledThreadPoolExecutor实现原理</a></p>

    <p>自jdk1.5开始，Java开始提供ScheduledThreadPoolExecutor类来支持周期性任务的调度，在这之前，这些工作需要依靠Timer/TimerTask或者其它第三方工具来完成。但Timer有着不少缺陷，如Timer是单线程模式，调度多个周期性任务时，如果某个任务耗时较久就会影响其它任务的调度；如果某个任务出现异常而没有被catch则可能导致唯一的线程死掉而所有任务都不会再被调度。ScheduledThreadPoolExecutor解决了很多Timer存在的缺陷。</p>
  </li>
  <li>
    <p><a href="http://mogu.io/android-im-design">Android-IM架构设计</a></p>

    <p>文章介绍了蘑菇街开源的IM项目Android客户端的整体架构和消息流程。</p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/vipzjyno1/article/details/23542617">Android 命名规范（提高代码可以读性）</a>	
 刚接触android的时候，命名都是按照拼音来，所以有的时候想看懂命名的那个控件什么是什么用的，就要读一遍甚至好几遍才知道，这样的话，在代码的审查和修改过程中就会浪费不少不必要的时间。如果就是我一个人开发，一个人维护的话还好，可是如果一个项目是团队分工合作，这样让你的同事去看你的代码就更加吃力了，因为大家之间的编程方式不一样，所以，在开发过程中，命名规范统一尤为重要，最好是团队中统一好大家命名方法，这样对于日后的工作会轻松很多。</p>
  </li>
</ol>

<!--more-->

<h3 id="section-1">代码&amp;开源库</h3>

<ol>
  <li>
    <p><a href="https://github.com/liaohuqiu/android-GridViewWithHeaderAndFooter">android-GridViewWithHeaderAndFooter</a></p>

    <p>在HeaderGridView的基础上做了更改，可以addHeaderView()和addFooterView()的GridView来了。用法和ListView一样.</p>
  </li>
  <li>
    <p><a href="https://github.com/torryharris/Skycons">Skycons</a></p>

    <p>一组自定义的天气图标View库。</p>
  </li>
  <li>
    <p><a href="https://github.com/PhilJay/ValueBar">ValueBar</a></p>

    <p>一个漂亮的自定义View。工作原理类似于Seeker。支持API level 11+.</p>
  </li>
  <li>
    <p><a href="https://github.com/percolate/caffeine">caffeine</a></p>

    <p>一个可以加速Android开发的工具库。</p>
  </li>
  <li>
    <p><a href="https://github.com/mogutt">TeamTalk</a></p>

    <p>蘑菇街开源的 IM 项目 TeamTalk，包括 Android、iOS、Win、Mac 客户端以及 Server端、管理后台、环境自动部署，大赞！支持文字、音频、图片、表情、文件传输、屏幕振动、分组等，做聊天的同学可以看看.</p>
  </li>
  <li>
    <p><a href="https://github.com/pedant/sweet-alert-dialog">sweet-alert-dialog</a></p>

    <p>Android版的SweetAlert，清新文艺，快意灵动的甜心弹框。</p>

    <p><img src="https://github.com/pedant/sweet-alert-dialog/raw/master/change_type.gif" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/MobiDevelop/android-split-pane-layout">android-split-pane-layout</a></p>

    <p>可以将2个子View之间的可用空间按照指定比例分割的自定义Layout。</p>
  </li>
</ol>

<h3 id="section-2">视频</h3>

<ol>
  <li>
    <p><a href="https://github.com/KevinChen9117/ikevin">Android DevBytes and Google IO视频</a></p>

    <p>Youtube上的Google IO、跟Android相关的DevBytes、Android Design In Action和跟Android相关的DesignBytes视频，全部是720P的mp4. 包含英文字幕。</p>
  </li>
</ol>

<h3 id="section-3">工具</h3>

<ol>
  <li>
    <p><a href="http://tools.android.com/download/studio/canary">Android Studio 0.9.0 Released</a></p>

    <p>Android Studio 0.9.0 released to the canary channel! 
 这次发布添加了新版本的Android Gradle plugin 0.14.0，此外，修复了一些bug等。</p>
  </li>
  <li>
    <p><a href="https://github.com/matheusjardimb/ios2android">ios2android</a></p>

    <p>一个可以将iOS格式的切图转换为Android格式切图的Python脚本工具。</p>
  </li>
</ol>

<h3 id="section-4">设计</h3>

<h4 id="section-5">工具&amp;资源</h4>

<ol>
  <li>
    <p><a href="http://www.uisdc.com/21-photoshop-plugins-for-designer">高效神器！21款强大实用的PHOTOSHOP扩展插件</a></p>

    <p>21款扩展插件，特别适合网页设计师。这些神器可以让平时复杂繁琐的操作变得更加简单.</p>
  </li>
</ol>

<hr />
<p>版权声明：欢迎自由转载-非商用-非衍生-保持署名 | <a href="http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh">Creative Commons BY-NC-ND 3.0</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android开发周报 Issue#4]]></title>
    <link href="http://www.inferjay.com/blog/2014/10/27/android-dev-weekly-issue-4/"/>
    <updated>2014-10-27T15:42:14+08:00</updated>
    <id>http://www.inferjay.com/blog/2014/10/27/android-dev-weekly-issue-4</id>
    <content type="html"><![CDATA[<h3 id="section">文章</h3>

<ol>
  <li>
    <p><a href="http://blog.csdn.net/innost/article/details/9008691">Android系统性能调优工具介绍</a></p>

    <p>在软件开发过程中，想必很多读者都遇到过系统性能问题。而解决系统性能问题的几个主要步骤是：</p>

    <ul>
      <li>测评：对系统进行大量有针对性的测试，以得到合适的测试数据。</li>
      <li>分析系统瓶颈：分析测试数据，找到其中的hotspot（热点，即bottleneck）。</li>
      <li>性能优化：对hotspot相关的代码进行优化。</li>
    </ul>
  </li>
  <li>
    <p><a href="https://github.com/jsenjoy/introrx-chinese-edition">The introduction to Reactive Programming you’ve been missing – 中文版</a>	</p>

    <p>什么是FRP?在互联网上有着一大堆糟糕的解释与定义。维基百科一如既往的空泛与理论化。Stackoverflow的权威答案明显不适合初学者。Reactive Manifesto看起来是你展示给你公司的项目经理或者老板们看的东西。微软的Rx terminology “Rx = Observables + LINQ + Schedulers” 过于重量级且微软味十足，只会让大部分人困惑</p>
  </li>
  <li>
    <p><a href="http://baoyz.com/android/2014/10/21/android-palette-use/">Android Lollipop 新特性 - Palette</a></p>

    <p>Palette 可以从一张图片中提取颜色，我们可以把提取的颜色融入到App UI中，可以使UI风格更加美观融洽。比如，我们可以从图片中提取颜色设置给ActionBar做背景颜色，这样ActionBar的颜色就会随着显示图片的变化而变化。</p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/t12x3456/article/details/39958755">Android 使用动态加载框架DL进行插件化开发</a></p>

    <p>随着应用的不断迭代，应用的体积不断增大,项目越来越臃肿,冗余增加.项目新功能的添加，无法确定与用户匹配性，发生严重异常往往牵一发而动全身,只能紧急发布补丁版本，强制用户进行更新.结果频繁的更新，反而容易降低用户使用黏性.或者是公司业务的不断发展,同系的应用越来越多,传统方式需要通过用户量最大的主项目进行引导下载并安装.</p>
  </li>
</ol>

<h3 id="section-1">代码&amp;开源库</h3>

<ol>
  <li>
    <p><a href="https://github.com/mihaip/dex-method-counts">dex-method-counts</a></p>

    <p>一个可以统计 <code>.dex</code> 文件中方法个数的命令行工具。</p>
  </li>
  <li>
    <p><a href="https://github.com/demitsuri/smali2java">smali2java</a></p>

    <p>可以将smali代码转换为java代码的工具。</p>

    <p><!--more--></p>
  </li>
  <li>
    <p><a href="https://github.com/navasmdc/MaterialDesignLibrary">MaterialDesignLibrary</a></p>

    <p>可以让你在2.2系统上使用Android L系统才支持的控件效果的库。具体兼容的控件请看项目的介绍。</p>
  </li>
  <li>
    <p><a href="https://github.com/vinaysshenoy/enhanced-volley">enhanced-volley</a></p>

    <p>enhanced-volley是在Volley的基础上进行了扩展，添加了 <code>自定义Http头</code> 、<code>自定义GET请求的URL参数</code> 、<code>给ImageLoader添加了默认的BitmapLruCache实现</code> 、<code>添加了新的可以执行任意你想要的动画的AnimateImageView控件</code> 以及支持 <code>application/octet-stream MIME 类型的文件上传</code> 等功能。</p>
  </li>
</ol>

<h3 id="section-2">小技巧</h3>

<ol>
  <li>
    <p>Android Studio / Intellij Tip of the Day：显示最近更改的文件(@<a href="https://www.google.com/+PhilippeBreault">Philippe Breault</a>)</p>

    <p>快捷键（菜单）： 
 - Mac：Cmd的+ Shift键+ E 
 - Windows / Linux：CTRL + SHIFT + E </p>
  </li>
</ol>

<h3 id="section-3">工具</h3>

<ol>
  <li>
    <p><a href="https://github.com/castorflex/manifestreplace-plugin">manifestreplace-plugin</a></p>

    <p>Gradle plugin to add more placeholders to your manifest.xml.</p>
  </li>
</ol>

<h3 id="section-4">设计</h3>

<h4 id="section-5">文章</h4>

<ol>
  <li>
    <p><a href="http://www.ui.cn/project.php?id=28848">IOS机Android切图标注与命名规范</a></p>

    <p>在项目迭代的过程中，会碰到很多切图替换的问题，怎么去命名？给几个分辨率合适？怎么去标注等。本文把我在版本迭代工作中的一些经验分享给大家，希望能对大家有所作用。</p>
  </li>
  <li>
    <p><a href="http://cdc.tencent.com/?p=8239">图标设计初阶要先型</a></p>

    <p>UI最重要组建之一就是图标，随着扁平化设计的发展趋势，越来越注重图标的简洁与寓意表达，平面图标已占主导地位。每位设计师所处的阶段所关注的要点是不一样的，我把图标设计分为2个阶段–初阶与高阶，这样分是为了有步骤性的学习和进阶的加强，当然，能人的话一步到位，对于新人来讲会较难，需要实际工作中辅导与自己经验总结。</p>
  </li>
</ol>

<h4 id="section-6">工具&amp;资源</h4>

<ol>
  <li>
    <p><a href="https://www.behance.net/gallery/20514895/Material-Design-UI-Kit">Material Design UI Kit for Sketch</a></p>

    <p>A UI Kit for Google’s Material design. Essential if you’re designing for Android.</p>
  </li>
  <li>
    <p><a href="http://icons8.com/app/">Icons8 App</a>	</p>

    <ul>
      <li>Quick search through the icons</li>
      <li>Compatible with Photoshop, Xcode and more</li>
      <li>5000 icons for iOS 7, Windows 8 and Android</li>
    </ul>
  </li>
</ol>

<hr />
<p>版权声明：欢迎自由转载-非商用-非衍生-保持署名 | <a href="http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh">Creative Commons BY-NC-ND 3.0</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android开发周报 Issue#3]]></title>
    <link href="http://www.inferjay.com/blog/2014/10/21/android-dev-weekly-issue-3/"/>
    <updated>2014-10-21T09:26:08+08:00</updated>
    <id>http://www.inferjay.com/blog/2014/10/21/android-dev-weekly-issue-3</id>
    <content type="html"><![CDATA[<h3 id="section">文章</h3>

<ol>
  <li>
    <p><a href="http://www.csdn.net/article/2014-10-05/2821953-instagram-improved-their-apps-performance">Instagram工程师教你如何改善App的性能</a></p>

    <p>扁平化设计由于其简洁的外表，更少的按钮和选项使得界面干净整齐，从而减少认知障碍的产生。扁平化设计更是功能上的简化于与重组，相比于拟物化而言，扁平风格的一个优势就在于它可以更加简单直接的将信息和事物的工作方式展示出来。本文来自Instagram一名工程师的分享。</p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/xushuaic/article/details/40212327">AppCompat V21：将 Materia Design 兼容到5.0之前的设备</a></p>

    <p>本篇文章翻译自Chris Banes(就职于Google，工作内容 Android Developer Relations team)，android 5.0今天发布。在很多很棒的更新中，包括了新的UI组件和创建 Material Design 主题的能力。为了使你能够将新的设计中更新到旧的系统中，我们同时更新了包含 AppCompat 的support libraries。在这篇文章中，我将总体说明一下appCompat的新特性并介绍一下如何应用于你的app中。</p>
  </li>
  <li>
    <p><a href="http://www.codeceo.com/article/android-activity-start.html">Android中Activity启动过程探究</a></p>

    <p>文章从源码一步步分析了Android中Activity的启动过程，步骤很详细。</p>
  </li>
  <li>
    <p><a href="http://www.yangzhiping.com/tech/github.html">如何高效利用GitHub</a></p>

    <p>正是Github，让社会化编程成为现实。本文尝试谈谈GitHub的文化、技巧与影响。</p>
  </li>
  <li>
    <p><a href="http://slides.ngot.me/emoji/index.html#0">跨终端Emoji</a></p>

    <p>由孢子社区 - 庄恒飞分享了饱子社区在跨终端Emoji表情上的一些实践经验。	</p>
  </li>
</ol>

<!--more-->

<ol>
  <li>
    <p><a href="http://blog.csdn.net/qijianke2014/article/details/40041331">优化Android App性能？十大技巧必知！</a></p>

    <p>无论锤子还是茄子手机的不断冒出，Android系统的手机市场占有率目前来说还是最大的，因此基于Android开发的App数量也是很庞大的。那么，如何能开发出更高性能的Android App？相信是软件开发公司以及广大程序员们头疼的一大难题。</p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/minimicall/article/details/39484493">Android开发之多级下拉列表菜单实现（仿美团，淘宝等）</a></p>

    <p>我们在常用的电商或者旅游APP中，例如美团，手机淘宝等等，都能够看的到有那种下拉式的二级列表菜单，我相信很多人都想开发一个跟它一样的功能放到自己的APP中。作者首先分析了该效果的组成结构，然后通过LinearLayout＋ToggleButton＋PopupWindow实现了类似的效果。</p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/lmj623565791/article/details/39670935">Android 实现形态各异的双向侧滑菜单</a></p>

    <p>关于自定义控件侧滑已经写了两篇了，今天决定把之前的单向改成双向，当然了，单纯的改动之前的代码也没意思，今天不仅会把之前的单向改为双向，还会多添加一种侧滑效果，给大家带来若干种形态各异的双向侧滑菜单，不过请放心，代码会很简单，然后根据这若干种，只要你喜欢，相信你可以打造任何绚（bian）丽（tai）效果的双向侧滑菜单。</p>
  </li>
</ol>

<h3 id="section-1">代码&amp;开源库</h3>

<ol>
  <li>
    <p><a href="https://github.com/google/iosched"> Google I/O App</a></p>

    <p>源码已经更新到SDK5.0了，http://t.cn/RvouJFP， 对于最终的Android 5 SDK的更新，包括删除所有产品风格缺陷 使用appcompat和android.support.v7.widget.Toolbar带来更多的# material design兼容到Lollipop之前的设备 更新导航抽屉分层等</p>
  </li>
  <li>
    <p><a href="https://coding.net/u/yoojia/p/FireEye/git">FireEye</a></p>

    <p>Android校验库 - Fire Eye 简单易用的Android校验库。 这是一个简单Android校验库，按配置来验证用户输入的表单信息。 只需要几行代码，即可验证用户输入，并且将验证错误反馈给用户。 它内置了大量常用的验证类型，足以满足你的功能需求。 它还有一个可扩展的验证选项，你可以通过扩展接口添加你需要的验证方式。</p>
  </li>
  <li>
    <p><a href="https://github.com/twotoasters/multi-column-list-adapter">multi-column-list-adapter</a></p>

    <p>MultiColumnListAdapter是一个CursorAdapter的子类，它可以使你的ListView看起来像一个GridView，并且还可以给列表添加header和footer。</p>
  </li>
  <li>
    <p><a href="https://github.com/lecho/hellocharts-android">hellocharts-android</a></p>

    <p>一个兼容API 8+(Android 2.2)图表库，当硬件加速可用的时候工作状态最好，因此推荐在API 14+(Android 4.0)以上使用。</p>
  </li>
  <li>
    <p><a href="https://github.com/flavienlaurent/tickplusdrawable">tickplusdrawable</a></p>

    <p>通过canvas rotation + line translations实现的I/O 2014 app中对号和加号切换的效果。</p>
  </li>
</ol>

<h3 id="section-2">小技巧</h3>

<p>1.一行命令检查代码是否有addJavascriptInterface安全隐患(<a href="http://weibo.com/p/1005051869137113">@杨辉__</a>)</p>

<pre><code>grep -r -n -i --include=*.java addJavascriptInterface *  
</code></pre>

<h3 id="section-3">视频</h3>

<ol>
  <li>
    <p><a href="http://v.youku.com/v_show/id_XODA1ODAyNzc2.html"> From Holo to Material</a></p>

    <p>介绍了如何从现有的Holo风格升级到Material风格以及在升级的过程中需要注意的地方等待。</p>
  </li>
  <li>
    <p><a href="http://v.youku.com/v_show/id_XODA1ODY5NTYw.html"> What’s new in Android 5.0 Lollipop </a></p>

    <p>介绍了Android 5.0 Lollipop的新特性。</p>
  </li>
</ol>

<h3 id="section-4">新闻</h3>

<ol>
  <li>
    <p><a href="http://www.infoq.com/cn/news/2014/10/android-5.0-release">Android 5.0正式版发布，代号“棒棒糖”</a></p>

    <p>Android L是Google在今年6月份的Google I/O开发者大会上正式推出的最新Android系统。近日，Google发布了Android L的正式版即Android 5.0，该版本延续了此前甜品命名的传统，命名为Lollipop（棒棒糖）。Android的主管 Sundar Pichai在Google官方博客中写道，Lollipop是Android迄今为止最重大的版本更新，在用户视觉、用户体验、功能等方面都有重大的改进。Lollipop最明显的改变是采用了全新的设计语言，被称之为“Material Design”。
. </p>
  </li>
</ol>

<h3 id="section-5">设计</h3>

<h4 id="section-6">文章</h4>

<ol>
  <li>
    <p><a href="https://medium.com/@kennycheny/creating-your-first-prototype-with-framer-c39221da7668">Creating Your First Prototype with Framer</a></p>

    <p>一步步教你在Framer Studio中创建自己的第一个交互原型..</p>
  </li>
</ol>

<h4 id="section-7">工具&amp;资源</h4>

<ol>
  <li>
    <p><a href="https://github.com/google/material-design-icons">Material Design的图标</a></p>

    <p>伴随着Android 5.0 Lollipop（棒棒糖）的发布，Google也在Github开源了Material Design的图标, 包含多种尺寸。主要包含了：</p>

    <ul>
      <li>SVG versions of all icons in both 24px and 48px flavours</li>
      <li>SVG and CSS sprites of all icons</li>
      <li>1x, 2x icons targeted at the Web (PNG)</li>
      <li>1x, 2x, 3x icons targeted at iOS (PNG)</li>
      <li>Hi-dpi versions of all icons (hdpi, mdpi, xhdpi, xxhdpi, xxxhdpi) (PNG)</li>
    </ul>
  </li>
</ol>

<hr />
<p>版权声明：欢迎自由转载-非商用-非衍生-保持署名 | <a href="http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh">Creative Commons BY-NC-ND 3.0</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android开发周报 Issue#2]]></title>
    <link href="http://www.inferjay.com/blog/2014/10/12/android-dev-weekly-issue-2/"/>
    <updated>2014-10-12T09:52:49+08:00</updated>
    <id>http://www.inferjay.com/blog/2014/10/12/android-dev-weekly-issue-2</id>
    <content type="html"><![CDATA[<h3 id="section">文章</h3>

<ol>
  <li>
    <p><a href="http://blog.csdn.net/maosidiaoxian/article/category/2380095">Andriod Studio科普篇</a></p>

    <p>作者记录了自己在使用Android Studio时做的一些个性化设置，踩到的一些坑等等。</p>
  </li>
  <li>
    <p><a href="http://tech.meituan.com/mt-apk-packaging.html">美团Android自动化之旅—生成渠道包</a></p>

    <p>文章介绍了三种打渠道包的方式。目前，Android团队打包基本使用第三种方式，完成了打包的自动化，解放了工程师的生产力，善哉善哉。打包的问题解决了，但有时候还需要为不同的渠道定制不同的APK。	</p>
  </li>
  <li>
    <p><a href="http://tech.meituan.com/mt-apk-adaptation.html">美团Android自动化之旅—适配渠道包</a></p>

    <p>文章介绍了如何使用Android构建利器Gradle的flavor特性来定制渠道包。</p>
  </li>
  <li>
    <p><a href="http://tech.meituan.com/packet_forwarding.html">如何把Android手机变成一个WIFI下载热点? — 报文转发及DNS报文拦截</a>	</p>

    <p>随着wifi的普及，移动运营商的热点也越来越多了，如中国移动的CMCC、中国电信的ChinaNet、中国联通的ChinaUnicom等，一般来说，连上此类的热点，打开浏览器上网时都会自动跳转到一个验证页面，最近有个项目也有类似的需求，Android手机自建热点，别的手机wifi连接此热点，打开浏览器，输入任意内容，自动跳转到一个下载列表页面，点击相应的链接即可下载相应的文件。</p>
  </li>
  <li>
    <p><a href="http://stormzhang.github.io/posts.html#Activity">Android通过Wifi来调试你的应用</a></p>

    <p>在Android中调试我们经常要用一根USB数据线连接到手机和电脑，一方面麻烦不说，手机一直连着电脑充电时间长了对手机也是一种伤害，另一方面如果哪一天忘记带USB数据线就很悲催了。今天就来教大家一种通过wifi来连接手机调试的方法，瞬间高大上有木有？而且不需要root，以后你就可以隔空给你公司的测试妹子安装/卸载apk了。</p>
  </li>
  <li>
    <p><a href="http://stormzhang.github.io/posts.html#Activity">Activity生命周期详解系列</a></p>

    <p>文章第一部分结合官方的Activity生命周期流程图讲解了各个生命周期方法的执行顺序，第二部分结合一些特定的使用场景分析了Activity的生命周期，第三部分讲解了onSaveInstanceState和onRestoreInstanceState这两个方法的作用。</p>
  </li>
</ol>

<!--more-->

<h3 id="section-1">代码&amp;开源库</h3>

<ol>
  <li>
    <p><a href="https://github.com/kongnanlive/android-combination-avatar">android-combination-avatar</a></p>

    <p>网易工程师实现的模仿QQ讨论组头像叠加效果的控件</p>

    <p><img src="https://github.com/kongnanlive/android-combination-avatar/raw/master/screenshots/screenshot1.jpg" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/Polidea/RoboSpock">RoboSpock</a> </p>

    <p>RoboSpock是一个Android的测试框架，它可以让你非常快的在JVM上运行单元测试，而无需启动任何仿真器或进行任何部署。</p>
  </li>
  <li>
    <p><a href="https://github.com/gcacace/android-signaturepad">android-signaturepad</a></p>

    <p>一个可以平滑的绘制签名的自定义View。</p>

    <p><img src="https://github.com/gcacace/android-signaturepad/raw/master/header.png" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/sromku/android-simple-storage">android-simple-storage</a></p>

    <p>这个库可以让你使用简单的Api在内部或者外部磁盘空间上创建、读取、删除、附加、加密文件等等。</p>
  </li>
  <li>
    <p><a href="https://github.com/cundong/ZhihuPaper">ZhihuPaper</a></p>

    <p>一个「知乎日报」Android 客户端</p>

    <p><img src="https://raw.githubusercontent.com/cundong/ZhihuPaper/master/screenshot/one.png" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/cundong/SmartAppUpdates">Smart App Updates</a></p>

    <p>Android App 增量更新实例</p>
  </li>
  <li>
    <p><a href="https://github.com/chalup/cerberus">cerberus</a></p>

    <p>Android library for detecting and reporting long running SQLite queries.</p>
  </li>
  <li>
    <p><a href="https://github.com/ideaismobile/AKParallax-Android">AKParallax-Android</a></p>

    <p>一个可以为ScrollView或者ListView添加视差滚动效果的库。</p>
  </li>
  <li>
    <p><a href="https://github.com/johnkil/Android-Icon-Fonts">Android-Icon-Fonts</a></p>

    <p>Material和Holo风格的图标字体.</p>

    <p><img src="https://raw.githubusercontent.com/johnkil/Android-Icon-Fonts/master/Art/android-icon-fonts.png" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/castorflex/SmoothProgressBar">SmoothProgressBar</a></p>

    <p>平滑的进度条。</p>

    <p><img src="https://raw.githubusercontent.com/castorflex/SmoothProgressBar/master/screenshots/SPB_sample.gif" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/jgilfelt/SystemBarTint">SystemBarTint</a></p>

    <p>Apply background tinting to the Android system UI when using KitKat translucent modes。</p>

    <p><img src="https://camo.githubusercontent.com/fbbeaab2048f78e2d4974bb1559544c9f22eccae/68747470733a2f2f7261772e6769746875622e636f6d2f6a67696c66656c742f53797374656d42617254696e742f6d61737465722f73637265656e73686f742e706e67" alt="image" />	</p>
  </li>
  <li>
    <p><a href="https://github.com/chiragjain/Emoticons-Keyboard">Emoticons-Keyboard</a></p>

    <p>带表情情符号的自定义键盘。</p>

    <p><img src="https://raw.githubusercontent.com/chiragjain/Emoticons-Keyboard/master/s2.png" alt="image" />
 <img src="https://raw.githubusercontent.com/chiragjain/Emoticons-Keyboard/master/s3.png" alt="image" /></p>
  </li>
</ol>

<h3 id="section-2">工具</h3>

<ol>
  <li>
    <p><a href="http://www.androiddevtools.cn">Android Studio 0.8.12 Released</a></p>

    <p>主要更新：</p>

    <ul>
      <li>一个全新的AVD管理器，新的AVD管理器与IDE的集成更紧密了。例如，当你试图去运行一个App时，你可以快速直接地从运行对话框中创建Nexus5或7的Nexus AVD。在这个新的AVD列表里，你可以查看和编辑AVD（你可以看到每个AVD使用多少磁盘空间），你也可以启动AVD等。你还可以很容易在现有的这些默认基础硬件上创建新的AVD，而且，在不同的类别，如手机，平板电脑，耐磨，电视。一旦你选择了硬件，你可以配置特定的架构和Android版本。最后，你可以选择一个显示名称，默认方向，GPU/快照选项 - 或者更高级的设置，例如外部存储等大小。</li>
      <li>当创建新的项目，我们现在默认使用HTTPS而不是HTTP的Gradle wrapper。我们还增加了一个lint（和的quickfix）警告如何在现有项目中使用HTTP。</li>
      <li>如果你喜欢手动编辑配置XML文件（使用XML编辑器，而不是图形化的布局编辑器），你现在可以通过点击版面编辑或布局预览窗口上方工具栏中的选项图标，并选择“首选的XML编辑器“，一旦选择了，新创建的布局将在XML编辑器中打开，而不是在布局编辑器中打开。</li>
      <li>翻译编辑器现在可以在字符串编辑器中工作了。</li>
      <li>Android项目视图现在是默认选择。您可以通过右键点击上面的项目视图的下拉列表切换回普通的项目视图。</li>
      <li>现在，您可以在XML中使用的quickfix导入工具命名空间：<code>tools：</code> 前缀，然后IDE将提供插入相应的命名空间声明,同样，<code>Android：</code> 前缀它导入了Android的命名空间，而不是显示所有可用的命名空间，并要求你选择一个.</li>
      <li>一些Bug修复 </li>
    </ul>
  </li>
  <li>
    <p><a href="https://github.com/NetEase/Emmagee/releases">Emmagee</a>		
 Emmagee是网易推出的一个实用的、便利的Android App性能测试工具，Emmagee推出了2.0版本，作为一次重大的升级，2.0版本主要在UI以及用户体验上做了优化，同时提供国际化的支持(感谢国际用户的反馈)，希望本次更新给各位带来更优质的用户体验。</p>
  </li>
  <li>
    <p><a href="http://gt.tencent.com/index.html">GT</a></p>

    <p>GT（随身调）是APP的随身调测平台，它是直接运行在手机上的“集成调测环境”(IDTE, Integrated Debug&amp;Test Environment)。利用GT，仅凭一部手机，无需连接电脑，您即可对APP进行快速的性能测试(CPU、内存、流量、电量、帧率/流畅度等等)、开发日志的查看、Crash日志查看、网络数据包的抓取、APP内部参数的调试、真机代码耗时统计等等；更重要的是，您可以在任意真实场所、任何时候做如上的系列事情，这就是“APP的场测”。如果您觉得GT提供的功能还不够满足您的需要，您还可以利用GT提供的基础API自行开发有特殊功能的GT插件（目前，仅iOS版支持），帮助您解决更加复杂的APP调试、测试问题。 </p>
  </li>
</ol>

<h3 id="section-3">视频</h3>

<ol>
  <li>
    <p><a href="http://www.infoq.com/cn/presentations/android-client-architecture-evolution-and-impact-on-development-process#0-tsina-1-70270-397232819ff9a47a7b7e80a40613cfe1">微信Android客户端架构演进及其对开发流程的影响</a></p>

    <p>微信ANDROID客户端的架构演进史，可以说是一个典型ANDROID应用在从小到大的成长过程中的“踩坑”与“填坑”的历史。从1.0版本安装包的354KB，到今天5.3版本的24.1MB，从最开始两三个码农的突击作业，到今天的“集团军”开发力量，微信的体量在不断增大，开发同学遇到的“成长的烦恼”也越来越多： 为什么微信收消息又延迟了？</p>
  </li>
</ol>

<h3 id="section-4">书</h3>

<ol>
  <li>
    <p><a href="http://www.it-ebooks.info/book/2445/">50 Android Hacks</a></p>

    <p>这本书分12部分介绍了50个Android开发中的小技巧。</p>
  </li>
</ol>

<h3 id="section-5">新闻</h3>

<ol>
  <li>
    <p><a href="http://cn.engadget.com/2014/10/09/google-android-l-64-bit/">谷歌发布x86 64位Android L模拟器</a></p>

    <p>【Google Android L 模拟器已经准备好了，开发者可以开发 64 位应用】Google 公布了 x86 64-bit Android L developer preview 的模拟器映像档已经开放给开发者下载，让有意的开发者可以准备着手开发新世代的应用程序。</p>
  </li>
</ol>

<h3 id="section-6">设计</h3>

<h4 id="section-7">文章</h4>

<ol>
  <li>
    <p><a href="http://www.ui.cn/project.php?id=26650">图标设计之尺规作图全过程</a></p>

    <p>国外上年纪大品牌的Logo都是尺规作图做出来的，因为最开始电脑不发达的时候，制作标志都是手工做的，没有尺规制图，没法制作。后来这些品牌出名了，Logo成为了典范，尺规作图也成了一个logo规范与否的标准。</p>
  </li>
  <li>
    <p><a href="http://bjango.com/articles/actions/">Photoshop Actions &amp; Workflows</a></p>

    <p>文章介绍了自己在过去的几年里建立了一套自己每天都在使用的Photoshop Actions以及工作流程。</p>
  </li>
  <li>
    <p><a href="http://bjango.com/articles/appdesignworkflow/">My app design workflow</a></p>

    <p>作者完整的介绍了自己在做iOS，Android和Mac的应用程序设计的工作流程，从你第一次打开Photoshop开始，到应用程序发布。</p>
  </li>
  <li>
    <p><a href="https://medium.com/android-design/latest">Understanding Material Design</a></p>

    <p>作者分Material is the metaphor、Authentic Motion和Skeuomorphism vs Flat Design这个三个主题分析讲解了自己对Material Design的理解。</p>
  </li>
  <li>
    <p><a href="http://zhuanlan.zhihu.com/TingTalk/19865937">导航抽屉到底归属于哪个层级?</a></p>

    <p>当导航抽屉成为 Google 设计规范的一部分时, Google 明确告诉我们该这么做, 而且提供了可以让开发者直接调用的工具.难道说 Google 在一开始的时候犯了个错误? 也许第一眼看上去这样做是对的, 但是从规范上看来确实是有些问题的.</p>
  </li>
  <li>
    <p><a href="http://www.ui.cn/project.php?id=17636">2014交互设计工具革新之年</a></p>

    <p>在这一年里，我们见到了很多新颖的交互设计工具和原型设计工具。工具旨在提高我们的工作效率，改善我们的工作流程，诸多新兴的工具造就了相关的讨论团体和设计，且这些工具，大大缩短了设计成本，现在，高保真的原型设计更简便了。</p>
  </li>
  <li>
    <p><a href="http://www.zhihu.com/question/25812945/answer/31495421">如何看待 Google 让自家应用的 iOS 版与 Android 版统一使用 Material Design ？</a></p>

    <p>国内例如 腾讯QQ 等一些 App 的 Android版 完全照搬 iOS 版的 UI ，这个一直饱受很多同学的诟病，如今 Google 刚好反过来了，把自家 App 的 iOS 版刻意做的和 Android 版一致。</p>
  </li>
</ol>

<h4 id="section-8">工具</h4>

<ol>
  <li>
    <p><a href="http://www.astutegraphics.com/software/subscribe/">SubScribe</a></p>

    <p>一款增强绘图功能的AI插件，这个插件能轻易解决直线和圆、圆与圆的精准相切[外切内切]等问题。</p>
  </li>
</ol>

<hr />
<p>版权声明：欢迎自由转载-非商用-非衍生-保持署名 | <a href="http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh">Creative Commons BY-NC-ND 3.0</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android开发周报 Issue#1]]></title>
    <link href="http://www.inferjay.com/blog/2014/09/23/android-dev-weekly-issue-1/"/>
    <updated>2014-09-23T22:36:14+08:00</updated>
    <id>http://www.inferjay.com/blog/2014/09/23/android-dev-weekly-issue-1</id>
    <content type="html"><![CDATA[<h3 id="section">文章</h3>

<ol>
  <li>
    <p><a href="https://github.com/fex-team/http2-spec/blob/master/HTTP2中英对照版(06-29).md">HTTP2协议中英对照版</a></p>

    <p>HTTP 全称为 HyperText Transfer Protocol，中文叫做超文本传输协议。用于 Web 应用层传输，是 Web 架构的核心，它至今公布有 3 个版本：HTTP 0.9、HTTP 1.0、HTTP 1.1，作为与时俱进的我们，有必要去了解和学习 HTTP 2，它对我们未来 Web 性能优化工作起到很重要的作用，是一切优化的基础。现 Chrome 里也已使用 SPDY。</p>

    <p>由百度FEX团队的 zhangtao 等同学们，业余花费近半年时间翻译的 HTTP 2 草案发布。</p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/morgan_xww/article/details/9372285#comments">Android TouchEvent事件传递机制</a></p>

    <p>作者通过列举通俗易懂的例子和打印日志的方式讲解了Android TouchEvent事件传递机制。		</p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/guolin_blog/article/details/9097463">Android事件分发机制完全解析，带你从源码的角度彻底理解(上)</a>	</p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/loongggdroid/article/details/19118475">Android事件分发机制完全解析，带你从源码的角度彻底理解(下)</a></p>
  </li>
</ol>

<h3 id="section-1">代码&amp;开源库</h3>

<ol>
  <li>
    <p><a href="https://github.com/nhachicha/SnappyDB">SnappyDB</a></p>

    <p>一个Android平台的 <code>key-value</code> 数据库，在 <code>读/写</code> 操作方面可以完胜 SQLite。 下图就是它们在 <code>读/写</code> 方面的对比测试结果：</p>

    <p><img src="https://camo.githubusercontent.com/0f6193a1f84aa8a77d07ac18d3566b87bc89999b/687474703a2f2f736e6170707964622e636f6d2f696d672f62656e63686d61726b5f73716c6974655f776974685f7472616e73616374696f6e2e706e67" alt="image" /></p>
  </li>
</ol>

<!--more-->

<ol>
  <li>
    <p><a href="https://github.com/kikoso/AppRate-for-Android">AppRate-for-Android</a> </p>

    <p>AppRate for Android是一个以不打扰用户的方式允许用户对您的应用程序进行评价。一个窗口中选择评价、稍后提醒还是拒绝进行评价。</p>

    <p><img src="https://camo.githubusercontent.com/f84466fd21066bad1ba7c47224f8f351a21d2361/68747470733a2f2f7261772e6769746875622e636f6d2f6b696b6f736f2f417070526174652d666f722d416e64726f69642f6d61737465722f6172742f73637265656e73686f742e706e67" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/emmano/BlurStickyHeaderListView">BlurStickyHeaderListView</a> </p>

    <p>ListView with blur/parallax/sticky capabilities</p>
  </li>
  <li>
    <p><a href="https://github.com/2359media/EasyAndroidAnimations">EasyAndroidAnimations</a> </p>

    <p>Easy Android Animations is an animation library that aims to make android animations easier, with 50+ builtin animations, it allows you to introduce many complex animation effects in your application with one or two lines of code.</p>
  </li>
  <li>
    <p><a href="https://github.com/MrEngineer13/SnackBar">SnackBar</a></p>

    <p>toast-like alert pattern for Android</p>

    <p><img src="https://camo.githubusercontent.com/67a39af16f3d46631567c1f7bd7dcddeb3c4c9e9/687474703a2f2f6d6174657269616c2d64657369676e2e73746f726167652e676f6f676c65617069732e636f6d2f696d616765732f636f6d706f6e656e74732d746f617374732d73706563732d737065635f746f6173745f30335f315f6c617267655f6d6470692e706e67" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/Instagram/ig-json-parser">ig-json-parser</a></p>

    <p>一个由Instagram团队实现的快速JSON解析器。</p>
  </li>
  <li>
    <p><a href="https://github.com/marvinlabs/android-floatinglabel-widgets">android-floatinglabel-widgets</a></p>

    <p>浮动标签输入组件，当输入框不为空的时候可以在其上方显示一个提示标签。</p>

    <p><img src="https://camo.githubusercontent.com/ae02c8934861e7fcc10661cfed79f7276dfe06b7/687474703a2f2f696d672e796f75747562652e636f6d2f76692f68705a4439674a635267302f302e6a7067" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/traex/CalendarListview">CalendarListview</a></p>

    <p>在ListView中实现了一个日历，每行显示一个月。</p>

    <p><img src="https://github.com/traex/CalendarListview/raw/master/demo.gif" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/emmaguy/clean-status-bar">clean-status-bar</a></p>

    <p>在你获取屏幕截图之前帮你清空Android Status bar的小工具。</p>

    <p><img src="https://raw.githubusercontent.com/emmaguy/clean-status-bar/master/images/before.png" alt="image" /><img src="https://raw.githubusercontent.com/emmaguy/clean-status-bar/master/images/after.png" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/geekcompany/ResumeSample">ResumeSample</a></p>

    <p>程序员简历模板系列。包括PHP程序员简历模板、iOS程序员简历模板、Android程序员简历模板、Web前端程序员简历模板、Java程序员简历模板、C/C++程序员简历模板、NodeJS程序员简历模板、架构师简历模板以及通用程序员简历模板 
http://get.jobdeer.com/744.get</p>
  </li>
  <li>
    <p><a href="https://github.com/imbryk/LoopingViewPager">LoopingViewPager</a></p>

    <p>一个Android ViewPager扩展可以无限滚动。</p>
  </li>
  <li>
    <p><a href="https://github.com/AltBeacon/android-beacon-library">android-beacon-library</a></p>

    <p>这是一个提供了与Beacons进行交互Api的库。</p>
  </li>
  <li>
    <p><a href="https://github.com/RatioLabs/BLEService">BLEService</a></p>

    <p>一个Android蓝牙低功耗Service库，主要实现了以下几个Feature：</p>

    <ul>
      <li>Implements BLE as an android service</li>
      <li>Requests done via AIDL with a service connection</li>
      <li>Responses sent via BroadcastReceivers</li>
      <li>Allows persistent device interface cross-activity.</li>
      <li>Hides all the nasty stuff</li>
      <li>Wraps Bluetooth classes in parcelable classes so they can be passed between activities.</li>
      <li>Less than 20 calls on a single object</li>
      <li>Supports connection retries</li>
    </ul>
  </li>
</ol>

<h3 id="section-2">工具</h3>

<ol>
  <li>
    <p><a href="https://github.com/evant/gradle-retrolambda">gradle-retrolambda</a></p>

    <p>一个可以在java 6，7和android中获得java lambda特性的gradle插件。</p>
  </li>
  <li>
    <p><a href="http://www.androiddevtools.cn">Android Studio 0.8.11</a></p>

    <p>Android Studio又如期的发布了更新，本次更新有如下几点：</p>

    <ul>
      <li>
        <p>支持了新版的Android Gradle plugin (0.13)，新版插件支持Gradle 2.1。</p>
      </li>
      <li>
        <p>Lint工具检查出的错误可以在文本扩展提示框中显示完整的错误解释说明了，以帮助你快速的解决问题。</p>
      </li>
      <li>
        <p>layout editor会检查,以确保你有最新版本的“layoutlib”。</p>
      </li>
      <li>
        <p>从IntelliJ 13.1.5 RC合并了最新的改动，其中一个改动是改变了Android Studio.app bundle的目录结构。</p>
      </li>
      <li>
        <p>修复了一些Bug。</p>
      </li>
    </ul>
  </li>
  <li>
    <p><a href="https://github.com/vladikoff/chromeos-apk">chromeos-apk</a></p>

    <p>一个可以让Android应用在Chrome OS, OS X, Linux 和 Windows系统上运行的小工具。</p>
  </li>
</ol>

<h3 id="section-3">书</h3>

<ol>
  <li>
    <p><a href="http://it-ebooks.info/book/2445/">50 Android Hacks</a></p>

    <p>本书讲解了50个Android开发的小技巧。</p>
  </li>
</ol>

<h3 id="section-4">设计</h3>

<ol>
  <li>
    <p><a href="http://lab.rayps.com/lc/">LayerCraft</a></p>

    <p>A Photoshop plugin to export UI assets from layers。</p>
  </li>
</ol>

<hr />
<p>版权声明：欢迎自由转载-非商用-非衍生-保持署名 | <a href="http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh">Creative Commons BY-NC-ND 3.0</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Keytool 错误 java.io.IOException: Incorrect AVA Format]]></title>
    <link href="http://www.inferjay.com/blog/2014/09/23/android-keytool-incorrect-ava-format-error/"/>
    <updated>2014-09-23T19:45:35+08:00</updated>
    <id>http://www.inferjay.com/blog/2014/09/23/android-keytool-incorrect-ava-format-error</id>
    <content type="html"><![CDATA[<p>今天在打包的时候碰到了 <code>keytool 错误 java.io.IOException: incorrect AVA format</code> 错误，还以为是混淆规则加的有问题导致的，看日志窗口也没有任何错误日志，只好请出Google大神，Google的一下错误信息，发现是有由于在创建Keystore时填写的 <code>First and Last Name</code> 、<code>Organizational Unit</code> 、<code>Organization</code> 、 <code>City or Locality</code> 、<code>State or Province</code> 等信息中是不允许有 <code>,</code> 符号的，将这些信息中的逗号去掉后就可以了。</p>

<p><img src="http://www.inferjay.com/images/notes_images/incorrect-AVA-format-error.png" alt="image" title="incorrect AVA format Error" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android开发周报 Issue#0]]></title>
    <link href="http://www.inferjay.com/blog/2014/09/15/android-weekly-issue-0/"/>
    <updated>2014-09-15T10:35:31+08:00</updated>
    <id>http://www.inferjay.com/blog/2014/09/15/android-weekly-issue-0</id>
    <content type="html"><![CDATA[<h3 id="section">文章</h3>

<ol>
  <li>
    <p><a href="http://blog.csdn.net/luoshengyang/article/details/37613135">SEAndroid安全机制框架分析</a></p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/singwhatiwanna/article/details/22597587">Android apk动态加载机制的研究</a></p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/singwhatiwanna/article/details/38168103">Android View系统解析(上)</a></p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/singwhatiwanna/article/details/38426471">Android View系统解析(下)</a></p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/cym492224103/article/details/39177275">Android仿QQ5.0侧滑菜单ResideMenu源码分析</a></p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/lmj623565791/article/details/39102591">Android ViewGroup事件分发机制 </a></p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/a396901990/article/details/38904543">ANDROID内存优化(大汇总——全)</a></p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/lmj623565791/article/details/38067475">Android 属性动画（Property Animation） 完全解析 （上）</a></p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/lmj623565791/article/details/38092093">Android 属性动画（Property Animation） 完全解析 （下）</a></p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/lmj623565791/article/details/37970961">Android Fragment 真正的完全解析（上）</a></p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/lmj623565791/article/details/37992017">Android Fragment 真正的完全解析（下）</a></p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/a396901990/article/details/34139157">利用&amp;,^,~,«,»&gt;写出高效艺术的代码</a></p>
  </li>
</ol>

<h3 id="section-1">技巧</h3>

<ol>
  <li>
    <p><a href="http://blog.csdn.net/maosidiaoxian/article/details/38300627">Fragment的懒加载</a></p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/maosidiaoxian/article/details/39156563">去掉TextView中autolink的下划线</a></p>
  </li>
</ol>

<!--more-->

<h3 id="section-2">代码&amp;开源库</h3>

<ol>
  <li>
    <p><a href="https://github.com/109021017/GridViewPager">GridViewPager</a> </p>

    <p>一个自适应横竖屏的网格ViewPager。</p>

    <p><img src="https://camo.githubusercontent.com/e6523106882ba44ae41e9fd1b95c1a4b701015b6/68747470733a2f2f7261772e6769746875622e636f6d2f3130393032313031372f477269645669657750616765722f6d61737465722f73637265656e73686f74732f30332e706e67" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/Glamdring/EasyCamera">EasyCamera</a> </p>

    <p>作者重新封装了Andorid Camera的api，使Camera的Api使用起来方便和简单。</p>
  </li>
  <li>
    <p><a href="https://github.com/siyamed/android-shape-imageview">android-shape-imageview</a> </p>

    <p>一个可以自定义各种形状的ImageView, 并且支持边框。</p>
  </li>
  <li>
    <p><a href="https://github.com/matthewrkula/SecretTextView">SecretTextView</a> </p>

    <p>实现了文字淡入/淡出效果.</p>

    <p><img src="https://camo.githubusercontent.com/bbb38412d3ae652f565556711e7aa6db67ebb4c7/68747470733a2f2f692e696d67666c69702e636f6d2f39356d39312e676966" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/xuchdeid/LiveBlurListView">LiveBlurListView</a></p>

    <p>Sample to show how to implement live blur for Android ViewGroup。</p>
  </li>
  <li>
    <p><a href="https://github.com/Manabu-GT/EtsyBlur">EtsyBlur</a> </p>

    <p>一个可以让你在自己的App里轻松实现毛玻璃模糊效果的库。</p>

    <p><img src="https://raw.github.com/Manabu-GT/EtsyBlur/master/art/readme_demo.gif" alt="image" />	</p>
  </li>
  <li>
    <p><a href="https://github.com/dodola/WaterFallExt">WaterFallExt</a> </p>

    <p>增强版的瀑布流 扩展自StaggeredGridView.</p>
  </li>
  <li>
    <p><a href="https://github.com/sockeqwe/CircleProgressView">CircleProgessView</a> </p>

    <p>一个实现了Android L progressbar效果的圆形进度条。</p>

    <p><img src="https://raw.githubusercontent.com/sockeqwe/CircleProgressBar/master/gif/demo.gif" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/thuytrinh/android-collage-views">android-collage-views</a></p>

    <p>一个实现了可自由拖动、旋转和缩放的ImageView。</p>
  </li>
</ol>

<h3 id="section-3">设计</h3>

<ol>
  <li>
    <p><a href="https://github.com/timroes/android-ps-tools">android-ps-tools</a></p>

    <p>一些方便Android UI设计的PhototShop插件。</p>
  </li>
  <li>
    <p><a href="https://github.com/marcosecchi/android_resizer_toolkit">android_resizer_toolkit</a></p>

    <p>A tool for batch resizing images for Android in Photoshop CS5/CS6</p>
  </li>
</ol>

<hr />
<p>版权声明：欢迎自由转载-非商用-非衍生-保持署名 | <a href="http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh">Creative Commons BY-NC-ND 3.0</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mac OSX 10.9.4下使用Homebrew安装MongoDB]]></title>
    <link href="http://www.inferjay.com/blog/2014/07/18/use-homebrew-install-mongodb-at-the-mac-osx-10.9.4/"/>
    <updated>2014-07-18T00:09:28+08:00</updated>
    <id>http://www.inferjay.com/blog/2014/07/18/use-homebrew-install-mongodb-at-the-mac-osx-10.9.4</id>
    <content type="html"><![CDATA[<h2 id="homebrew">安装Homebrew</h2>

<blockquote>
  <p>Homebrew是Mac OSX下一个包依赖管理工具，用它来安装软件非常的方便只需要<code>brew install 软件名</code>这一条命令就可以将你所需要的软件安装好，不用再操心安装过程中软件的依赖问题，这些问题Homebrew统统帮你搞定，Homebrew的官网：<a href="http://brew.sh/">http://brew.sh/</a>  在官网上对Homebrew的安装和用法有详细的描述这里就不多扯了。如果你还没有安装，还等什么赶紧动手安装吧！:]</p>
</blockquote>

<p>Homebrew安装方法也很简单：打开终端，然后输入命令</p>

<pre><code>ruby -e "$(curl -fsSL https://raw.github.com/mxcl/homebrew/go)"
</code></pre>

<p>对，就是这么简单一条命令就可以将神器Homebrew安装好.</p>

<h2 id="mongodb">安装MongoDB</h2>

<blockquote>
  <p>MongoDB是一个基于分布式文件存储的数据库。由C++语言编写。旨在为WEB应用提供可扩展的高性能数据存储解决方案。
MongoDB是一个介于关系数据库和非关系数据库之间的产品，是非关系数据库当中功能最丰富，最像关系数据库的。他支持的数据结构非常松散，是类似json的bson格式，因此可以存储比较复杂的数据类型。Mongo最大的特点是他支持的查询语言非常强大，其语法有点类似于面向对象的查询语言，几乎可以实现类似关系数据库单表查询的绝大部分功能，而且还支持对数据建立索引.</p>
</blockquote>

<p>进入正题开始用Homebrew安装主角MongoDB～～～</p>

<p>在终端输入如下命令即可安装MongoDB</p>

<pre><code>brew install mongodb
</code></pre>

<p>用Homebrew安装软件是不是很爽，耐心等待一会儿MongoDB就会安装好了……</p>

<!--more-->

<h2 id="mongodb-1">测试MongoDB是否安装成功</h2>

<p>在终端输入如下命令进行测试</p>

<pre><code>mongod
</code></pre>

<p><strong><code>mongod</code></strong>命令是用来启动MongoDB的服务的</p>

<p>执行<code>mongos</code>命令后返回了一堆错误信息，如下：</p>

<pre><code>mongod --help for help and startup options
2014-07-17T21:34:21.732+0800 [initandlisten] MongoDB starting : pid=13117 port=27017 	dbpath=/data/db 64-bit host=zhcmacbook-pro.local
2014-07-17T21:34:21.732+0800 [initandlisten] db version v2.6.3
2014-07-17T21:34:21.732+0800 [initandlisten] git version: nogitversion
2014-07-17T21:34:21.732+0800 [initandlisten] build info: Darwin minimavericks.local 13.2.0 	Darwin Kernel Version 13.2.0: Thu Apr 17 23:03:13 PDT 2014; root:xnu-2422.100.13~1/	RELEASE_X86_64 x86_64 BOOST_LIB_VERSION=1_49
2014-07-17T21:34:21.732+0800 [initandlisten] allocator: tcmalloc
2014-07-17T21:34:21.732+0800 [initandlisten] options: {}
2014-07-17T21:34:21.733+0800 [initandlisten] exception in initAndListen: 10296
*********************************************************************
 	ERROR: dbpath (/data/db) does not exist.
 	Create this directory or give existing directory in --dbpath.
 	See http://dochub.mongodb.org/core/startingandstoppingmongo
*********************************************************************
, terminating
2014-07-17T21:34:21.733+0800 [initandlisten] dbexit:
2014-07-17T21:34:21.733+0800 [initandlisten] shutdown: going to close listening sockets...
2014-07-17T21:34:21.733+0800 [initandlisten] shutdown: going to flush diaglog...
2014-07-17T21:34:21.733+0800 [initandlisten] shutdown: going to close sockets...
2014-07-17T21:34:21.733+0800 [initandlisten] shutdown: waiting for fs preallocator...
2014-07-17T21:34:21.733+0800 [initandlisten] shutdown: lock for final commit...
2014-07-17T21:34:21.733+0800 [initandlisten] shutdown: final commit...
2014-07-17T21:34:21.733+0800 [initandlisten] shutdown: closing all files...
2014-07-17T21:34:21.733+0800 [initandlisten] closeAllFiles() finished
2014-07-17T21:34:21.733+0800 [initandlisten] dbexit: really exiting now
</code></pre>

<p>这么一堆错误信息，重点是这几句</p>

 	ERROR: dbpath (/data/db) does not exist.
 	Create this directory or give existing directory in –dbpath.
 	See http://dochub.mongodb.org/core/startingandstoppingmongo

<p>错误信息的意思是<code>dbpath (/data/db)</code>不存在，需要创建<code>/data/db</code>这个目录或者使用<code>--dbpath</code>参数项指定一个已经存在的目录。</p>

<pre><code>dbpath (/data/db)这个目录是用来存储MongoDB数据文件的地方
</code></pre>

<p>既然不存在<code>/data/db</code>那我们就创建这个目录</p>

<p>首先在终端输入<code>cd /</code>命令返回到磁盘根目录</p>

<p>然后输入<code>mddir -p /data/db</code>创建<code>/data/db</code></p>

<p>再次输入<code>mongos</code>命令启动MongoDB的服务，服务又退出了返回一堆信息如下：</p>

<pre><code>mongod --help for help and startup options
2014-07-17T23:56:40.285+0800 [initandlisten] MongoDB starting : pid=21182 port=27017 	dbpath=/data/db 64-bit host=zhcmacbook-pro.local
2014-07-17T23:56:40.285+0800 [initandlisten] db version v2.6.3
2014-07-17T23:56:40.285+0800 [initandlisten] git version: nogitversion
2014-07-17T23:56:40.285+0800 [initandlisten] build info: Darwin minimavericks.local 13.2.0 	Darwin Kernel Version 13.2.0: Thu Apr 17 23:03:13 PDT 2014; root:xnu-2422.100.13~1/	RELEASE_X86_64 x86_64 BOOST_LIB_VERSION=1_49
2014-07-17T23:56:40.285+0800 [initandlisten] allocator: tcmalloc
2014-07-17T23:56:40.285+0800 [initandlisten] options: {}
2014-07-17T23:56:40.287+0800 [initandlisten] exception in initAndListen: 10309 Unable to 	create/open lock file: /data/db/mongod.lock errno:13 Permission denied Is a mongod 	instance already running?, terminating
2014-07-17T23:56:40.287+0800 [initandlisten] dbexit:
2014-07-17T23:56:40.287+0800 [initandlisten] shutdown: going to close listening sockets...
2014-07-17T23:56:40.287+0800 [initandlisten] shutdown: going to flush diaglog...
2014-07-17T23:56:40.287+0800 [initandlisten] shutdown: going to close sockets...
2014-07-17T23:56:40.287+0800 [initandlisten] shutdown: waiting for fs preallocator...
2014-07-17T23:56:40.287+0800 [initandlisten] shutdown: lock for final commit...
2014-07-17T23:56:40.287+0800 [initandlisten] shutdown: final commit...
2014-07-17T23:56:40.287+0800 [initandlisten] shutdown: closing all files...
2014-07-17T23:56:40.288+0800 [initandlisten] closeAllFiles() finished
2014-07-17T23:56:40.288+0800 [initandlisten] shutdown: removing fs lock...
2014-07-17T23:56:40.288+0800 [initandlisten] couldn't remove fs lock errno:9 Bad file 	descriptor
2014-07-17T23:56:40.288+0800 [initandlisten] dbexit: really exiting now
</code></pre>

<p>出错原因是这几句log</p>

<pre><code>create/open lock file: /data/db/mongod.lock errno:13 Permission denied Is a mongod 	instance already running?, terminating
</code></pre>

<p>意思是不创建和打开<code>/data/db/mongod.lock</code>这个文件，原因是<strong><code>Permission denied</code></strong>（权限拒绝），看来是当前用户执行<code>mongod</code>这个命令时，对<code>/data/db</code>这个目录没有操作权限，OK，知道原因就好办了，给<code>/data/db</code>加上权限。</p>

<p>在终端输入如下命令：</p>

<pre><code>sudo chown -R  当前登录的用户名 /data
</code></pre>

<p>再次在终端输入<code>mongod</code>启动MongoDB的服务，返回如下信息：</p>

<pre><code>mongod --help for help and startup options
2014-07-18T01:29:23.286+0800 [initandlisten] MongoDB starting : pid=22420 port=27017 	dbpath=/data/db 64-bit host=zhcmacbook-pro.local
2014-07-18T01:29:23.286+0800 [initandlisten] db version v2.6.3
2014-07-18T01:29:23.286+0800 [initandlisten] git version: nogitversion
2014-07-18T01:29:23.286+0800 [initandlisten] build info: Darwin minimavericks.local 13.2.0 	Darwin Kernel Version 13.2.0: Thu Apr 17 23:03:13 PDT 2014; root:xnu-2422.100.13~1/	RELEASE_X86_64 x86_64 BOOST_LIB_VERSION=1_49
2014-07-18T01:29:23.286+0800 [initandlisten] allocator: tcmalloc
2014-07-18T01:29:23.287+0800 [initandlisten] options: {}
2014-07-18T01:29:23.288+0800 [initandlisten] journal dir=/data/db/journal
2014-07-18T01:29:23.288+0800 [initandlisten] recover : no journal files present, no 	recovery needed
2014-07-18T01:29:23.437+0800 [initandlisten] waiting for connections on port 27017
</code></pre>

<p>终于启动成功了，然后再打开一个新的终端窗口输入<code>mongo</code>命令，返回如下信息：</p>

<pre><code>MongoDB shell version: 2.6.3
connecting to: test
Welcome to the MongoDB shell.
For interactive help, type "help".
For more comprehensive documentation, see
http://docs.mongodb.org/
Questions? Try the support group
http://groups.google.com/group/mongodb-user
&gt;
</code></pre>

<p>哦耶！，成功进入MongoDB的命令行模式，到这里MongoDB就安装好了！:] :] :]……</p>

<hr />
<p>版权声明：欢迎自由转载-非商用-非衍生-保持署名 | <a href="http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh">Creative Commons BY-NC-ND 3.0</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[最新版Android开发工具]]></title>
    <link href="http://www.inferjay.com/blog/2014/06/27/new-version-android-develop-tools/"/>
    <updated>2014-06-27T23:38:32+08:00</updated>
    <id>http://www.inferjay.com/blog/2014/06/27/new-version-android-develop-tools</id>
    <content type="html"><![CDATA[<h2 id="android-tools">Android Tools</h2>

<h4 id="adt-bundle">ADT Bundle</h4>
<p>ADT Bundle包含了Eclipse、ADT插件和SDK Tools，是已经集成好的IDE，只需安装好Jdk即可开始开发，推荐初学者下载ADT Bundle，不用再折腾开发环境。</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">版本号</th>
      <th style="text-align: center">Windows</th>
      <th style="text-align: center">Max OSX</th>
      <th style="text-align: center">Linux</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">ADT-23.0.0</td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1i39mvY1">32位</a> <a href="http://pan.baidu.com/s/1o65ExPS">64位</a></td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1hqvHkry">64位</a></td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1mgoh41q">32位</a> <a href="http://pan.baidu.com/s/1qWJh4wk">64位</a></td>
    </tr>
  </tbody>
</table>

<h4 id="android-studio">Android Studio</h4>

<table>
  <thead>
    <tr>
      <th style="text-align: center">版本号</th>
      <th style="text-align: center">Windows</th>
      <th style="text-align: center">Max OSX</th>
      <th style="text-align: center">Linux</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">0.8.2</td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1eQ1ln14">下载</a></td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1pJkDQHl">下载</a></td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1c0ncknA">下载</a></td>
    </tr>
    <tr>
      <td style="text-align: center">0.8.1</td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1o6LTxVG">下载</a></td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1dD5qHjF">下载</a></td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1kTqlzxH">下载</a></td>
    </tr>
    <tr>
      <td style="text-align: center">0.8 0</td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1eQ5oGaI">下载</a></td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1kTHpLyR">下载</a></td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1c0qzDao">下载</a></td>
    </tr>
    <tr>
      <td style="text-align: center">0.6.1</td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1hqqX2ba">下载</a></td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1qWjpB9y">下载</a></td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1qWBFTiG">下载</a></td>
    </tr>
    <tr>
      <td style="text-align: center">0.6.0</td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1sjJf0Pf">下载</a></td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1jcixK">下载</a></td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1hqpB7As">下载</a></td>
    </tr>
    <tr>
      <td style="text-align: center">0.5.9</td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1dDw3oYl">下载</a></td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1c08a8y0">下载</a></td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1hqeMmVU">下载</a></td>
    </tr>
    <tr>
      <td style="text-align: center">0.5.8</td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1qWLPqd2">下载</a></td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1i3ECc9f">下载</a></td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1i37QxBf">下载</a></td>
    </tr>
  </tbody>
</table>

<h4 id="adt-plugin">ADT Plugin</h4>
<p>离线安装ADT插件请戳<a href="https://github.com/inferjay/AndroidDevTools/wiki/首页"><strong>项目wiki</strong></a></p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">版本号</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1sjArX7J">ADT-23.0.0</a></td>
    </tr>
    <tr>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1jGMb5yQ">ADT-22.6.3</a></td>
    </tr>
    <tr>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1pJ185Rl">AdT-22.6.1</a></td>
    </tr>
  </tbody>
</table>

<h4 id="sdk-tools">SDK Tools</h4>

<table>
  <thead>
    <tr>
      <th style="text-align: center">版本号</th>
      <th style="text-align: center">Windows</th>
      <th style="text-align: center">Max OSX</th>
      <th style="text-align: center">Linux</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">sdk-tools-r23</td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1nt5Gwhb">installer_r23-windows.exe</a> <a href="http://pan.baidu.com/s/1kTC6akZ">android-sdk_r23-windows.zip</a></td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1gdj7X3l">android-sdk_r23-macosx.zip</a></td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1yBnSa">android-sdk_r23-linux.tgz</a></td>
    </tr>
  </tbody>
</table>

<!-- More -->

<h4 id="sdk">SDK</h4>
<p>这是Android开发所需的sdk，下载并解压后，将解压出的整个文件夹复制或者移动到<code>your sdk 路径/platforms</code>文件夹下即可。</p>

<table>
  <thead>
    <tr>
      <th style="text-align: left">系统版本号</th>
      <th style="text-align: center">Windows</th>
      <th style="text-align: center">Max OSX</th>
      <th style="text-align: center">Linux</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left">android L</td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1i3tDDvZ">下载</a></td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1ntHmhYx">下载</a></td>
      <td style="text-align: center"> </td>
    </tr>
    <tr>
      <td style="text-align: left">android 4.4W</td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1eYPGE">下载</a></td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1nt5GKWh">下载</a></td>
      <td style="text-align: center"> </td>
    </tr>
    <tr>
      <td style="text-align: left">android 4.4.2</td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1kT60PGN">下载</a></td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1c03XoL6">下载</a></td>
      <td style="text-align: center"> </td>
    </tr>
    <tr>
      <td style="text-align: left">android 4.3</td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1dDrJWit">下载</a></td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1i3mmidn">下载</a></td>
      <td style="text-align: center"> </td>
    </tr>
    <tr>
      <td style="text-align: left">android 4.2.2</td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1i3tDDvZ">下载</a></td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1jGLvX6Q">下载</a></td>
      <td style="text-align: center"> </td>
    </tr>
    <tr>
      <td style="text-align: left">android 4.1.2</td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1c0D0Fok">下载</a></td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1pJ4qMb5">下载</a></td>
      <td style="text-align: center"> </td>
    </tr>
    <tr>
      <td style="text-align: left">android 4.0.3</td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1eQekIzS">下载</a></td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1eQH0vHC">下载</a></td>
      <td style="text-align: center"> </td>
    </tr>
    <tr>
      <td style="text-align: left">android 4.0</td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1jGBmAjW">下载</a></td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1nt7cEDF">下载</a></td>
      <td style="text-align: center"> </td>
    </tr>
    <tr>
      <td style="text-align: left">android 3.2</td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1jGLvX6A">下载</a></td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1qWqH9Q8">下载</a></td>
      <td style="text-align: center"> </td>
    </tr>
    <tr>
      <td style="text-align: left">android 3.1</td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1pJ0naTP">下载</a></td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1jG62PSy">下载</a></td>
      <td style="text-align: center"> </td>
    </tr>
    <tr>
      <td style="text-align: left">android 3.0</td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1pJ0naTP">下载</a></td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1bn2Duub">下载</a></td>
      <td style="text-align: center"> </td>
    </tr>
    <tr>
      <td style="text-align: left">android 2.3.3</td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1ngubc">下载</a></td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1jGge2bk">下载</a></td>
      <td style="text-align: center"> </td>
    </tr>
    <tr>
      <td style="text-align: left">android 2.2</td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1qW8YzY8">下载</a></td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1ntmJVmD">下载</a></td>
      <td style="text-align: center"> </td>
    </tr>
  </tbody>
</table>

<h4 id="sdk-system-images">SDK System images</h4>
<p>这是在创建模拟器时需要的system image，也就是在创建模拟器时<code>CPU/ABI</code>项需要选择的，下载并解压后，将解压出的整个文件夹复制或者移动到<code>your sdk 路径/system-images</code>文件夹下即可， 如果没有<code>system-images</code>目录就先创建此文件夹。</p>

<table>
  <thead>
    <tr>
      <th style="text-align: left">系统版本号</th>
      <th style="text-align: center">Windows</th>
      <th style="text-align: center">Max OSX</th>
      <th style="text-align: center">Linux</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left">android L</td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1hqIcqhA">下载</a></td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1ntFQlRV">下载</a></td>
      <td style="text-align: center"> </td>
    </tr>
    <tr>
      <td style="text-align: left">android 4.4W</td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1mgJVZfE">下载</a></td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1GmAE6">下载</a></td>
      <td style="text-align: center"> </td>
    </tr>
    <tr>
      <td style="text-align: left">android 4.4.2</td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1i3Jwhed">下载</a></td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1qW0QWdm">下载</a></td>
      <td style="text-align: center"> </td>
    </tr>
    <tr>
      <td style="text-align: left">android 4.3</td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1guLaQ">下载</a></td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1pJPp6dX">下载</a></td>
      <td style="text-align: center"> </td>
    </tr>
    <tr>
      <td style="text-align: left">android 4.2.2</td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1pJO99hD">下载</a></td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1kTyZo27">下载</a></td>
      <td style="text-align: center"> </td>
    </tr>
    <tr>
      <td style="text-align: left">android 4.1.2</td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1nMr4E">下载</a></td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1kT2xdxd">下载</a></td>
      <td style="text-align: center"> </td>
    </tr>
    <tr>
      <td style="text-align: left">android 4.0.3</td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1i3Fsx6H">下载</a></td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1gdnCh2b">下载</a></td>
      <td style="text-align: center"> </td>
    </tr>
    <tr>
      <td style="text-align: left">android 4.0</td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1gd3lhYF">下载</a></td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1hqoWcNM">下载</a></td>
      <td style="text-align: center"> </td>
    </tr>
  </tbody>
</table>

<h4 id="googlemap-apis-sdk">GoogleMap APIs SDK</h4>
<p>这是GoogleMap APIs SDK，下载并解压后，将解压出的整个文件夹复制或者移动到<code>your sdk 路径/add-ons</code>文件夹下即可。</p>

<table>
  <thead>
    <tr>
      <th style="text-align: left">系统版本号</th>
      <th style="text-align: center">Windows</th>
      <th style="text-align: center">Max OSX</th>
      <th style="text-align: center">Linux</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left">android 4.4.2</td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1bno0mFt">下载ARM版</a> <a href="http://pan.baidu.com/s/1jGgKyZc">下载x86版</a></td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1bngsIkB">下载ARM版</a> <a href="http://pan.baidu.com/s/1eQDwCpG">下载x86版</a></td>
      <td style="text-align: center"> </td>
    </tr>
    <tr>
      <td style="text-align: left">android 4.3</td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1bnb9at5">下载</a></td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1gdJ0mqR">下载</a></td>
      <td style="text-align: center"> </td>
    </tr>
    <tr>
      <td style="text-align: left">android 4.2.2</td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1jGl4hZw">下载</a></td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1dDmurr7">下载</a></td>
      <td style="text-align: center"> </td>
    </tr>
    <tr>
      <td style="text-align: left">android 4.1.2</td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1ntK9Urf">下载</a></td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1mgIAcpa">下载</a></td>
      <td style="text-align: center"> </td>
    </tr>
    <tr>
      <td style="text-align: left">android 4.0.3</td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1bnEiHiB">下载</a></td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1hqBWAIo">下载</a></td>
      <td style="text-align: center"> </td>
    </tr>
    <tr>
      <td style="text-align: left">android 4.0</td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1gd68WtP">下载</a></td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1hqBWAIo">下载</a></td>
      <td style="text-align: center"> </td>
    </tr>
    <tr>
      <td style="text-align: left">android 3.2</td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1o6Dgtse">下载</a></td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1gdf49Jt">下载</a></td>
      <td style="text-align: center"> </td>
    </tr>
    <tr>
      <td style="text-align: left">android 3.1</td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1o6Dgtse">下载</a></td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1jGBS4rO">下载</a></td>
      <td style="text-align: center"> </td>
    </tr>
    <tr>
      <td style="text-align: left">android 3.0</td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1c0CKIFA">下载</a></td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1c0iY68w">下载</a></td>
      <td style="text-align: center"> </td>
    </tr>
    <tr>
      <td style="text-align: left">android 2.3.3</td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1hqHwsHA">下载</a></td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1dDvhHOt">下载</a></td>
      <td style="text-align: center"> </td>
    </tr>
    <tr>
      <td style="text-align: left">android 2.2</td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1qWJNPyk">下载</a></td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1eQEc8SU">下载</a></td>
      <td style="text-align: center"> </td>
    </tr>
  </tbody>
</table>

<h4 id="google-glass-sdk">Google Glass SDK</h4>
<p>这是GDK，下载并解压后，将解压出的整个文件夹复制或者移动到<code>your sdk 路径/add-ons</code>文件夹下即可。</p>

<table>
  <thead>
    <tr>
      <th style="text-align: left">系统版本</th>
      <th style="text-align: center">Windows</th>
      <th style="text-align: center">Max OSX</th>
      <th style="text-align: center">Linux</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left">android 4.4.2</td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1fENeu">下载</a></td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1eQpGaA2">下载</a></td>
      <td style="text-align: center"> </td>
    </tr>
    <tr>
      <td style="text-align: left">android 4.0.3</td>
      <td style="text-align: center"> </td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1hqikzUs">下载</a></td>
      <td style="text-align: center"> </td>
    </tr>
  </tbody>
</table>

<h4 id="google-tv-addon">Google TV Addon</h4>
<p>这是Google TV Addon，下载并解压后，将解压出的整个文件夹复制或者移动到<code>your sdk 路径/add-ons</code>文件夹下即可。</p>

<table>
  <thead>
    <tr>
      <th style="text-align: left">系统版本</th>
      <th style="text-align: center">Windows</th>
      <th style="text-align: center">Max OSX</th>
      <th style="text-align: center">Linux</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left">android 3.2</td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1qWLPFfm">下载</a></td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1eQFy1KA">下载</a></td>
      <td style="text-align: center"> </td>
    </tr>
  </tbody>
</table>

<h4 id="android-framework-source-code">Android Framework Source Code</h4>
<p>这是Android Framework Source Code，下载并解压后，将解压出的整个文件夹复制或者移动到<code>your sdk 路径/sources</code>文件夹下即可，这样当你在Eclipse里面按住<code>Ctrl</code>键点击某个系统类时就可以打开该类的源码文件查看源码了。</p>

<table>
  <thead>
    <tr>
      <th style="text-align: left">系统版本</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left"><a href="http://pan.baidu.com/s/1eQf6F0Q">android 4.4W</a></td>
    </tr>
    <tr>
      <td style="text-align: left"><a href="http://pan.baidu.com/s/1hqGGrVA">android 4.4.2</a></td>
    </tr>
    <tr>
      <td style="text-align: left"><a href="http://pan.baidu.com/s/1pJI3YrD">android 4.3</a></td>
    </tr>
    <tr>
      <td style="text-align: left"><a href="http://pan.baidu.com/s/1qWlXS9u">android 4.2.2</a></td>
    </tr>
    <tr>
      <td style="text-align: left"><a href="http://pan.baidu.com/s/1qWv1spm">android 4.1.2</a></td>
    </tr>
    <tr>
      <td style="text-align: left"><a href="http://pan.baidu.com/s/1jGGCpuu">android 4.0.3</a></td>
    </tr>
    <tr>
      <td style="text-align: left"><a href="http://pan.baidu.com/s/1o61AZwQ">android 4.0</a></td>
    </tr>
    <tr>
      <td style="text-align: left"><a href="http://pan.baidu.com/s/1pJt14En">android 3.0</a></td>
    </tr>
    <tr>
      <td style="text-align: left"><a href="http://pan.baidu.com/s/1eQekIPW">android 2.3.3</a></td>
    </tr>
    <tr>
      <td style="text-align: left"><a href="http://pan.baidu.com/s/1bny9E2b">android 2.2</a></td>
    </tr>
  </tbody>
</table>

<h4 id="support-library">Support Library</h4>
<p>包含supportive、v7和v13，下载解压后将解压出的整个文件夹复制或者移动到<code>your sdk 路径/extras</code>下即可。</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">版本号</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1o6OBlR8">20</a></td>
    </tr>
  </tbody>
</table>

<h4 id="sdk-samples">SDK Samples</h4>
<p>这是Android SDK自带的示例代码，下载并解压后，将解压出的整个文件夹复制或者移动到<code>your sdk 路径/samples</code>文件夹下即可。</p>

<table>
  <thead>
    <tr>
      <th style="text-align: left">系统版本</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left"><a href="http://pan.baidu.com/s/1gdpEan5">android L</a></td>
    </tr>
    <tr>
      <td style="text-align: left"><a href="http://pan.baidu.com/s/1ntLVN9B">android 4.4W</a></td>
    </tr>
    <tr>
      <td style="text-align: left"><a href="http://pan.baidu.com/s/1dDeSKt7">android 4.4.2</a></td>
    </tr>
    <tr>
      <td style="text-align: left"><a href="http://pan.baidu.com/s/1pJHicjx">android 4.3</a></td>
    </tr>
    <tr>
      <td style="text-align: left"><a href="http://pan.baidu.com/s/1hqGavMc">android 4.2.2</a></td>
    </tr>
    <tr>
      <td style="text-align: left"><a href="http://pan.baidu.com/s/1eYPL8">android 4.1.2</a></td>
    </tr>
    <tr>
      <td style="text-align: left"><a href="http://pan.baidu.com/s/1i3mScXv">android 4.0.3</a></td>
    </tr>
    <tr>
      <td style="text-align: left"><a href="http://pan.baidu.com/s/1kTiKqZP">android 4.0</a></td>
    </tr>
    <tr>
      <td style="text-align: left"><a href="http://pan.baidu.com/s/1eQpafgI">android 3.2</a></td>
    </tr>
    <tr>
      <td style="text-align: left"><a href="http://pan.baidu.com/s/1haIPw">android 3.1</a></td>
    </tr>
    <tr>
      <td style="text-align: left"><a href="http://pan.baidu.com/s/1ntx9qFR">android 3.0</a></td>
    </tr>
    <tr>
      <td style="text-align: left"><a href="http://pan.baidu.com/s/1hqiQw1Q">android 2.3.3</a></td>
    </tr>
    <tr>
      <td style="text-align: left"><a href="http://pan.baidu.com/s/1ntv7wut">android 2.2</a></td>
    </tr>
  </tbody>
</table>

<h4 id="ndk">NDK</h4>
<p>C/C++开发Android应用工具包</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">版本号</th>
      <th style="text-align: center">Windows</th>
      <th style="text-align: center">Max OSX</th>
      <th style="text-align: center">Linux</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">ndk-r9d</td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1dDxjl8t">32位</a> <a href="http://pan.baidu.com/s/1jGgecXw">64位</a></td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1eQnDNEE">32位</a> <a href="http://pan.baidu.com/s/1i3l5L8T">64位</a></td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1jGr9w4A">32位</a> <a href="http://pan.baidu.com/s/1sjAXS41">64位</a></td>
    </tr>
  </tbody>
</table>

<table>
  <thead>
    <tr>
      <th style="text-align: center">版本号</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1c0EMn8O">cxx-stl-libs-with-debug-info.zip</a></td>
    </tr>
  </tbody>
</table>

<h4 id="android-l-preview-system-image">Android L Preview System Image</h4>
<p>这个是Android L Preview系统的刷机镜像。</p>

<table>
  <thead>
    <tr>
      <th style="text-align: center">设备</th>
      <th style="text-align: center">下载</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">Nexus 5 (GSM/LTE) “hammerhead”</td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1kTsnxsF">hammerhead-lpv79-preview-ac1d8a8e.tgz</a></td>
    </tr>
    <tr>
      <td style="text-align: center">Nexus 7 (Wifi) “razor”</td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1mgn1CyG">razor-lpv79-preview-d0ddf8ce.tgz</a></td>
    </tr>
  </tbody>
</table>

<h4 id="jdk">JDK</h4>

<table>
  <thead>
    <tr>
      <th style="text-align: center">版本号</th>
      <th style="text-align: center">Windows</th>
      <th style="text-align: center">Max OSX</th>
      <th style="text-align: center">Linux</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center">1.8 u5</td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1bn2CVIB">32位</a> <a href="http://pan.baidu.com/s/1eQtJyGq">64位</a></td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1pJkD78R">64位</a></td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1o64s0pc">32位</a> <a href="http://pan.baidu.com/s/1jG3KBjg">64位</a></td>
    </tr>
    <tr>
      <td style="text-align: center">1.7 u60</td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1nt5a3jj">32位</a> <a href="http://pan.baidu.com/s/1o61AAHc">64位</a></td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1nt0qGfn">64位</a></td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1eQd4wVK">32位</a> <a href="http://pan.baidu.com/s/1jGzGQLw">64位</a></td>
    </tr>
    <tr>
      <td style="text-align: center">1.6 u45</td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1o67aooM">32位</a> <a href="http://pan.baidu.com/s/1dDmtSZJ">64位</a></td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1hqpB7Nm">64位</a></td>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1pJJj5Ib">32位</a> <a href="http://pan.baidu.com/s/1dDck3O9">64位</a></td>
    </tr>
  </tbody>
</table>

<h4 id="gradle">Gradle</h4>

<table>
  <thead>
    <tr>
      <th style="text-align: left">版本号</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: left"><a href="http://pan.baidu.com/s/1dDzleTV">gradle-2.0-rc-2-all.zip</a></td>
    </tr>
    <tr>
      <td style="text-align: left"><a href="http://pan.baidu.com/s/1Gmlx8">gradle-1.12-all.zip</a></td>
    </tr>
    <tr>
      <td style="text-align: left"><a href="http://pan.baidu.com/s/1c0hCmdE">gradle-1.11-all.zip</a></td>
    </tr>
    <tr>
      <td style="text-align: left"><a href="http://pan.baidu.com/s/1qWtzaGW">gradle-1.10-all.zip</a></td>
    </tr>
    <tr>
      <td style="text-align: left"><a href="http://pan.baidu.com/s/1dDeSuXV">gradle-1.9-all.zip</a></td>
    </tr>
    <tr>
      <td style="text-align: left"><a href="http://pan.baidu.com/s/1o6Npqqe">gradle-1.8-all.zip</a></td>
    </tr>
    <tr>
      <td style="text-align: left"><a href="http://pan.baidu.com/s/1pJnvyWz">gradle-1.7-all.zip</a></td>
    </tr>
  </tbody>
</table>

<h4 id="gradle-user-guide">Gradle User Guide</h4>

<table>
  <thead>
    <tr>
      <th style="text-align: center">版本号</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td style="text-align: center"><a href="http://pan.baidu.com/s/1dD7sC2d">gradle 1.12</a></td>
    </tr>
  </tbody>
</table>

<h2 id="course">Course</h2>

<h4 id="google-android">Google Android官方培训课程中文版</h4>

<p>地址：<a href="http://hukai.me/android-training-course-in-chinese/index.html">http://hukai.me/android-training-course-in-chinese/index.html</a></p>

<h2 id="design">Design</h2>

<h4 id="android">Android设计指南非官方简体中文版</h4>

<p>Topfun镜像地址：<a href="http://www.topfun.us/adchs/index.html">http://www.topfun.us/adchs/index.html</a></p>

<p>Github镜像地址：<a href="http://adchs.github.io">http://adchs.github.io</a></p>

<p>ApkBus镜像地址：<a href="http://www.apkbus.com/design/">http://www.apkbus.com/design/</a></p>

<p>Segmentfault镜像地址：<a href="http://mirrors.segmentfault.com/adchs/">http://mirrors.segmentfault.com/adchs/</a></p>

<p>多看阅读镜像地址：<a href="http://www.duokan.com/book/47790">http://www.duokan.com/book/47790</a></p>

<h4 id="android-cheatsheet-for-graphic-designers">Android Cheatsheet for Graphic Designers</h4>

<p>地址:<a href="http://petrnohejl.github.io/Android-Cheatsheet-For-Graphic-Designers/">http://petrnohejl.github.io/Android-Cheatsheet-For-Graphic-Designers/</a></p>

<h4 id="google-material-design-">Google Material Design 中文版</h4>

<p>地址：<a href="http://design.1sters.com">http://design.1sters.com</a></p>

<h4 id="google-material-design--1">Google Material Design 素材</h4>

<p><a href="http://pan.baidu.com/s/1i35iBNv">素材下载</a>(感谢 <a href="http://weibo.com/sanityd">@SanityD</a>)</p>

<hr />
<p>#License
版权声明：版权归原作者所有，这里仅做收集整理，欢迎自由转载-非商用-非衍生-保持署名 | <a href="http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh">Creative Commons BY-NC-ND 3.0</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ubuntu下彻底卸载并重新安装MySQL]]></title>
    <link href="http://www.inferjay.com/blog/2014/05/17/completely-uninstall-mysql-in-the-ubuntu/"/>
    <updated>2014-05-17T18:45:00+08:00</updated>
    <id>http://www.inferjay.com/blog/2014/05/17/completely-uninstall-mysql-in-the-ubuntu</id>
    <content type="html"><![CDATA[<h3 id="step1mysql">Step1.卸载MySQL</h3>
<p>终端下依次输入以下命令卸载MySQL</p>

<pre><code>sudo apt-get autoremove --purge mysql-server-5.0
sudo apt-get remove mysql-server
sudo apt-get autoremove mysql-server
sudo apt-get remove mysql-common(非常重要)
sudo apt-get remove apparmor
</code></pre>

<p>上面的其实有一些是多余的，建议还是按照顺序执行一遍</p>

<h3 id="step2">Step2.清理残留数据</h3>

<pre><code>dpkg -l |grep ^rc|awk '{print $2}' |sudo xargs dpkg -P
</code></pre>

<!--more-->
<p>###Step3.删除残余目录
	sudo rm /var/lib/mysql/ -R
	sudo rm /etc/mysql/ -R</p>

<h3 id="step4-mysql">Step4.安装 mysql</h3>
<pre><code>sudo apt-get install mysql-server mysql-client
sudo apt-get install php5-mysql 	//(安装php5-mysql 是将php和mysql连接起来 ) 
</code></pre>

<h3 id="step5">Step5.验证是否安装成功</h3>
<p>一旦安装完成，MySQL 服务器应该自动启动。您可以在终端提示符后运行以下命令来检查 MySQL 服务器是否正在运行：</p>

<pre><code>netstat -tap | grep mysql
</code></pre>

<p>当您运行该命令时，您可以看到类似下面的行：</p>

<p><code>tcp 0 0 localhost.localdomain:mysql *:* LISTEN</code></p>

<p>如果服务器不能正常运行，您可以通过下列命令启动它：</p>

<pre><code>sudo /etc/init.d/mysql restart
</code></pre>

<h3 id="step6">Step6.配置管理员密码</h3>
<p>进入mysql命令行模式</p>

<pre><code>mysql -uroot -p 管理员密码
</code></pre>

<p>配置 MySQL 的管理员密码</p>

<pre><code>mysqladmin -u root password newpassword
</code></pre>

<hr />
<p>版权声明：欢迎自由转载-非商用-非衍生-保持署名 | <a href="http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh">Creative Commons BY-NC-ND 3.0</a></p>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mac下解决无法更新Android Studio的问题]]></title>
    <link href="http://www.inferjay.com/blog/2013/09/26/update-android-studio-fail/"/>
    <updated>2013-09-26T12:53:00+08:00</updated>
    <id>http://www.inferjay.com/blog/2013/09/26/update-android-studio-fail</id>
    <content type="html"><![CDATA[<p>昨天在G+中看到Android Studio又有更新了就心血来潮想去更新体验一下，可是无论我怎么点Check Update却一直提示<code>Connection failed. Please check your network connection and try again</code>，开始以为是由于G*W在捣乱，但是设置了Proxy后还是无法更新，然后开始问谷哥找到了下面的解决办法。</p>

<p>首先打开<code>Finder</code>在左边选择<code>Application</code>目录，在右边找到<code>Android Studio.app</code>,然后右击选择“显示包内容”如下图：</p>

<p><img src="http://www.inferjay.com/images/notes_images/android_studio_in_finder.png" alt="alt text" title="android_studio_in_finder" /></p>

<!--More-->

<p>接着用自己趁手的编辑器打开bin目录下的idea.vmoptions文件添加如下内容：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class=""><span class="line">-Djava.net.preferIPv4Stack=true  
</span><span class="line">-Didea.updates.url=http://dl.google.com/android/studio/patches/updates.xml  
</span><span class="line">-Didea.patches.url=http://dl.google.com/android/studio/patches/  </span></code></pre></td></tr></table></div></figure></notextile></div>
<p>保存后，重新打开<code>Android Studio</code>点击Check Update就会弹出更新信息提示了</p>

<p><img src="http://www.inferjay.com/images/notes_images/check_update_info.png" alt="alt text" title="check_update_info" /></p>

<p>如果仍然无效，将url里的修改<code>http</code>为<code>https</code>，然后重启点击Check Update试试~~~</p>

<hr />
<p>版权声明：欢迎自由转载-非商用-非衍生-保持署名 | <a href="http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh">Creative Commons BY-NC-ND 3.0</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[译]Google　I/O 2013:Volley 图片缓存教程]]></title>
    <link href="http://www.inferjay.com/blog/2013/08/03/google-i-o-2013-volley-image-cache-tutorial/"/>
    <updated>2013-08-03T11:28:00+08:00</updated>
    <id>http://www.inferjay.com/blog/2013/08/03/google-i-o-2013-volley-image-cache-tutorial</id>
    <content type="html"><![CDATA[<p>Gooogle I/O 2013已经结束了，并且对于Android开发的未来它给我们留下了更大的期望。令人非常兴奋的是在今年的I/O大会上展示了一个叫<a href="https://android.googlesource.com/platform/frameworks/volley/"><code>Volley</code></a>的库。<code>Volley</code>是一个处理和缓存网络请求的库，减少开发人员在实际的每一个应用中写同样的样板代码。写样板代码是很无聊的并且也增加了开发人员出错的几率。Google是出于这些考虑创建了<code>Volley</code>。</p>

<p>如果你还没有看过<a href="https://developers.google.com/events/io/sessions/325304728">Gooogle　I/O中关于Volley的介绍</a>，在继续这篇文章之前我建议你先去看看关于<code>Volley</code>的介绍，对它有一些基本的理解。</p>

<p>在Google I/O介绍的时候，Ficus Kirpatrick讲了很多关于Volley如何的有助于图片加载。你会发现在Volley作为你的图片加载解决方案的时候，虽然Volley自己处理了L2的缓存，它需要但是没有包含L1的缓存。许多人会使用像<a href="https://github.com/nostra13/Android-Universal-Image-Loader">Universal Image Loader</a>或者<a href="https://github.com/square/picasso">Square`s newer Picasso</a>这些第三方的库去处理图片的加载；然而这些库通常已经同时处理了图片的加载和缓存。所以，我们如何使用Volley来替换图片的加载和缓存呢？首先，让我们看看Volley提供的便利的加载方法，我们稍后再看他们的不同之处。</p>

<!--More-->

<h4 id="imageloader">ImageLoader</h4>

<p><code>ImageLoader</code>这个类需要一个<code>Request</code>的实例以及一个<code>ImageCache</code>的实例。图片通过一个<code>URL</code>和一个<code>ImageListener</code>实例的<code>get()</code>方法就可以被加载。从哪里，<code>ImageLoader</code>会检查<code>ImageCache</code>,而且如果缓存里没有图片就会从网络上获取。</p>

<h4 id="networkimageview">NetworkImageView</h4>

<p>这个类在布局文件中替换<code>ImageViews</code>，并且将使用<code>ImageLoader</code>。<code>NetworkImageView</code>的<code>setUrl()</code>这个方法需要一个字符串的URL路径以及一个<code>ImageLoader</code>的实例。然后它使用<code>ImageLoader</code>的<code>get()</code>方法获取图片数据。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
</pre></td><td class="code"><pre><code class=""><span class="line">&lt;com.android.volley.toolbox.NetworkImageView
</span><span class="line">    android:id="@+id/twitterUserImage"
</span><span class="line">    android:layout_alignParentLeft="true"
</span><span class="line">    android:layout_alignParentTop="true"
</span><span class="line">    android:layout_width="40dp"
</span><span class="line">    android:layout_height="40dp"
</span><span class="line">    android:padding="5dp"
</span><span class="line">    /&gt;
</span></code></pre></td></tr></table></div></figure></notextile></div>

<h4 id="imagecache">ImageCache</h4>

<p><code>Volley</code>的<code>ImageCache</code>接口允许你使用你喜欢的L1缓存实现。不幸的是<code>Volley</code>没有提供默认的实现。在I/O的介绍中展示了<code>BitmapLruCache</code>的一点代码片段，但是<code>Volley</code>这个库本身并不包含任何相关的实现。</p>

<p><code>ImageCache</code>接口有两个方法，<code>getBitmap(String url)</code>和<code>putBitmap(String url, Bitmap bitmap)</code>.这两个方法足够简单直白，他们可以添加任何的缓存实现。</p>

<h4 id="volley">在Volley中添加图片缓存</h4>

<p>对于这个例子，我创建了<a href="https://github.com/rdrobinson3/VolleyImageCacheExample">一个简单的应用</a>，它从Twitter上搜索提取“CapTech”这个词的推文，并且把包含这个词的推文的用户名和照片显示在一个ListView中，在你滑动这个列表的时候将自动加载以前的记录，并根据需要从缓存中拉取图片。</p>

<p><img src="http://www.inferjay.com/images/notes_images/volley-example.png" alt="alt text" title="volley-example" /></p>

<p>例子里有２个可用的缓存实现。一个基于内存的LRU缓存。对于磁盘缓存实现我选择使用由Jake Wharton写的<a href="https://github.com/JakeWharton/DiskLruCache">DiskLruCache</a>。我只所以选择这个实现是因为他在Android社区中被经常使用和推荐的并且有一些人试图去改进它。使用一个基于磁盘的L1缓存有可能导致i/o阻塞的问题。<code>Volley</code>已经内置了一个磁盘L2缓存。磁盘L1缓存包括在内了，由于我原来不知道<code>Volley</code>是如何处理图片请求缓存的。</p>

<h3 id="section">在这个例子中主要的组件实现如下:</h3>

<h4 id="requestmanager">RequestManager</h4>

<p><code>RequestManager</code>维护了我们的一个<code>RequestQueue</code>的引用。<code>Volley</code>使用RequestQueue不仅处理了我们给Twitter的数据请求，而且也处理了我的的图片加载。</p>

<h4 id="requestqueue">RequestQueue</h4>

<p>这个类虽然跟图片加载没有直接的关系，但是它是具有代表性，它是如何继承<code>Volley</code>的<code>Request</code>类去处理你的JSON解析。它使用GET请求到Twtter并获取<code>TwitterData</code>对象。</p>

<h4 id="bitmaplruimagecache">BitmapLruImageCache</h4>

<p>这是一个基于<code>“least recently used(最近最少使用算法,简称LRU)”</code>内存缓存实现。它是快速的并且不会引起I/O阻塞的。推荐这种方法。</p>

<h4 id="disklruimagecache">DiskLruImageCache</h4>

<p><code>DiskLruImageCache</code>是一个<code>DiskLruCache</code>和<code>bitmap-centered</code>的包装实现。它从<code>DiskLruCache</code>中获取和添加<code>bitmaps</code>，并且处理缓存的实例。一个磁盘缓存或许会引起I/O的阻塞。</p>

<h4 id="imagecachemanager">ImageCacheManager</h4>

<p><code>ImageCacheManager</code>持有一个我们的<code>ImageCache</code>和<code>Volley ImageLoader</code>的引用。</p>

<p>有一件事情你要注意，在ImageCacheManager中我们使用了字符串URL的hashCode()值作为缓存的Key。这么做是因为在URL中的某些字符不能作为缓存的Key。</p>

<h4 id="buzzarrayadapter">BuzzArrayAdapter</h4>

<p>这是一个简单的Adapter。这里唯一要注意的是我们实现了Volley的Listener和ErrListener接口并且将这个Adapter作为
NetworkImageView’s的setUrl(String string , Listener listener, ErrorListener errorListener) 方法的Listener。这个Adapter还有一点额外的代码，用来在滚动的时候加载老的推文。</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
<span class="line-number">4</span>
<span class="line-number">5</span>
<span class="line-number">6</span>
<span class="line-number">7</span>
<span class="line-number">8</span>
</pre></td><td class="code"><pre><code class=""><span class="line">Tweet tweet = mData.get(position);
</span><span class="line">if(tweet != null){
</span><span class="line">viewHolder.twitterUserImage.setImageUrl(tweet.getUserImageUrl(),ImageCacheManager.getInstance().getImageLoader());
</span><span class="line">	viewHolder.userNameTextView.setText("@" + tweet.getUsername());
</span><span class="line">	viewHolder.messageTextView.setText(tweet.getMessage());
</span><span class="line">	viewHolder.tweetTimeTextView.setText(formatDisplayDate(tweet.getCreatedDate()));
</span><span class="line">	viewHolder.destinationUrl = tweet.getDestinationUrl();
</span><span class="line">}</span></code></pre></td></tr></table></div></figure></notextile></div>

<h4 id="putting-it-all-together">Putting it all together</h4>

<p>把这些组件组合在一起，图片加载和缓存是如此的简单。在启动时，在<code>MainApplication</code>这个类中初始化<code>RequestManager</code>和<code>ImageCacheManager</code>。在那里你可以定义你想要的L1缓存类型。内存缓存是默认的。</p>

<p>在<code>MainActivity</code>中我们调用<code>TwitterManager</code>并且加载我们的的初始数据集。一旦我们接收到响应我们就把这个响应传递给一个<code>BuzzArrayAdapter</code>并把这个<code>Adapter</code>设置到我们的<code>ListView</code>上。</p>

<p>正如我们已经在上面看到了<code>BuzzArrayAdapter</code>的代码,对于<code>NetworkImageView</code>所有繁重的图片加载操作我们仅仅需要从我们的<code>ImageCacheManager</code>中获取一个ImageLoader的实例传递给它就可以了。</p>

<p><code>ImageCacheManager</code>会检查我的LRU缓存实现并且如果这个图片是可用的就会返回它。如果这个图片不在在缓存中那么就从网络获取它。</p>

<p>当你滚动<code>ListView</code>的时候<code>BuzzArrayAdapter</code>将一起加载额外的推文和图片，并且重用在缓存中已经存在的图片。</p>

<h4 id="closing-thoughts-on-volley">Closing Thoughts on Volley</h4>
<p>虽然<code>Volley</code>是好用的，快速的，很容易实现的；但他也有一些不足的地方:</p>

<ul>
  <li>这个库没有任何的文档和例子。</li>
  <li>比如缓存配置组件，他们为什么不做成可配置的。</li>
  <li>从以上可以看出，除了一个比较奇怪的基本图片缓存实现以外,它甚至可能有使用NoImageCache的实现,或者在缓存完全可选的时候，你只是想从网络上获取任何东西。</li>
</ul>

<p>关于Volley在开发者社区中有很多令人激动的事情，并且有很的好的理由。感觉它就像一个库，它包含了一部分旧的Android API.像在I/O上公布的新的定位API,它是非常纯净的~~~~</p>

<h4 id="github">Github上的例子源码</h4>

<p><a href="https://github.com/rdrobinson3/VolleyImageCacheExample">VolleyImageCacheExample</a></p>

<h4 id="section-1">附件:</h4>

<p><a href="http://blogs.captechconsulting.com/sites/default/files/VolleyImageCacheExample-master.zip">VolleyImageCacheExample-master.zip</a></p>

<h4 id="section-2">原文作者:</h4>

<p>Trey Robinson</p>

<h4 id="section-3">原文地址:</h4>

<p><a href="http://blogs.captechconsulting.com/blog/raymond-robinson/google-io-2013-volley-image-cache-tutorial">http://blogs.captechconsulting.com/blog/raymond-robinson/google-io-2013-volley-image-cache-tutorial</a></p>

<h4 id="section-4">关于本文</h4>

<p>前端时间偶然间看到了<code>Volley</code>，最近开始做一个新项目又重新去看了看I/O中关于<code>Volley</code>的介绍,感觉<code>Volley</code>很牛逼，于是就想在新项目中试试<code>Volley</code>,找来找去关于<code>Volley</code>的资料几乎没有，在Google中找到了这篇文章，看了觉得不错，于是就决定翻译一下，一来加深自己的理解，二来呢顺便补一下自己那惨不忍睹的英语。由于本人英语水平比较烂，翻译的时候有可能会曲解原作者的意思，建议英语好的大牛飘过此文去看作者的原文，欢迎大家吐槽和拍砖，觉得译文中有那些地方我翻译的不妥的地方欢迎回复指正，我们相互学习～～～</p>

<hr />
<p>版权声明：原创译文欢迎自由转载-非商用-非衍生-保持署名 | <a href="http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh">Creative Commons BY-NC-ND 3.0</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[转]Android开发规范]]></title>
    <link href="http://www.inferjay.com/blog/2013/07/18/the-android-developer-standard/"/>
    <updated>2013-07-18T22:18:00+08:00</updated>
    <id>http://www.inferjay.com/blog/2013/07/18/the-android-developer-standard</id>
    <content type="html"><![CDATA[<h3 id="android">一、Android编码规范</h3>

<p>1.java代码中不出现中文，最多注释中可以出现中文</p>

<p>2.局部变量命名、静态成员变量命名</p>

<pre><code>只能包含字母，单词首字母出第一个外，都为大写，其他字母都为小写
</code></pre>

<p>3.常量命名</p>

<pre><code>只能包含字母和_，字母全部大写，单词之间用_隔开
</code></pre>

<p>4.layout中的id命名</p>

<pre><code>命名模式为：view缩写_模块名称_view的逻辑名称
</code></pre>

<p>view的缩写详情如下:</p>

<ul>
  <li>LayoutView：lv</li>
  <li>RelativeView:rv</li>
  <li>TextView:tv</li>
  <li>ImageView:iv</li>
  <li>ImageButton:im</li>
  <li>Button:btn</li>
  <li>……</li>
</ul>

<!--more-->

<p>5.activity中的view变量命名</p>

<pre><code>命名模式为：逻辑名称+view缩写
</code></pre>

<h6 id="section">建议:</h6>
<p>如果layout文件很复杂，建议将layout分成多个模块，每个模块定义一个moduleViewHolder，其成员变量包含所属view</p>

<p>6.strings.xml中的id命名</p>

<pre><code>命名模式：activity名称_功能模块名称_逻辑名称/activity名称_逻辑名称/common_逻辑名称
</code></pre>

<p>strings.xml中，使用activity名称注释，将文件内容区分开来</p>

<p>7.drawable中的图片命名</p>

<pre><code>命名模式：activity名称_逻辑名称/common_逻辑名称
</code></pre>

<p>8.styles.xml</p>

<p>将layout中不断重现的style提炼出通用的style通用组件，放到styles.xml中；</p>

<p>9.使用layer-list和selector</p>

<p>10.图片尽量分拆成多个可重用的图片</p>

<p>11.服务端可以实现的，就不要放在客户端</p>

<p>12.引用第三方库要慎重，避免应用大容量的第三方库，导致客户端包非常大</p>

<p>13.处理应用全局异常和错误，将错误以邮件的形式发送给服务端</p>

<p>14.图片的.9处理</p>

<p>15.使用静态变量方式实现界面间共享要慎重</p>

<p>16.Log(系统名称 模块名称 接口名称，详细描述)</p>

<p>17.单元测试（逻辑测试、界面测试）</p>

<p>18.不要重用父类的handler，对应一个类的handler也不应该让其子类用到，否则会导致message.what冲突</p>

<p>19.activity中在一个View.OnClickListener中处理所有的逻辑</p>

<p>19.strings.xml中使用%1$s实现字符串的通配</p>

<p>21.如果多个Activity中包含共同的UI处理，那么可以提炼一个CommonActivity，把通用部分叫由它来处理，其他activity只要继承它即可</p>

<p>22.使用button+activitgroup实现tab效果时，使用Button.setSelected(true)，确保按钮处于选择状态，并使activitygroup的当前activity与该button对应</p>

<p>23.如果所开发的为通用组件，为避免冲突，将drawable/layout/menu/values目录下的文件名增加前缀</p>

<p>24.数据一定要效验</p>

<pre><code>例如:字符型转数字型，如果转换失败一定要有缺省值；服务端响应数据是否有效判断；
</code></pre>

<h3 id="android-1">二、Android性能优化</h3>

<p>1.http用gzip压缩，设置连接超时时间和响应超时时间</p>

<p>http请求按照业务需求，分为是否可以缓存和不可缓存，那么在无网络的环境中，仍然通过缓存的httpresponse浏览部分数据，实现离线阅读。</p>

<p>2.listview 性能优化</p>

<ul>
  <li>
    <p>复用convertView</p>

    <p>在getItemView中，判断convertView是否为空，如果不为空，可复用。如果couvertview中的view需要添加listerner，代码一定要在if(convertView==null){}之外。</p>
  </li>
  <li>
    <p>异步加载图片</p>

    <p>item中如果包含有webimage，那么最好异步加载</p>
  </li>
  <li>
    <p>快速滑动时不显示图片</p>

    <p>当快速滑动列表时（SCROLL_STATE_FLING），item中的图片或获取需要消耗资源的view，可以不显示出来；而处于其他两种状态（SCROLL_STATE_IDLE 和SCROLL_STATE_TOUCH_SCROLL），则将那些view显示出来</p>
  </li>
</ul>

<p>3.使用线程池，分为核心线程池和普通线程池，下载图片等耗时任务放置在普通线程池，避免耗时任务阻塞线程池后，导致所有异步任务都必须等待</p>

<p>4.异步任务，分为核心任务和普通任务，只有核心任务中出现的系统级错误才会报错，异步任务的ui操作需要判断原activity是否处于激活状态</p>

<p>5.尽量避免static成员变量引用资源耗费过多的实例,比如Context</p>

<p>6.使用WeakReference代替强引用，弱引用可以让您保持对对象的引用，同时允许GC在必要时释放对象，回收内存。对于那些创建便宜但耗费大量内存的对象，即希望保持该对象，又要在应用程序需要时使用，同时希望GC必要时回收时，可以考虑使用弱引用。</p>

<p>7.超级大胖子Bitmap</p>

<ul>
  <li>及时的销毁(Activity的onDestroy时，将bitmap回收)</li>
  <li>设置一定的采样率</li>
  <li>巧妙的运用软引用</li>
  <li>drawable对应resid的资源，bitmap对应其他资源8.保证Cursor 占用的内存被及时的释放掉，而不是等待GC来处理。并且 Android明显是倾向于编程者手动的将Cursor close掉</li>
</ul>

<p>9.线程也是造成内存泄露的一个重要的源头。线程产生内存泄露的主要原因在于线程生命周期的不可控</p>

<p>10.如果ImageView的图片是来自网络，进行异步加载</p>

<p>11.应用开发中自定义View的时候，交互部分，千万不要写成线程不断刷新界面显示，而是根据TouchListener事件主动触发界面的更新</p>

<h3 id="androidui">三、AndroidUI优化</h3>

<p>1.layout组件化，尽量使用merge及include复用</p>

<p>2.使用styles，复用样式定义</p>

<p>3.软键盘的弹出控制，不要让其覆盖输入框</p>

<p>4.数字、字母和汉字混排占位问题：将数字和字母全角化。由于现在大多数情况下我们的输入都是半角，所以 字母和数字的占位无法确定，但是一旦全角化之后，数字、字母的占位就和一个汉字的占位相同了，这样就可以避免由于占位导致的排版问题。</p>

<p>5.英文文档排版：textview自动换行时要保持单词的完整性，解决方案是计算字符串长度，然后手动设定每一行显示多少个字母并加上‘n‘</p>

<p>6.复杂布局使用RelativeLayout</p>

<p>7.自适应屏幕，使用dp替代pix</p>

<p>8.使用android:layout_weight或者TableLayout制作等分布局</p>

<p>9.使用animation-list制作动画效果</p>

<h6 id="zhoujiyu0929">原文作者： zhoujiyu0929</h6>

<h6 id="httpmyeoecnyyz168archive5551html">原文地址： http://my.eoe.cn/yyz168/archive/5551.html</h6>

<hr />
<p>版权声明：欢迎自由转载-非商用-非衍生-保持署名 | <a href="http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh">Creative Commons BY-NC-ND 3.0</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[[转]Java 的版本历史与特性]]></title>
    <link href="http://www.inferjay.com/blog/2013/07/17/the-java-version-of-the-history-and-characteristics/"/>
    <updated>2013-07-17T15:53:00+08:00</updated>
    <id>http://www.inferjay.com/blog/2013/07/17/the-java-version-of-the-history-and-characteristics</id>
    <content type="html"><![CDATA[<p>一个比较流行的问题是，“Java下一个版本会有什么特性呢？” 。这是否是个好问题却有待商榷。在下面的内容里，我总结了至今为止的Java主要发行版中各自引入的新特性，这样做的目的是为了突出各个新特性是在哪个发行版中引入的。除了列出的特性外，每个发行版还做了很多优化和修复BUG的工作。</p>

<h3 id="java-version-se-7">Java Version SE 7</h3>

<p>开发代号是Dolphin（海豚），于2011-07-28发行。</p>

<p><img src="http://www.inferjay.com/images/notes_images/dolphin.png" alt="alt text" title="Dolphin" /></p>

<p>引入的新特性包括：</p>

<ul>
  <li>switch语句块中允许以字符串作为分支条件；</li>
  <li>在创建泛型对象时应用类型推断；</li>
  <li>在一个语句块中捕获多种异常；</li>
  <li>支持动态语言；</li>
  <li>支持try-with-resources；</li>
  <li>引入Java NIO.2开发包；</li>
  <li>数值类型可以用2进制字符串表示，并且可以在字符串表示中添加下划线；</li>
  <li>钻石型语法；</li>
  <li>null值的自动处理。</li>
</ul>

<!--more-->

<h3 id="java-version-se-6">Java Version SE 6</h3>

<p>开发代号为Mustang（野马），于2006-12-11发行。</p>

<p><img src="http://www.inferjay.com/images/notes_images/Mustang.png" alt="alt text" title="Mustang" /></p>

<p>引入的新特性包括：</p>

<ul>
  <li>支持脚本语言；</li>
  <li>引入JDBC 4.0 API；</li>
  <li>引入Java Compiler API；</li>
  <li>可插拔注解；</li>
  <li>增加对Native PKI(Public Key Infrastructure)、Java GSS(Generic Security Service)、Kerberos和LDAP(Lightweight Directory Access Protocol)的支持；</li>
  <li>继承Web Services；</li>
  <li>做了很多优化。</li>
</ul>

<h3 id="java-version-se-50">Java Version SE 5.0</h3>

<p>开发代号为Tiger（老虎），于2004-09-30发行。</p>

<p><img src="http://www.inferjay.com/images/notes_images/tiger.jpg" alt="alt text" title="Tiger" /></p>

<p>引入的新特性包括:</p>

<ul>
  <li>引入泛型；</li>
  <li>增强循环，可以使用迭代方式；</li>
  <li>自动装箱与自动拆箱；</li>
  <li>类型安全的枚举；</li>
  <li>可变参数；</li>
  <li>静态引入；</li>
  <li>元数据（注解）；</li>
  <li>引入Instrumentation。</li>
</ul>

<h3 id="j2se-version-14">J2SE Version 1.4</h3>

<p>开发代号为Merlin（隼），于2004-02-06发行（首次在JCP下发行）。</p>

<p><img src="http://www.inferjay.com/images/notes_images/merlin.jpg" alt="alt text" title="Merlin" /></p>

<p>引入的新特性包括:</p>

<ul>
  <li>XML处理；</li>
  <li>Java打印服务；</li>
  <li>引入Logging API；</li>
  <li>引入Java Web Start；</li>
  <li>引入JDBC 3.0 API；</li>
  <li>引入断言；</li>
  <li>引入Preferences API；</li>
  <li>引入链式异常处理；</li>
  <li>支持IPv6；</li>
  <li>支持正则表达式；</li>
  <li>引入Image I/O slot machine API。</li>
</ul>

<h3 id="j2se-version-13">J2SE Version 1.3</h3>

<p>开发代号为Kestrel（红隼），于2000-05-08发行。</p>

<p><img src="http://www.inferjay.com/images/notes_images/Kestrel.jpg" alt="alt text" title="Kestrel" /></p>

<p>引入的新特性包括：</p>

<ul>
  <li>引入Java Sound API；</li>
  <li>jar文件索引；</li>
  <li>对Java的各个方面都做了大量优化和增强。</li>
</ul>

<h3 id="j2se-version-12">J2SE Version 1.2</h3>

<p>开发代号为Playground（操场），于1998-12-08发行。</p>

<p>引入的新特性包括：</p>

<ul>
  <li>引入集合（Collection）框架；</li>
  <li>对字符串常量做内存映射；</li>
  <li>引入JIT（Just In Time）编译器；</li>
  <li>引入对打包的Java文件进行数字签名；</li>
  <li>引入控制授权访问系统资源的策略工具；</li>
  <li>引入JFC（Java Foundation Classes），包括Swing 1.0、拖放和Java 2D类库；</li>
  <li>引入Java 插件；</li>
  <li>在JDBC中引入可滚动结果集、BLOB、CLOB、批量更新和用户自定义类型；</li>
  <li>在Applet中添加声音支持。</li>
</ul>

<h3 id="jdk-version-11">JDK Version 1.1</h3>

<p>于1997-02-19发行。</p>

<p>引入的新特性包括：</p>

<ul>
  <li>引入JDBC（Java Database Connectivity）；</li>
  <li>支持内部类；</li>
  <li>引入Java Bean；</li>
  <li>引入RMI（Remote Method Invocation）；</li>
  <li>引入反射（仅用于内省）。</li>
</ul>

<h3 id="jdk-version-10">JDK Version 1.0</h3>

<p>开发代号为Oak（橡树），于1996-01-23发行。</p>

<p>英文原文：javapapers ，编译：ImportNew  - 曹旭东
译文地址： http://www.importnew.com/844.html</p>

<hr />
<p>版权声明：欢迎自由转载-非商用-非衍生-保持署名 | <a href="http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh">Creative Commons BY-NC-ND 3.0</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[常用开源协议收集整理]]></title>
    <link href="http://www.inferjay.com/blog/2013/06/24/open-source-licenses-are-collected/"/>
    <updated>2013-06-24T14:35:00+08:00</updated>
    <id>http://www.inferjay.com/blog/2013/06/24/open-source-licenses-are-collected</id>
    <content type="html"><![CDATA[<h4 id="section">声明:本文大部分内容摘自网络这里仅做搜集整理以备自用！！</h4>

<p>全球都在刮着开源风，开源软件在现如今的软件行业中也越来越重要了，从国外的Google code、Github、Sourceforge以及国内的Gitcafe等开源项目脱管网站就可以看出开源软件的火热程度，开源已经成为软件的发展趋势。而开源软件使用的许可协议也是层出不穷，如果不遵守这些协议规则可能会导致经济上的损失以及法律纠纷。</p>

<h4 id="section-1">目前，现有软件主要分为如下四类：</h4>

<ul>
  <li>专有软件：需要购买，然后才能使用，且只能使用该软件而不能作其他用途。如修改、分享、再发布等。</li>
  <li>共享软件：基本上就是专有软件，但你能在实际购买前试用。</li>
  <li>免费软件：你可以自由的分享和使用该软件，但你无法修改该软件，因为该软件的源代码不是公开的。</li>
  <li>开源软件/自由软件：你能够自由分享该软件与其源代码、使用该软件并可随意修改该软件源码 - 这给予了你最大的自主权。</li>
</ul>

<p>对于商业软件（专有、共享、免费软件）没什么好说的，只能使用而不允许修改及修改后销售，所以其License差别不大，然而对于开源软件，由于涉及到源代码、版权及其再发布问题，衍生出了若干Licenses，通过OSI(Open Source Initiative)组织批准的开源协议已达61种。如果要发布开源软件，最好是选择这些已被批准的开源协议。</p>

<h4 id="section-2">常见的开源协议有：</h4>
<ul>
  <li>Apache License 2.0</li>
  <li>New and Simplified BSD licenses</li>
  <li>GNU General Public License (GPL)</li>
  <li>GNU Library or “Lesser” General Public License (LGPL)</li>
  <li>MIT license</li>
  <li>Mozilla Public License 1.1 (MPL)</li>
  <li>Common Development and Distribution License</li>
  <li>Common Public License 1.0</li>
  <li>Eclipse Public License</li>
  <li>Creative Commons</li>
</ul>

<!--more-->

<h4 id="apache-license-20">Apache License 2.0</h4>

<p>Apache Licence是著名的非盈利开源组织Apache采用的协议。该协议和BSD类似，同样鼓励代码共享和尊重原作者的著作权，同样允许代码修改，再发布(作为开源或商业软件)。需要满足的条件：</p>

<ul>
  <li>需要给代码的用户一份Apache License</li>
  <li>如果你修改了代码，需要在被修改的文件中说明。</li>
  <li>在延伸的代码中（修改和有源代码衍生的代码中）需要带有原来代码中的协议，商标，专利声明和其他原来作者规定需要包含的说明。</li>
  <li>如果再发布的产品中包含一个Notice文件，则在Notice文件中需要带有Apache License。你可以在Notice中增加自己的许可，但不可以表现为对Apache License构成更改。</li>
</ul>

<p>Apache Licence也是对商业应用友好的许可。使用者也可以在需要的时候修改代码来满足需要并作为开源或商业产品发布/销售。</p>

<p><em>要点：商业软件可以使用，也可以修改使用Apache协议的代码。</em></p>

<h4 id="new-and-simplified-bsd-licenses">New and Simplified BSD licenses</h4>

<p>BSD开源协议是一个给于使用者很大自由的协议。可以自由的使用，修改源代码，也可以将修改后的代码作为开源或者专有软件再发布。当你发布使用了BSD协议的代码，或则以BSD协议代码为基础做二次开发自己的产品时，需要满足三个条件：</p>

<ul>
  <li>如果再发布的产品中包含源代码，则在源代码中必须带有原来代码中的BSD协议。</li>
  <li>如果再发布的只是二进制类库/软件，则需要在类库/软件的文档和版权声明中包含原来代码中的BSD协议。</li>
  <li>不可以用开源代码的作者/机构名字和原来产品的名字做市场推广。</li>
</ul>

<p>BSD代码鼓励代码共享，但需要尊重代码作者的著作权。BSD由于允许使用者修改和重新发布代码，也允许使用或在BSD代码上开发商业软件发布和销售，因此是对商业集成很友好的协议。而很多的公司企业在选用开源产品的时候都首选BSD协议，因为可以完全控制这些第三方的代码，在必要的时候可以修改或者二次开发。</p>

<p><em>要点：商业软件可以使用，也可以修改使用BSD协议的代码。</em></p>

<h4 id="gnu-general-public-license-gpl">GNU General Public License (GPL)</h4>

<p>GNU通用公共许可证（简称为GPL），是由自由软件基金会发行的用于计算机软件的许可证。最初由Richard Stallman为GNU计划而撰写。目前大多数的GNU程序和超过半数的自由软件使用此许可证。此许可证最新版本为“版本2”，1991年发布。GNU 宽松通用公共许可证（简称LGPL）是由GPL衍生出的许可证。我们很熟悉的Linux就是采用了GPL。</p>

<p>GPL协议和BSD、Apache License等鼓励代码重用的许可很不一样。
GPL 的出发点是代码的开源/免费使用和引用/修改/衍生代码的开源/免费使用，但不允许修改后和衍生的代码做为闭源的商业软件发布和销售。</p>

<p>GPL协议的主要内容是只要在一个软件中使用GPL协议的产品，则该软件产品必须也采用GPL协议，既必须也是开源和免费。GPL协议的产品作为一个单独的产品使用没有任何问题，还可以享受免费的优势。</p>

<p>当一个自由软件使用GPL声明时，该软件的使用者有权重新发布、修改该软件，并得到该软件的源代码；但只要使用者在其程序中使用了该自由软件，或者是使用修改后的软件，那么使用者的程序也必须公布其源代码，同时允许别人发布、修改。也就是说，使用GPL声明下的的自由软件开发出来的新软件也一定是自由软件。</p>

<p>由于GPL严格要求使用了GPL类库的软件产品必须使用GPL协议，所以商业软件就不适合采用使用GPL协议的开源代码。</p>

<p><em>要点：商业软件不能使用GPL协议的代码。</em></p>

<h4 id="gnu-library-or-lesser-general-public-license-lgpl">GNU Library or “Lesser” General Public License (LGPL)</h4>

<p>LGPL是GPL的变种，也是GNU为了得到更多的甚至是商用软件开发商的支持而提出的。与GPL的最大不同是，可以私有使用LGPL授权的自由软件，开发出来的新软件可以是私有的而不需要是自由软件。所以任何公司在使用自由软件之前应该保证在LGPL或其它GPL变种的授权下。</p>

<p>LGPL是GPL的一个为主要为类库使用设计的开源协议。和GPL要求任何使用GPL类库的的软件必须采用GPL协议不同。 LGPL允许商业软件通过类库引用(link)的方式使用LGPL类库而不需要开源商业软件的代码。</p>

<p>但是如果要修改LGPL协议的代码，则涉及修改部分的额外代码和衍生的代码都必须采用LGPL协议。因此LGPL不适合以LGPL协议代码为基础进行二次开发的商业软件。</p>

<p><em>要点：商业软件可以使用，但不能修改LGPL协议的代码。</em></p>

<h4 id="mit-license">MIT license</h4>

<p>MIT是和BSD一样宽松的许可协议,作者只想保留版权,而无任何其他的限制.也就是说,你必须在你的发行版里包含原许可协议的声明,无论你是以二进制发布的还是以源代码发布的.MIT 协议可能是几大开源协议中最宽松的一个，核心条款是：
该软件及其相关文档对所有人免费，可以任意处置，包括使用，复制，修改，合并，发表，分发，再授权，或者销售。唯一的限制是，软件中必须包含上述版 权和许可提示。</p>

<p>这意味着：</p>

<ul>
  <li>你可以自由使用，复制，修改，可以用于自己的项目。</li>
  <li>可以免费分发或用来盈利。</li>
  <li>唯一的限制是必须包含许可声明。</li>
  <li>MIT 协议是所有开源许可中最宽松的一个，除了必须包含许可声明外，再无任何限制。</li>
</ul>

<p><em>要点：商业软件可以使用，也可以修改MIT协议的代码，甚至可以出售MIT协议的代码。</em></p>

<h4 id="mozilla-public-license-11-mpl">Mozilla Public License 1.1 (MPL)</h4>

<p>MPL协议允许免费重发布、免费修改，但要求修改后的代码版权归软件的发起者。这种授权维护了商业软件的利益，，它要求基于这种软件得修改无偿贡献版权给该软件。这样，围绕该软件得所有代码得版权都集中在发起开发人得手中。但MPL是允许修改，无偿使用得。MPL软件对链接没有要求。</p>

<p><em>要点：商业软件可以使用，也可以修改MPL协议的代码，但修改后的代码版权归软件的发起者。</em></p>

<h4 id="common-development-and-distribution-license">Common Development and Distribution License</h4>

<p>CDDL（Common Development and Distribution License，通用开发与销售许可）开源协议，是MPL（Mozilla Public License）的扩展协议，它允许公共版权使用，无专利费，并提供专利保护，可集成于商业软件中，允许自行发布许可。
<em>要点：商业软件可以使用，也可以修改CDDL协议的代码。</em></p>

<h4 id="common-public-license-10">Common Public License 1.0</h4>

<p>Common许可证有一些细节性的规定值得参考:</p>

<ul>
  <li>明确了专利授权。一般的开源软件都明确源代码的版权人将自己的修改权、复制权等版权权利向公众许可，但保留署名权，而Common许可证在此基础上还明确假如源代码中含有专利权，源代码专利权人将复制、使用的专有权利向公众许可。</li>
  <li>规定可以将源代码及修改过的源代码与其他类型的不受本许可证约束的代码结合，以新产品的形式发布，只要其中经该许可证获得的源代码及修改过的源代码能按该许可证的要求发布即可。 </li>
  <li>细化了该许可证终止的情形，包括发生专利侵权诉讼。 </li>
  <li>明确了一个独立承担责任的原则，就是假如按该许可证使用源代码的使用者将获得的源代码应用于商业使用，那么他就要对在商业应用中出现的由于使用该源代码程序而产生的侵权诉讼承担完全责任。这一条规定是比较特殊的，绝大多数开源软件许可证都不这么要求。</li>
</ul>

<p><em>要点：商业软件可以使用，也可以修改Common协议的代码，但要承担代码产生的侵权责任。</em></p>

<h4 id="eclipse-public-license">Eclipse Public License</h4>

<p>EPL是一个与CPL相类似的许可证，任何扩展自Eclipse源码的代码也必须是开源的。</p>

<h4 id="creative-commons">Creative Commons</h4>

<p>Creative Commons (CC) 并非严格意义上的开源许可，它主要用于设计。Creative Commons 有多种协议，每种都提供了相应授权模式，CC 协议主要包含 4 种基本形式：</p>

<ul>
  <li>
    <p>署名权</p>

    <p>必须为原始作者署名，然后才可以修改，分发，复制。</p>
  </li>
  <li>
    <p>保持一致</p>

    <p>作品同样可以在 CC 协议基础上修改，分发，复制。</p>
  </li>
  <li>
    <p>非商业</p>

    <p>作品可以被修改，分发，复制，但不能用于商业用途。但商业的定义有些模糊，比如，有的人认为非商业用途指的是不能销售，有的认为是甚至不能放在有广告的网 站，也有人认为非商业的意思是非盈利。</p>
  </li>
  <li>
    <p>不能衍生新作品</p>

    <p>你可以复制，分发，但不能修改，也不能以此为基础创作自己的作品。</p>
  </li>
</ul>

<p>这些许可形式可以结合起来用，其中最严厉的组合是“署名，非商用，不能衍生新作品”，意味着，你可以分享作品，但不能改动或以此盈利，而且必须为原 作者署名。在这种许可模式下，原始作者对作品还拥有完全的控制权，而最宽松的组合是“署名”，意味着，只要为原始作者署名了，就可以自由处置。</p>

<h4 id="section-3">总结：</h4>

<p>目前开源软件比较常使用前5中协议，cc在互联网是也是比较流行的虽然它并非严格意义上的开源协议，并且多见于一些个人博客网站的文章授权声明。
按照使用条件的不同，开源软件许可证可以分为三类（严苛程度递减）</p>

<ul>
  <li>
    <p>使用该开源软件的代码再散布（redistribute）时，源码也必须以相同许可证公开。</p>

    <p>代表许可类型：GPL， AGPL　　</p>
  </li>
  <li>
    <p>使用该开源软件的代码并且对开源代码有所修改后再散布时，源码必须以相同许可证公开。</p>

    <p>代表许可类型：LGPL， CPL，CDDL， CPL，MPL等　　</p>
  </li>
  <li>
    <p>使用该开源软件的代码（包括修改）再散布（redistribute）时，没有特殊限制，只需要明记许可。</p>

    <p>代表许可类型：ASL， BSD，MIT等</p>
  </li>
</ul>

<h5 id="section-4">参考资料</h5>
<p><a href="http://www.cnblogs.com/magic_evan/archive/2011/02/12/1952528.html">http://www.cnblogs.com/magic_evan/archive/2011/02/12/1952528.html</a>
<a href="http://blog.csdn.net/zhulinu/article/details/7419068">http://blog.csdn.net/zhulinu/article/details/7419068</a></p>

<hr />
<p>版权声明：欢迎自由转载-非商用-非衍生-保持署名 | <a href="http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh">Creative Commons BY-NC-ND 3.0</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[对Octopress做一些个性化配置]]></title>
    <link href="http://www.inferjay.com/blog/2013/05/10/octopress-config/"/>
    <updated>2013-05-10T20:11:00+08:00</updated>
    <id>http://www.inferjay.com/blog/2013/05/10/octopress-config</id>
    <content type="html"><![CDATA[<h3 id="section">首页只显示部分正文</h3>

<p>在文章任意位置加入</p>

<pre><code>&lt;!--more--&gt;
</code></pre>

<p>这样首页只显示一部分正文，并在每篇文章底下加一个<code>Read on</code>超链接。</p>

<p>然后在<code>_config.yml</code>文件中修改<code>excerpt_link</code>的值<code>Rade on</code>为以你想要的，比如<code>More</code></p>

<h3 id="blog">设置使用指定的编辑器自动打开新建的blog</h3>
<p>每次用<code>rake　new_post</code>新建一篇blog后都要跑到<code>/source/_posts</code>找到新建的blog才能开始写blog，有木有赶脚很不爽，要是每次建完后自动用支持Markdown语法的编辑器打开那该多爽啊，google了一下还这有方法，试了式太爽了，Mark一下以免以后忘记了～～～</p>

<p>打开<code>Rakefile</code>文件，找到<code>## -- Misc Configs -- ##</code>这段注释，然后在<code>server_port</code>下面加入<code>editor = "open"</code></p>

<!--more-->
<p>######如图所示：
<img src="http://www.inferjay.com/images/notes_images/set_open_editer.png" alt="alt text" title="set_open_editer" /> </p>

<p>然后再找到<code>new_post</code>命令，在末尾加入如下代码：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class=""><span class="line">  if #{editor}
</span><span class="line">    system "#{editor} #{filename}"
</span><span class="line">  end
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>######如图所示：
<img src="http://www.inferjay.com/images/notes_images/set_open_editer_code.png" alt="alt text" title="set_open_editer_code" /> </p>

<p>这样每次用<code>rake　new_post</code>新建一篇blog的时候就会自动用指定的编辑器打开直接写blog了～～～</p>

<h3 id="blog-1">设置自动打开浏览器预览生成的blog</h3>

<p>打开<code>Rakefile</code>文件，找到<code>task :preview do</code>这段代码，在其中加入</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
</pre></td><td class="code"><pre><code class=""><span class="line">system "sleep 2; open http://localhost:#{server_port}/"
</span></code></pre></td></tr></table></div></figure></notextile></div>
<p>######如图所示：
<img src="http://www.inferjay.com/images/notes_images/set_auto_preview.png" alt="alt text" title="set_auto_preview" /> </p>

<h4 id="section-1">未完待续～～～</h4>

<hr />
<p>版权声明：欢迎自由转载-非商用-非衍生-保持署名 | <a href="http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh">Creative Commons BY-NC-ND 3.0</a></p>
]]></content>
  </entry>
  
</feed>
