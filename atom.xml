<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[脉脉不得语的技术博客]]></title>
  <link href="http://www.inferjay.com/atom.xml" rel="self"/>
  <link href="http://www.inferjay.com/"/>
  <updated>2015-01-12T10:09:50+08:00</updated>
  <id>http://www.inferjay.com/</id>
  <author>
    <name><![CDATA[inferjay]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Android开发技术周报 Issue#15]]></title>
    <link href="http://www.inferjay.com/blog/2015/01/12/android-dev-weekly-issue-15/"/>
    <updated>2015-01-12T09:59:10+08:00</updated>
    <id>http://www.inferjay.com/blog/2015/01/12/android-dev-weekly-issue-15</id>
    <content type="html"><![CDATA[<h3 id="section">教程</h3>

<ol>
  <li>
    <p><a href="http://stormzhang.com/devtools/2015/01/05/android-studio-tutorial5/">Android Studio系列教程五–Gradle命令详解与导入第三方包</a></p>

    <p>Android Studio + Gradle的组合用起来非常方便，很多第三方开源项目也早都迁移到了Studio，为此今天就来介绍下查看、编译并导入第三方开源项目的方法。</p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/qiujuer/article/details/42471119">打造极致Material Design动画风格Button</a></p>

    <p>在我的文章中曾经有两篇关于Material Design风格的按钮实现。在第一章中只是简单的实现了动画的波纹效果，而在第二篇中对此进行了一定的扩充与优化，最后实现可以自动移动到中心位置的动画；虽然两者都可用，但是在我的使用中却发现了一定的问题，如有些位置点击会出现波纹速度的运算上的问题。</p>
  </li>
  <li>
    <p><a href="http://www.osforce.cn/group/9/thread/1065?fr=weibo&amp;mu=140910XRNWcD">Android开发-API指南-AIDL</a></p>

    <p>Android 接口定义语言 AIDL（Android Interface Definition Language）与其他已有的 IDL 很类似。 客户端和服务端可以通过由它定义的编程接口来达成共识，以便通过进程间通讯（IPC）完成相互通讯。 在 Android 系统中，通常一个进程不允许直接访问另一个进程的内存。 因此为了能够实现对话，进程需要把对象分解为操作系统可以识别的原生数据，在跨越进程边界后再组装起来。 实现组装的代码非常枯燥无趣，因此 Android 通过 AIDL 可有助于完成这一过程。</p>
  </li>
  <li>
    <p><a href="http://www.osforce.cn/group/9/thread/1053?fr=weibo&amp;mu=140910XRNWcD">Android Proguard 详解</a></p>

    <p>Java代码是非常容易反编译的。为了很好的保护Java源代码，我们往往会对编译好的class文件进行混淆处理。ProGuard是一个混淆代码的开源项目。它的主要作用就是混淆，当然它还能对字节码进行缩减体积、优化等，但那些对于我们来说都算是次要的功能。官网网址是：http://proguard.sourceforge.net/</p>
  </li>
</ol>

<!--more-->

<ol>
  <li>
    <p><a href="http://www.importnew.com/14347.html">设计模式问答2</a></p>

    <p>这是设计模式问答1的连载。在这个系列，我们将覆盖到解释器、迭代器、调停者、备忘录和观察者模式。</p>
  </li>
  <li>
    <p><a href="http://www.importnew.com/14410.html">Java不同压缩算法的性能比较</a></p>

    <p>本文将会对常用的几个压缩算法的性能作一下比较。结果表明，某些算法在极端苛刻的CPU限制下仍能正常工作。文中进行比较的算有：JDK GZIP、JDK deflate、LZ4压缩算法的Java实现和Snappy。</p>
  </li>
  <li>
    <p><a href="http://www.programmer.com.cn/15036/">Android软件安全开发实践（上）</a></p>

    <p>Android开发是当前最火的话题之一，但很少有人讨论这个领域的安全问题。本系列将分两期，探讨Android开发中常见的安全隐患和解决方案。第一期将从数据存储、网络通信、密码和认证策略这三个角度，带你走上Android软件安全开发实践之旅。</p>
  </li>
  <li>
    <p><a href="http://www.programmer.com.cn/15273/">Android软件安全开发实践（下）</a></p>

    <p>在《Android软件安全开发实践（上）》中我们讨论了数据存储、网络通信、密码和认证策略等安全问题和解决方案，本期将继续从组件间通信、数据验证和保全保护等方面来实践Android软件安全开发之路。</p>
  </li>
  <li>
    <p><a href="http://www.freebuf.com/tools/55392.html">深度：针对超强手机木马DenDroid的分析与测试</a></p>

    <p>赛门铁克的研究人员就在手机移动领域发现了一种新的名为Dendroid木马，可以轻松实现对手机远程恶意操控。而在此前赛门铁克发现了一个名为AndroidRAT的android远程管理软件被认为是第一个恶意绑定软件。然而这款最新发现的运行在http上的Dendroid具有更强功能。</p>
  </li>
  <li>
    <p><a href="http://www.importnew.com/14260.html">解析IntelliJ IDEA内部设计</a></p>

    <p>IntelliJ IDEA第一版发布于2001年1月，这是第一款集成了高级代码导航和代码重构功能的Java IDE。2009年，JetBrains开源了其社区版。从那时开始，就新出现了许多基于其社区版的IDE，如Google的Android Studio。本文使用JArchitect作为工具，深入了解Intellij IDEA社区版，探索其中使用的一些内部设计决策。</p>
  </li>
</ol>

<h3 id="section-1">代码&amp;开源库</h3>

<ol>
  <li>
    <p><a href="https://github.com/Jhuster/ImageCropper">ImageCropper</a></p>

    <p>一个Android图片剪裁库,特性:1.支持通过手势移动和缩放剪裁窗口, 2支持固定剪裁窗口大小、固定窗口的长宽比率, 3.支持设置最大的窗口长和宽, 4.支持剪裁图片的旋转。</p>
  </li>
  <li>
    <p><a href="https://github.com/JakeWharton/Telecine">Telecine</a></p>

    <p>JakeWharton大神开发的一款录屏App。</p>
  </li>
  <li>
    <p><a href="https://github.com/ismoli/DynamicRecyclerView">DynamicRecyclerView</a></p>

    <p>对RecyclerView进行了扩展，天就拖拽排序功能。</p>
  </li>
  <li>
    <p><a href="https://github.com/tajchert/BusWear">BusWear</a></p>

    <p>BusWear是一个简单的支持Android Wear设备的EventBus（事件总线）库。仅需要一行代码就可获得异步的事件总线（synchronized event buses）在Wear和移动平台之间。</p>

    <p><img src="https://raw.githubusercontent.com/tajchert/BusWear/master/docs/diagram_simple.png" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/TonicArtos/SuperSLiM">SuperSLiM</a></p>

    <p>SuperSLiM为RecyclerView提供了一个布局管理器允许您创建垂直列表和每节标题和布局。 </p>

    <p><img src="https://camo.githubusercontent.com/3a55cfd0bbfd28e72aa875f4905cc23cc37a87f4/68747470733a2f2f342e62702e626c6f6773706f742e636f6d2f2d657034364a4b70476138342f564a685831706c575743492f4141414141414141585a592f394131417272563361336b2f73313630302f5375706572534c694d2d44656d6f2d736d616c6c2e676966" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/AChep/Header2ActionBar">Header2ActionBar</a></p>

    <p>Header2ActionBar是一个实现了像Play Music and Google Newspaper应用中褪色（fading）Action Bar效果的Action Bar。</p>
  </li>
  <li>
    <p><a href="https://github.com/wasabeef/recyclerview-animators">recyclerview-animators</a></p>

    <p>一个方便你给RecyclerView items添加item动画的库。</p>
  </li>
  <li>
    <p><a href="https://github.com/Raizlabs/Singleton">Singleton</a></p>

    <p>一个非常简洁的库，可以帮助你方便将一个对象存储在磁盘。</p>
  </li>
  <li>
    <p><a href="https://github.com/JoanZapata/android-asyncservice">android-asyncservice</a></p>

    <p>AsyncService使用注释来缩短开始异步长时间运行的任务所需的代码,并返回结果。</p>
  </li>
  <li>
    <p><a href="https://github.com/sakebook/Reachability">Reachability</a></p>

    <p>类似于iPhone 6 &amp; 6 Plus的下拉悬停从而方便你操作屏幕的顶部。</p>

    <p><img src="https://raw.githubusercontent.com/sakebook/Reachability/master/images/demo.gif" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/twotoasters/SectionCursorAdapter">SectionCursorAdapter</a></p>

    <p>对CursorAdapter进行了扩展，添加sections和快速滚动滑块。</p>

    <p><img src="https://raw.githubusercontent.com/twotoasters/SectionCursorAdapter/master/screenshots/sections.png" alt="image" /><img src="https://raw.githubusercontent.com/twotoasters/SectionCursorAdapter/master/screenshots/dialog.png" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/phishman3579/android-quick-response-code">android-quick-response-code</a></p>

    <p>Android QR码编码解码库。</p>
  </li>
</ol>

<h3 id="section-2">工具</h3>

<ol>
  <li>
    <p><a href="https://github.com/tmiyamon/gradle-mdicons">gradle-mdicons</a></p>

    <p>一个帮助你管理google’s official material design图标的插件。</p>

    <p><img src="https://raw.githubusercontent.com/tmiyamon/gradle-mdicons/master/gradle-mdicons-result.png" alt="image" /></p>
  </li>
</ol>

<h3 id="section-3">视频</h3>

<ol>
  <li>
    <p><a href="http://i.youku.com/chinagdg">ChinaGDG 视频中心</a></p>

    <p>ChinaGDG 视频中心。第一时间同步 Google Developers 的各种技术视频，如 Android、Web 等技术，方便国内开发者学习。视频已包含英文字幕，部分视频还有来自国内志愿者提供的中文翻译字幕。</p>
  </li>
  <li>
    <p><a href="http://t.cn/RZJaz5I">Android性能模式</a></p>

    <p>老美新年放假归来，官方更新了16集与Android性能优化相关的视频《 Android Performance Patterns》视频已运至墙内，主题为“New year, new initiative” 详细查看<a href="http://t.cn/RZt1F4S">G+社区</a> 和 <a href="http://www.infoq.com/cn/news/2015/01/google-android-performance?utm_campaign=infoq_content&amp;utm_source=infoq&amp;utm_medium=feed&amp;utm_term=global&amp;utm_reader=feedly#0-tsina-1-92503-397232819ff9a47a7b7e80a40613cfe1">Google探讨Android性能模式的16个视频总结</a></p>
  </li>
  <li>
    <p><a href="http://www.imooc.com/view/237?from=itblog">打造Android流式布局和热门标签</a></p>

    <p>本课程将带大家通过自定义ViewGroup实现流式布局，课程详细介绍了自定义控件需要掌握的步骤，每个步骤相关方法的作用、调用时机的讲解以及编写。在完成自定义ViewGroup编写后，实战应用于热门标签（包括动态添加）的显示。</p>
  </li>
</ol>

<h3 id="section-4">设计</h3>

<h3 id="section-5">工具</h3>

<ol>
  <li>
    <p><a href="https://github.com/abynim/SketchSquares">SketchSquares</a></p>

    <p>一个将Sketch的layers自动替换为Instagram照片的插件。</p>
  </li>
</ol>

<hr />
<p>版权声明：欢迎自由转载-非商用-非衍生-保持署名 | <a href="http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh">Creative Commons BY-NC-ND 3.0</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android开发周报 Issue#14]]></title>
    <link href="http://www.inferjay.com/blog/2015/01/05/android-dev-weekly-issue-14/"/>
    <updated>2015-01-05T23:41:36+08:00</updated>
    <id>http://www.inferjay.com/blog/2015/01/05/android-dev-weekly-issue-14</id>
    <content type="html"><![CDATA[<h3 id="section">新闻</h3>

<ol>
  <li>
    <p><a href="http://www.infoq.com/cn/news/2015/01/java-date-format-with-caution">慎用Java日期格式化</a></p>

    <p>这条留言实际指向了Twitter上的一个帖子，这个帖子提醒大家，如果使用了YYYY的格式符来格式化日期，那么就有可能用错格式了。Reddit的一位读者解释说，Twitter由于误用格式符，把当天的日期变成了2015年12月的某天。</p>
  </li>
</ol>

<h3 id="section-1">教程</h3>

<ol>
  <li>
    <p><a href="http://blog.csdn.net/luoshengyang/article/details/42072975">ART运行时垃圾收集机制简要介绍和学习计划</a></p>

    <p>为了学习ART运行时的垃圾收集机制，我们先把Dalvik虚拟机的垃圾收集机制研究了一遍。这是因为两者都使用到了Mark-Sweep算法，因此它们在概念上有很多一致的地方。然而在实现上，Dalvik虚拟机的垃圾收集机制要简单一些。这样我们就可以先从简单的Dalvik虚拟机垃圾收集机制入手，然后再逐步深入地学习复杂的ART运行时垃圾收集机制。</p>
  </li>
  <li>
    <p><a href="http://www.jianshu.com/p/6c2b7d261e1a">Material Design in Action — 猿题库</a></p>

    <p>猿题库很早之前就发布了 Android 版本的客户端，但猿题库的联合创始人，郭常圳 先生，并不认同 Android Design （或者现在的 Material Design），而且认为应用程序的设计规范，应当由开发商来规定。然而当我试用猿题库的时候发现，这个应用对其进行 Material Design 的适配，其实并不困难。因此就有了对其进行重新设计的念头。</p>
  </li>
  <li>
    <p><a href="http://blog.jobbole.com/78995/">正确使用Android性能分析工具——TraceView</a></p>

    <p>最近公司app中有些列表在滑动的时候会有卡顿现象，我就开始着手解决这些问题，解决问题之前首先要分析列表滑动的性能瓶颈在什么地方。因为之前不会正确使用TraceView这个工具，主要是看不懂TraceView界面下方数据指标的值代表什么意思…以前我用StopWatch类来分析性能，现在觉得弱爆了…不过有些地方StopWatch工具类还是很简单好用的~</p>
  </li>
</ol>

<!--more-->

<ol>
  <li>
    <p><a href="http://testerhome.com/topics/1756">Gradle 中的 task 依赖</a></p>

    <p>文章讲解了如何自定义Gradle的task，以及怎样定义task之间的依赖关系。</p>
  </li>
  <li>
    <p><a href="http://www.lightskystreet.com/2014/12/15/viewpager-anim/">动画系列 - ViewPger动画</a></p>

    <p>本篇文章介绍的ViewPager动画，可以分为两类，第一类是针对于ViewPager的界面滑动动画(这个是PageTransformer的真正用途)，分析并比较了AndroidImageSlider和JazzyViewPager两种实现，第二类是对ViewPager中的内容进行动画处理，这个是这个是PageTransformer的巧妙应用，处理好了可以达到很棒的交互效果，示例是Yahoo天气的视差效果。</p>
  </li>
  <li>
    <p><a href="http://www.csdn.net/article/2014-12-30/2823366-Locate-Android-NDK">如何定位Android NDK开发中遇到的错误</a></p>

    <p>Android NDK中的错误定位对很多开发者来说是一件头疼的事，本文通过一个Demo程序详细讲解了NDK的错误是如何产生的，以及如何通过命令行工具定位NDK的问题所在。</p>
  </li>
  <li>
    <p><a href="http://www.cnblogs.com/sunzn/archive/2013/05/10/3064129.html">Android 编程下 Touch 事件的分发和消费机制</a></p>

    <p>Android 中与 Touch 事件相关的方法包括：dispatchTouchEvent(MotionEvent ev)、onInterceptTouchEvent(MotionEvent ev)、onTouchEvent(MotionEvent ev)；能够响应这些方法的控件包括：ViewGroup、View、Activity。</p>
  </li>
  <li>
    <p><a href="http://weibo.com/p/1001603793195556321741">Android源码下载和编译总结</a></p>

    <p>前几天常用的笔记本电脑挂了，要拿去维修，于是就准备用另一台备用电脑来重新下载和编译一下Android源码，以便工作研究之用。鉴于最近一直都有人问下载和编译Android源码的问题，并且我上一次写Android源码编译的文章已经是2011年的事情，于是就趁这个机会写篇文章总结一下。</p>
  </li>
</ol>

<h3 id="section-2">代码&amp;开源库</h3>

<ol>
  <li>
    <p><a href="https://github.com/wasabeef/awesome-android-ui">awesome-android-ui</a></p>

    <p>一些 Android UI/UX 库的集合列表。</p>
  </li>
  <li>
    <p><a href="https://github.com/nhachicha/android-native-dependencies">android-native-dependencies</a></p>

    <p>一个解析和下载Android native 依赖的Gradle插件。</p>
  </li>
  <li>
    <p><a href="https://github.com/xiprox/ErrorView">ErrorView</a></p>

    <p>一个用来显示错误信息的自定义View，包含图标、主标题、自标题和重试按钮。</p>

    <p><img src="https://raw.githubusercontent.com/xiprox/ErrorView/master/graphics/screenshots/ss_01.png" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/wangjiegulu/DraggableFlagView">DraggableFlagView</a></p>

    <p>可拖拽的红点，（仿新版QQ，tab下面拖拽标记为已读的效果），拖拽一定的距离可以消失回调。</p>
  </li>
</ol>

<h3 id="section-3">工具</h3>

<ol>
  <li>
    <p><a href="https://hyperfox.org/">Hyperfox</a></p>

    <p>一个用Go 语言写的强悍的抓包工具！可以抓取https协议的！</p>

    <p><img src="https://hyperfox.org/images/hyperfox-diagram.png" alt="image" /></p>
  </li>
</ol>

<h3 id="section-4">设计</h3>

<h3 id="section-5">教程</h3>

<ol>
  <li>
    <p><a href="http://www.tuyiyi.com/w/36011.html">大屏手机时代，如何重塑界面交互</a></p>

    <p>这是一个大屏手机的时代。强调这件事情的意义在于，这已经成为事实。Medium上存在一份个人统计。在过去7年，新上市的手机屏幕尺寸越来越大。</p>
  </li>
</ol>

<hr />
<p>版权声明：欢迎自由转载-非商用-非衍生-保持署名 | <a href="http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh">Creative Commons BY-NC-ND 3.0</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android开发周报 Issue#13]]></title>
    <link href="http://www.inferjay.com/blog/2014/12/29/android-dev-weekly-issue-13/"/>
    <updated>2014-12-29T10:18:59+08:00</updated>
    <id>http://www.inferjay.com/blog/2014/12/29/android-dev-weekly-issue-13</id>
    <content type="html"><![CDATA[<h3 id="section">新闻</h3>
<ol>
  <li>
    <p><a href="http://www.infoq.com/cn/news/2014/12/oracle-java-jar-package">Oracle开始从Java运行时中移除JAR包</a></p>

    <p>早在2012年8月，在Java平台首席架构师Mark Reinhold宣布<a href="http://openjdk.java.net/projects/jigsaw/">模块化项目Jigsaw</a>之后不久，<a href="http://openjdk.java.net/jeps/162">JEP 162</a>这一题为“准备模块化”的提案就指出，在Jigsaw项目中为模块化系统开发的代码不会集成到JDK 8中。那次延期直接将模块化支持推迟到JDK 9，最早也得到2016年。</p>
  </li>
  <li>
    <p><a href="http://www.eoeandroid.com/thread-558758-1-1.html">android5.0让位，Android 6.0曝光这是神马情况？</a></p>

    <p>　Android 5.0刚和我们见面没多久，下一代操作系统Android 6.0就曝光了。外媒报道称，谷歌另一个开发小组已经着手进行一款代号为“M”的系统的研发工作，而这个“M”很有可能就是Android 6.0的代号。据猜测，Android 6.0最主要的变化将会是优化车载表现，可直接安装在汽车当中，这样用户无需智能手机即可直接控制汽车。</p>
  </li>
</ol>

<h3 id="section-1">教程</h3>

<ol>
  <li>
    <p><a href="http://www.cnblogs.com/ct2011/p/4183553.html">将Eclipse代码导入到AndroidStudio的两种方式</a></p>

    <p>说到使用AndroidStudio，除了新建的项目，我们都会面临的问题是原先Eclipse的代码该怎么导入到AndroidStudio中使用。Google为了让我们更加方便的使用AndroidStudio，提供了两种导入Eclipse代码的方式：一种兼容Eclipse，一种是全新的Android Gradle Project.</p>
  </li>
  <li>
    <p><a href="http://www.importnew.com/14227.html">Java 注解指导手册 – 终极向导</a></p>

    <p>在这篇文章中我们将阐述什么是Java注解，它们如何工作，怎么使用它们。我们将揭开Java注解的面纱，包括内建注解或称元注解，还将讨论Java8中与之相关的的新特性。最后，我们将实现自定义的注解，编写一个使用注解的处理程序（消费器），它通过java反射使用注解。</p>
  </li>
  <li>
    <p><a href="http://blog.jobbole.com/30940/">缓存、缓存算法和缓存框架简介</a></p>

    <p>我们都听过 cache，当你问他们是什么是缓存的时候，他们会给你一个完美的答案，可是他们不知道缓存是怎么构建的，或者没有告诉你应该采用什么标准去选择缓存框架。在这篇文章，我们会去讨论缓存，缓存算法，缓存框架以及哪个缓存框架会更好。</p>
  </li>
</ol>

<!--more-->

<ol>
  <li>
    <p><a href="http://www.infoq.com/cn/news/2014/12/qq-mobile-practice">手机QQ的移动化实践之路</a></p>

    <p>手机QQ的移动化实践之路】在刚刚结束的AS北京上，腾讯即时通讯平台部技术总监范瑞彬做了题为《手机QQ的移动化实践之路》的演讲，从移动环境的特点、如何做好接入、架构设计理念三个方面分享了手Q一路走来的诸多经验。演讲PPT下载：<a href="http://pan.baidu.com/s/1mgIDMtU">http://pan.baidu.com/s/1mgIDMtU</a></p>
  </li>
  <li>
    <p><a href="http://www.infoq.com/cn/news/2014/12/taobao-app-evolution">手机淘宝构架演化实践</a></p>

    <p>阿里心石：手机淘宝构架演化实践】在本届ArchSummit中，来自阿里无线事业部的高级专家李敏（花名心石 @allblue_华丽地低调 ）与我们分享了《手机淘宝架构演化实践》，畅谈阿里巴巴无线从开始之初到成为日活上亿级别电商应用技术变迁和积累。演讲PPT下载：<a href="http://pan.baidu.com/s/1kTgMfMv">http://pan.baidu.com/s/1kTgMfMv</a></p>
  </li>
  <li>
    <p><a href="http://www.testerhome.com/topics/1718">Gradle 学习专辑</a></p>

    <p>该学习专辑包含：gradle 初步构建（一）、Java Project Gradle Emma、Android Project Gradle jacoco、Android Gradle Espresso tests、自由的使用 gradle 构建你的应用、Groovy 初探（一）、gradle 集成修改 Android Manifest.xml 打多个包实践和Gradle 编译交互小技巧等，并且还在持续更新中。</p>
  </li>
  <li>
    <p><a href="http://tech.glowing.com/cn/dai-ma-gui-fan-he-androidxiang-mu-zhong-de-xie-ke-yong-gong-ju/">代码规范和Android项目中的一些可用工具</a></p>

    <p>这里主要讲一下关于代码规范的相关问题，和在Android项目中如何利用一些工具进行规范和检查。代码规范不是一个Android项目特有的问题，所以前部分内容是不单针对Android的。</p>
  </li>
  <li>
    <p><a href="http://stormzhang.gitcafe.com/devtools/2014/12/18/android-studio-tutorial4/">Android Studio系列教程四–Gradle基础</a></p>

    <p><a href="http://weibo.com/zhangqi8">googdev</a>结合Stduio 1.0正式版与最新的Gradle语法通过自己的开源项目 <a href="https://github.com/stormzhang/9GAG">9GAG</a> 讲解了Gradle相关的知识，后续会介绍一种我常用的快速方便的编译查看第三方开源项目的方法，如何导入Android Studio，Gradle常用基本命令，多渠道打包配置等。</p>
  </li>
  <li>
    <p><a href="http://top.jobbole.com/17733/">每个程序员至少阅读两次的 10 篇技术论文</a></p>

    <p>这10篇论文包括：编程语言中的基本概念、为什么函数式编程重要、计算机编程的公理基础、分布式系统中的时间、时钟和事件顺序、理解类型、数据抽象和多态、符号表达式的递归函数，及其机器计算等。</p>
  </li>
</ol>

<h3 id="section-2">代码&amp;开源库</h3>

<ol>
  <li>
    <p><a href="https://github.com/oli107/material-range-bar">MaterialRangeBar</a></p>

    <p>Android widget for selecting a range of values.</p>
  </li>
  <li>
    <p><a href="https://github.com/StanKocken/SVG2Drawable">SVG2Drawable</a></p>

    <p>Use a jar executable to create a Drawable class to display a SVG on Android.</p>
  </li>
  <li>
    <p><a href="https://github.com/kageiit/gradle-robojava-plugin">gradle-robojava-plugin</a></p>

    <p>Gradle plugin to integrate Robolectric tests into Android Studio。</p>
  </li>
  <li>
    <p><a href="https://github.com/westlinkin/AndroidLocalizationer">AndroidLocalizationer</a></p>

    <p>This is a Android Studio/ IntelliJ IDEA plugin to localize your Android app, translate your string resources automactically. <a href="https://plugins.jetbrains.com/plugin/7629">https://plugins.jetbrains.com/plugin/7629</a></p>
  </li>
  <li>
    <p><a href="https://github.com/telly/MrVector">MrVector</a></p>

    <p>AKA VectorDrawableCompat: A 14+ backport of VectorDrawable.</p>
  </li>
  <li>
    <p><a href="https://github.com/frogermcs/HelloMultidex">HelloMultidex</a></p>

    <p>Example project for multi-dex project in Android.</p>
  </li>
  <li>
    <p><a href="https://github.com/jasonpolites/gesture-imageview">gesture-imageview</a></p>

    <p>Implements pinch-zoom, rotate, pan as an ImageView for Android 2.1+.</p>
  </li>
  <li>
    <p><a href="https://github.com/nispok/slidingtabs">slidingtabs</a></p>

    <p>Gradle port of Google’s SlidingTabLayout to display a custom ViewPager title strip.</p>
  </li>
  <li>
    <p><a href="https://github.com/Malinskiy/SuperRecyclerView">SuperRecyclerView</a></p>

    <p>Pumped up RecyclerView.This is an attempt to make RecyclerView easier to use.</p>

    <p>Features built in:</p>

    <ul>
      <li>ProgressBar while adapter hasn’t been set</li>
      <li>EmptyView if adapter is empty</li>
      <li>SwipeRefreshLayout (Google’s one)</li>
      <li>Infinite scrolling, when you reach the X last item, load more of them.</li>
      <li>Swipe To Dismiss</li>
      <li>Sticky headers (via <a href="https://github.com/eowise/recyclerview-stickyheaders">Eowise</a>, see sample)</li>
    </ul>
  </li>
  <li>
    <p><a href="https://github.com/aicaprio/CurtainView">CurtainView</a></p>

    <p>An android view,which can layer on any gravity for swiping.</p>
  </li>
</ol>

<h3 id="section-3">工具</h3>

<ol>
  <li>
    <p>国内几个Android SDK镜像</p>

    <p>大连东软信息学院镜像服务器的地址: <code>http://mirrors.neusoft.edu.cn</code> 端口：80</p>

    <pre><code>北京化工大学镜像服务器的地址: 
1. IPv4: `http://ubuntu.buct.edu.cn/` 端口：80
2. IPv4: `http://ubuntu.buct.cn/`   端口：80
3. IPv6: `http://ubuntu.buct6.edu.cn/`  端口：80
</code></pre>

    <p>上海GDG镜像服务器地址:<code>http://sdk.gdgshanghai.com </code>  端口：8000</p>

    <p><strong>使用方法</strong>：</p>

    <ol>
      <li>启动 Android SDK Manager ，打开主界面，依次选择『<strong>Tools</strong>』、『<strong>Options…</strong>』，弹出『<strong>Android SDK Manager - Settings</strong>』窗口；</li>
      <li>在『<strong>Android SDK Manager - Settings</strong>』窗口中，在『<strong>HTTP Proxy Server」和「HTTP Proxy Port</strong>』输入框内填入上面镜像服务器地址和端口，并且选中『<strong>Force https://… sources to be fetched using http://…</strong>』复选框。设置完成后单击『<strong>Close</strong>』按钮关闭『<strong>Android SDK Manager - Settings</strong>』窗口返回到主界面；</li>
      <li>依次选择『<strong>Packages</strong>』、『<strong>Reload</strong>』。</li>
    </ol>
  </li>
  <li>
    <p><a href="https://github.com/mcxiaoke/gradle-packer-plugin">gradle-packer-plugin Android 多渠道打包工具</a></p>

    <p>gradle-packer-plugin 是Android多渠道打包工具Gradle插件，可方便的于自动化构建系统集成，通过很少的配置可实现如下功能 ：</p>

    <ul>
      <li>支持自动替换AndroidManifest文件中的meta-data字段实现多渠道打包</li>
      <li>支持自定义多渠道打包输出的存放目录和最终APK文件名</li>
      <li>支持自动修改versionName中的build版本号，实现版本号自动增长</li>
    </ul>
  </li>
  <li>
    <p><a href="https://gitter.im">Gitter.im</a></p>

    <p>Chat, for GitHub.</p>

    <p><img src="http://ww4.sinaimg.cn/bmiddle/005GSHYzjw1eniqp77z75j31kw0w74ii.jpg" alt="image" /></p>
  </li>
</ol>

<h3 id="section-4">视频</h3>

<ol>
  <li><a href="http://v.youku.com/v_show/id_XNTMzMjYzMzM2.html">阿里技术沙龙第十六期《android插件化及动态部署—ATLAS 》伯奎</a></li>
</ol>

<h3 id="section-5">设计</h3>

<h3 id="section-6">教程</h3>

<ol>
  <li>
    <p><a href="http://zhuanlan.zhihu.com/rijing/19845226">Sketch 制作扁平图标</a></p>

    <p>用Sketch一步一步教你制作扁平图标，步骤很详细</p>
  </li>
  <li>
    <p><a href="http://leonpd.lofter.com/post/20f397_4cb74d1">动效软件 Form 教程：概览与基础 patch 介绍</a></p>

    <p>都说产品设计师的设计可以用 Axure + Sketch + Origami三者联动，完成原型、视觉和动效的一条龙工作，前一段时间也抽空学习了一下 Quartz Composer（以下简称 QC） + Origami，虽然有一定的上手难度，但是确实能够做出非常逼真的效果。</p>
  </li>
</ol>

<hr />
<p>版权声明：欢迎自由转载-非商用-非衍生-保持署名 | <a href="http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh">Creative Commons BY-NC-ND 3.0</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android Studio 自动更新失败解决办法]]></title>
    <link href="http://www.inferjay.com/blog/2014/12/26/update-android-studio-fail/"/>
    <updated>2014-12-26T12:53:00+08:00</updated>
    <id>http://www.inferjay.com/blog/2014/12/26/update-android-studio-fail</id>
    <content type="html"><![CDATA[<p>昨天在G+中看到Android Studio又有更新了就心血来潮想去更新体验一下，可是无论我怎么点Check Update却一直提示<code>Connection failed. Please check your network connection and try again</code>，开始以为是由于G*W在捣乱，但是打开VPN后还是无法更新，然后开始Google了一下找到了下面的解决办法。</p>

<p><img src="http://www.inferjay.com/images/notes_images/android-studio-update-error.png" alt="image" title="android-studio-update-error" /></p>

<h3 id="mac-osx">Mac OSX</h3>
<p>首先打开<code>Finder</code>在左边选择<code>Application</code>目录，在右边找到<code>Android Studio.app</code>,然后右击选择“显示包内容”如下图：</p>

<p><img src="http://www.inferjay.com/images/notes_images/android_studio_in_finder.png" alt="alt text" title="android_studio_in_finder" /></p>

<!--More-->

<p>然后找到 <code>Contents/bin/</code> 目录下的 <code>.vmoptions</code> 后缀的文件</p>

<p><img src="http://www.inferjay.com/images/notes_images/mac-studio-vmoptions.png" alt="image" title="mac-studio-vmoptions" /></p>

<h3 id="linux">Linux</h3>
<p>找到 <code>bin/</code> 目录下的 <code>studio.vmoptions</code> (32位系统) 或者 <code>studio64.vmoptions</code> (64位系统)文件</p>

<p><img src="http://www.inferjay.com/images/notes_images/linux-studio-vmoptions.png" alt="image" title="linux-studio-vmoptions" /></p>

<h3 id="windows">Windows</h3>
<p>找到 <code>bin/</code> 目录下的 <code>studio.vmoptions</code> (32位系统) 或者 <code>studio64.exe.vmoptions</code> (64位系统)文件</p>

<p><img src="http://www.inferjay.com/images/notes_images/windows-studio-vmoptions.png" alt="image" title="windows-studio-vmoptions" /></p>

<p>接着用自己趁手的编辑器打开 <code>idea.vmoptions</code> 或者 <code>studio.vmoptions/studio64.vmoptions</code> 或者 <code>studio.exe.vmoptions/studio64.exe.vmoptions</code> 文件添加如下内容：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class=""><span class="line">-Djava.net.preferIPv4Stack=true  
</span><span class="line">-Didea.updates.url=http://dl.google.com/android/studio/patches/updates.xml  
</span><span class="line">-Didea.patches.url=http://dl.google.com/android/studio/patches/  </span></code></pre></td></tr></table></div></figure></notextile></div>
<p>保存后，重新打开<code>Android Studio</code>点击Check Update就会弹出更新信息提示了</p>

<p><img src="http://www.inferjay.com/images/notes_images/android-studio-update-info.jpg" alt="alt text" title="android-studio-update-info" /></p>

<p>如果仍然无效，将url里的修改<code>http</code>为<code>https</code>，然后重启点击Check Update试试~~~</p>

<hr />
<p>版权声明：欢迎自由转载-非商用-非衍生-保持署名 | <a href="http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh">Creative Commons BY-NC-ND 3.0</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android开发周报 Issue#12]]></title>
    <link href="http://www.inferjay.com/blog/2014/12/22/android-dev-weekly-issue-12/"/>
    <updated>2014-12-22T09:54:44+08:00</updated>
    <id>http://www.inferjay.com/blog/2014/12/22/android-dev-weekly-issue-12</id>
    <content type="html"><![CDATA[<h3 id="section">文章</h3>

<ol>
  <li>
    <p><a href="http://blog.csdn.net/luoshengyang/article/details/41822747">Dalvik虚拟机垃圾收集（GC）过程分析</a></p>

    <p>前面我们分析了Dalvivk虚拟机堆的创建过程，以及Java对象在堆上的分配过程。这些知识是理解Dalvik虚拟机垃圾收集过程的基础。垃圾收集是一个复杂的过程，它要将那些不再被引用的对象进行回收。一方面要求Dalvik虚拟机能够标记出哪些对象是不再被引用的。另一方面要求Dalvik虚拟机尽快地回收内存，避免应用程序长时间停顿。本文就将详细分析Dalvik虚拟机是如何解决上述问题完成垃圾收集过程的。</p>
  </li>
  <li>
    <p><a href="http://www.jianshu.com/p/c85984cf99e2?utm_campaign=maleskine&amp;utm_content=note&amp;utm_medium=writer_share&amp;utm_source=weibo">使用Android Studio查看Android Lollipop源码</a></p>

    <p>作为Google的亲儿子,Nexus手机系列所收到的待遇大家有目共睹.Android5.0出来之后,Nexus5第一时间就升级到了最新的系统.那么作为Google亲儿子的Android Studio同样备受Google的重视,我也是第一时间从Eclipse转投到了Android Studio的怀抱中,从最初的测试版本一路升级到现在的1.0正式版本(今天发布了1.0.2,果断已经升级了),关于Android Studio的好处我就不用说了…</p>
  </li>
  <li>
    <p><a href="http://greenrobot.me/devnews/facebook-engineer-improve-android-app/">Facebook工程师是如何改进他们Android客户端的</a></p>

    <p>作为世界上最大的社交网络，Facebook的Android客户端面临着各种各样的使用环境（地理环境、Android设备以及移动网络等环境的差异）。也正是这个原因，为了检测自家Android客户端在发展中国家的性能表现，Android的产品经理、工程师在2013年的时候去了一趟非洲。当时我看到这个新闻的时候觉得有点怪异，后来看到他们这篇博客才有点理解他们这样做的原因了。</p>
  </li>
  <li>
    <p><a href="http://greenrobot.me/devpost/i-dont-need-your-permission/">你的Android应用完全不需要那么多的权限</a></p>

    <p>Android系统的权限从用户的角度来看有时候的确有点让人摸不着头脑。有时候可能你只需要做一些简单的事情（对联系人的信息进行编辑），却申请了远超你应用所需的权限（比如访问所有联系人信息的权限）。</p>
  </li>
</ol>

<!--more-->

<ol>
  <li>
    <p><a href="http://greenrobot.me/devpost/about-android-dex-method-number-limit/">关于 Android Dex 方法限制的一些总结</a></p>

    <p>在了解这个问题之前我们先要来看看Android 应用编译的过程:1. IDE中的资源打包工具 (Android Asset Packaging Tool ，即图中的aapt) 会将应用中的资源文件进行编译，这些资源文件包括 AndroidManifest.xml文件，为Activity定义的 XML 文件等等。在这个编译过程中也会产生一个 R.java 文件，这样你就可以在你的Java代码中引用这些资源了。</p>
  </li>
  <li>
    <p><a href="http://bobao.360.cn/learning/detail/122.html">安卓Hacking科普系列</a></p>

    <p>本系列科普文章包含：<a href="http://bobao.360.cn/learning/detail/122.html">Part 1: 应用组件攻防</a>、<a href="http://bobao.360.cn/learning/detail/127.html">Part 2: Content Provider攻防</a>、<a href="http://bobao.360.cn/learning/detail/126.html">Part 3：Broadcast Receivers攻防</a>、<a href="http://bobao.360.cn/learning/detail/133.html">Part 4:非预期的信息泄露（边信道信息泄露）</a>、<a href="http://bobao.360.cn/learning/detail/138.html">Part 5:使用JDB调试Java应用</a>、<a href="http://bobao.360.cn/learning/detail/140.html">Part 6：调试Android应用</a>、<a href="http://bobao.360.cn/learning/detail/142.html">Part 7:攻击WebView</a>、<a href="http://bobao.360.cn/learning/detail/144.html">Part 8:Root的检测和绕过</a>、<a href="http://bobao.360.cn/learning/detail/150.html">Part9: 不安全的本地存储：Shared Preferences</a>、<a href="http://bobao.360.cn/learning/detail/152.html">Part 10:不安全的本地存储</a>等，还在更新中。</p>
  </li>
</ol>

<h3 id="section-1">代码&amp;开源库</h3>

<ol>
  <li>
    <p><a href="https://github.com/golang/mobile">Go on Android</a></p>

    <p>The Go mobile repository holds packages and build tools for using Go on Android.</p>
  </li>
  <li>
    <p><a href="https://github.com/KeithYokoma/AccountAutoCompleteEditText">AccountAutoCompleteEditText</a></p>

    <p>Just a simple implementation for use of auto complete text view with device account suggestion.</p>
  </li>
  <li>
    <p><a href="https://github.com/pungrue26/SelectableRoundedImageView">SelectableRoundedImageView</a></p>

    <p>Android ImageView that supports different radiuses on each corner. It also supports oval(and circle) shape and border. This would be especially useful for using inside CardView which should be rounded only top left and top right corners(Don’t forget to call setPreventCornerOverlap(false) on your cardview).</p>
  </li>
  <li>
    <p><a href="https://github.com/ObjectLayout/ObjectLayout">ObjectLayout</a></p>

    <p>Java classes designed with optimizable object layout in mind 
<a href="http://objectlayout.github.com/ObjectLayout/">http://objectlayout.github.com/ObjectLayout/</a>。</p>
  </li>
  <li>
    <p><a href="https://github.com/glomadrian/MvpCleanArchitecture">MvpCleanArchitecture</a></p>

    <p>A sample project using Clean architecture and MVP in Android。</p>
  </li>
  <li>
    <p><a href="https://github.com/paveldudka/ViewStateSaveDemo">ViewStateSaveDemo</a></p>

    <p>Simple Demo of how do you save View’s state in Android。</p>
  </li>
  <li>
    <p><a href="https://github.com/jmolsmobile/LandscapeVideoCamera">LandscapeVideoCamera</a></p>

    <p>Powerful custom Android Camera with granular control over the video quality and filesize, restricting recordings to landscape only.</p>
  </li>
  <li>
    <p><a href="https://github.com/andkulikov/transitions-everywhere">transitions-everywhere</a></p>

    <p>Backport of Transitions API from Android KitKat and Lollipop. Compatible with Android 2.2+。</p>
  </li>
  <li>
    <p><a href="https://github.com/krschultz/android-proguard-snippets">android-proguard-snippets</a></p>

    <p>Example Proguard configurations for common Android libraries。</p>
  </li>
</ol>

<h3 id="section-2">工具</h3>

<ol>
  <li>
    <p><a href="http://tools.android.com/download/studio/canary/1-0rc4">Android Studio 1.0.2</a></p>

    <p><strong>墙内下载地址：</strong><a href="http://www.androiddevtools.cn/#android-studio">http://www.androiddevtools.cn/#android-studio</a>	 	 </p>
  </li>
</ol>

<h3 id="section-3">视频</h3>

<ol>
  <li>
    <p><a href="http://v.youku.com/v_show/id_XODUxODEzMDQ4.html?f=23217955">Android DevBytes</a></p>

    <p>墙内DevBytes视频更新啦！包括最新的《Android Vector Graphics》（难得有个华裔面孔！）、《Introducing Route 85》（Google面向iOS开发即将推出一系列视频）以及Auto和Wear（有车有表！）</p>
  </li>
</ol>

<h3 id="section-4">设计</h3>

<h4 id="section-5">工具</h4>

<ol>
  <li>
    <p><a href="http://www.materialpalette.com">Material Design Color Palette Generator - Material Palette</a></p>

    <p>一个可以快速搭配Material Design主题颜色的并且提供下载的在线网站.</p>
  </li>
  <li>
    <p><a href="https://github.com/t32k/material-design-color-palette-sketch-plugin">material-design-color-palette-sketch-plugin</a></p>

    <p>Sketch app plugin for displaying Google material design color palette.</p>
  </li>
</ol>

<hr />
<p>版权声明：欢迎自由转载-非商用-非衍生-保持署名 | <a href="http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh">Creative Commons BY-NC-ND 3.0</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android开发周报 Issue#11]]></title>
    <link href="http://www.inferjay.com/blog/2014/12/15/android-dev-weekly-issue-11/"/>
    <updated>2014-12-15T13:56:36+08:00</updated>
    <id>http://www.inferjay.com/blog/2014/12/15/android-dev-weekly-issue-11</id>
    <content type="html"><![CDATA[<h3 id="section">文章</h3>

<ol>
  <li>
    <p><a href="http://droidyue.com/blog/2014/11/29/why-onsharedpreferencechangelistener-was-not-called/">Google为何这样设计OnSharedPreferenceChangeListener</a></p>

    <p>之前使用OnSharedPreferenceChangeListener，遇到了点小问题，就是有些时候OnSharedPreferenceChangeListener没有被触发。最近花了点时间研究了一下，小做整理。本文将会介绍监听器不被触发的原因，解决方法，以及其中隐含的一些技术细节。</p>
  </li>
  <li>
    <p><a href="http://blog.isming.me/2014/12/12/import-library-to-android-studio/">导入开源库到基于Android Studio构建的项目中</a></p>

    <p>前两天，谷歌发布了Android Studio 1.0的正式版，也有更多的人开始迁移到Android Studio进行开发。然而，网上很多的开源库,控件等还是以前的基于Eclipse进行开发，很多人不知道怎么导入到自己的基于Android Studio项目中来，微博上也有人私信我，让我来写写，正好今天回来的比较早，就写写吧。主要介绍一下常见的一些导包的场景。</p>
  </li>
  <li>
    <p><a href="http://www.cnblogs.com/ct2011/p/4152323.html">Android批量打包提速 - 1分钟900个市场不是梦</a></p>

    <p>使用Ant或者Gradle来给程序进行多渠道批量打包，通常都是在manifest文件中写入一个meta标签：<code>&lt;meta-data android:name="CHANNEL" android:value="xxx" /&gt;</code> meta的key值固定，通过循环改变meta中的value值来实现市场渠道的写入。Ant批量打包实现相对麻烦，以前写的时候多亏了<a href="http://www.cnblogs.com/qianxudetianxia/archive/2012/07/04/2573687.html">谦虚的天下-《App自动化之使用Ant编译项目多渠道打包》</a> 。如果没有这篇帖子，真不知道当时Ant要折腾多少回才能写好。</p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/maosidiaoxian/article/details/41692535">上传Android或Java库到Maven central repository</a></p>

    <p>主要介绍利用Sonatype将jar或aar提交到Maven的中央仓库。是不是希望将自己的jar或是aar传到maven官方库中，在The Central Repository中可以被其他人搜索使用呢，是的话，往下看吧。</p>
  </li>
</ol>

<!--more-->

<ol>
  <li>
    <p><a href="http://greenrobot.me/devpost/android-custom-layout/">深入解析Android的自定义布局</a></p>

    <p>这篇文章是前Firefox Android工程师（现在跳槽去Facebook了） Lucas Rocha所写，文中对Android中常用的四种自定义布局方案进行了很好地分析，并结合这四种Android自定义布局方案所写的示例项目讲解了它们各自的优劣以及四种方案之间的比较。</p>
  </li>
  <li>
    <p><a href="http://greenrobot.me/devpost/java-faster-less-jvm-garbage/">Linkedin工程师是如何优化他们的Java代码的</a></p>

    <p>最近在刷各大公司的技术博客的时候，我在Linkedin的技术博客上面发现了一篇很不错博文。这篇博文介绍了Linkedin信息流中间层Feed Mixer，它为Linkedin的Web主页，大学主页，公司主页以及客户端等多个分发渠道提供支撑（如下图所示）。</p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/column/details/android5.html">跟着ym学习Android5.0</a></p>

    <p>跟着作者一步步学习Android 5.0开发。从创建模拟器开始，再到Material主题、Palette、AnimatedVectorDrawable、RecyclerView、CardView、Activity过渡动画、如何定义阴影等。</p>
  </li>
  <li>
    <p><a href="http://qichaochen.github.io/2014/12/08/108-Android-Toolbar-DrawerLayout-01/">[Material Design]使用Toolbar + DrawerLayout快速实现高大上菜单侧滑</a></p>

    <p>如果你有在关注一些遵循最新的Material Design设计规范的应用的话（如果没有，假设你有！），也许会发现有很多使用了看起来很舒服、很高大上的侧滑菜单动画效果。</p>
  </li>
  <li>
    <p><a href="http://www.dgtle.com/article-5885-1.html">安卓中的 Cydia — Xposed 框架插件专题</a></p>

    <p>大名鼎鼎的 Xposed，相信不少经常泡在各类安卓论坛的安卓粉们都听说过。在安卓进入 4.0 的时代后，不少“大神”也都会在自己做的 Rom 中添加这个 Xposed 软件。</p>
  </li>
</ol>

<h3 id="section-1">代码&amp;开源库</h3>

<ol>
  <li>
    <p><a href="https://github.com/chrisbatt/AndroidFastImageProcessing">AndroidFastImageProcessing</a></p>

    <p>A framework for speeding up image processing on android devices by taking advantage of shaders on the GPU.	</p>
  </li>
  <li>
    <p><a href="https://github.com/stephanenicolas/loglifecycle">loglifecycle</a></p>

    <p>Logs all lifecycle methods of annotated Activities, Fragments, Services, Views, etc.</p>
  </li>
  <li>
    <p><a href="https://github.com/Narfss/ParallaxEverywhere">ParallaxEverywhere</a></p>

    <p>Parallax everywhere is a library with alternative android widgets with parallax effects.</p>
  </li>
  <li>
    <p><a href="https://github.com/adnan-SM/TimelyTextView">TimelyTextView</a></p>

    <p>Animated TextView like Timely app.</p>
  </li>
  <li>
    <p><a href="https://github.com/Manabu-GT/ExpandableTextView">ExpandableTextView</a></p>

    <p>ExpandableTextView是一个可以使开发人员能够轻松地创建可扩展/折叠的TextView效果，就像Google Play里用于显示App描述的TextView一样.</p>
  </li>
  <li>
    <p><a href="https://github.com/googlesamples">Google Samples</a></p>

    <p>Google在Github上发布了大量Demo，针对不同的特性，也包含了最新的API 21 (Lollipop).</p>
  </li>
</ol>

<h3 id="section-2">工具</h3>

<ol>
  <li>
    <p><a href="http://tools.android.com/download/studio/canary/1-0rc4">Android Studio 1.0正式版发布啦</a></p>

    <p><strong>墙内下载地址：</strong><a href="http://www.androiddevtools.cn/#android-studio">http://www.androiddevtools.cn/#android-studio</a>	 	 </p>
  </li>
  <li>
    <p><a href="https://github.com/airk000/gologcat">gologcat</a></p>

    <p>一个由golang编写，可以在终端中彩色输出logcat的实用工具，支持自定义颜色。</p>
  </li>
  <li>
    <p><a href="http://inloop.github.io/shadow4android/">Android 9-patch shadow generator</a></p>

    <p>Android点9图片阴影生成器。</p>
  </li>
</ol>

<h3 id="section-3">视频</h3>

<ol>
  <li>
    <p><a href="http://v.youku.com/v_show/id_XODQ1MjI2MDQ0.html?f=23088492">精通Android触摸系统(中英字幕)</a></p>

    <p><a href="http://www.weibo.com/oceancx?from=feed&amp;loc=nickname">@Ocean-藏心</a>同学历经3周的翻译,将1小时18分钟的视频,终于完成了. 简介:<a href="http://t.cn/RzxZs6E">的姊妹篇</a>，详细讲解了Android自定义事件处理的方方面面。配合<a href="http://blog.csdn.net/guolin_blog/">guolin</a> 大神CSDN的博客和上一个视频，让你对开发Android 自定义控件游刃有余。此外还有<a href="http://">@Trinea</a>大神的<a href="http://www.trinea.cn/android/touch-event-delivery-mechanism/">Android Touch事件传递机制</a>简略解读。</p>

    <p>视频中用到的PPT(PDF版)下载地址：<a href="http://wugengxin.cn/download/pdf/android/PRE_andevcon_mastering-the-android-touch-system.pdf">http://wugengxin.cn/download/pdf/android/PRE_andevcon_mastering-the-android-touch-system.pdf</a></p>
  </li>
  <li>
    <p><a href="http://www.jikexueyuan.com/course/396.html">Android Studio 1.0 (稳定版)的使用</a></p>

    <p>经过 2 年时间的研发，Google 终于在近日正式发布了面向 Android 开发者的集成开发环境 Android Studio 1.0（稳定版）。Android Studio 是 Google 开发的一款面向 Android 开发者的 IDE，支持 Windows、Mac、Linux 等操作系统，基于流行的 Java 语言集成开发环境 IntelliJ 搭建而成。该 IDE 在 2013 年 5 月的 Google I/O 开发者大会上首次露面，此间推出了若干个测试版，12 月 8 日发布的版本是 Android Studio 的首个稳定版。Google 称，相对于其他开发工具，Android Studio 更快、更具生产力，Android Studio 1.0 推出后，Google 将逐步放弃对原来主要的 Android 开发工具 Eclipse ADT 的支持。</p>
  </li>
</ol>

<h3 id="section-4">设计</h3>

<h4 id="section-5">文章</h4>

<ol>
  <li>
    <p><a href="http://www.jianshu.com/p/a3b2422b5465?utm_campaign=hugo&amp;utm_medium=reader_share&amp;utm_content=note&amp;utm_source=weibo">关于Material Design，做到这四点便足以让用户惊喜</a></p>

    <p>Material Design 主张将现实世界中的交互体验，应用到界面设计中来，以求用户的经验能够迁移，并更快习惯新系统。Teambition 已经根据 Material Design 重新设计了旗下所有的 Android 客户端产品。在实践过程中，设计和产品团队总结了一些值得分析的要点，与大家分享。</p>
  </li>
  <li>
    <p><a href="http://www.cocoachina.com/special/design/">给程序员的设计学习指南</a></p>

    <p>这是给 移动开发者 准备的设计学习指南。在这里你将接触到三大平台的设计规范、基础设计理论，以及设计实践，还有一些学习设计的资源。程序员为什么需要学习设计？理解设计能让程序员更上一层楼，能让TA与设计师的交流协作更高效愉快，甚至拥有独立开发面向大众的APP的能力。 <a href="http://www.cocoachina.com/programmer/20141113/10214.html">《程序员需要学习设计的5大理由》</a>。</p>
  </li>
  <li>
    <p><a href="http://zhuanlan.zhihu.com/zhezhexiong/19565895">[无线手册-4] dp、sp、px傻傻分不清楚[完整]</a></p>

    <p>做移动设计的同学，不管是原生app或者web app，应该对字体字号都是很头痛的问题。根本原因是，我们用唯一分辨率的电脑，设计各个不同尺寸大小分辨率的设备，那简直要疯掉了。 <a href="http://zhuanlan.zhihu.com/zhezhexiong/1956455">[无线手册-2]不得不说的icon-font</a> 	<a href="http://zhuanlan.zhihu.com/zhezhexiong/1956）4893">[无线手册-3] 移动App上的动画们</a></p>
  </li>
</ol>

<h4 id="section-6">资源</h4>

<ol>
  <li>
    <p><a href="http://www.androidicons.com/">250 free icons in 5 sizes and 14 colors</a></p>

    <p>包含5种尺寸和14种颜色的250个免费icons。</p>
  </li>
</ol>

<hr />
<p>版权声明：欢迎自由转载-非商用-非衍生-保持署名 | <a href="http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh">Creative Commons BY-NC-ND 3.0</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Androoid Stidio 1.0正式版和SDK Tools R24下载地址]]></title>
    <link href="http://www.inferjay.com/blog/2014/12/09/androoid-stidio-1-0-and-sdk-tools-r24-download-urli/"/>
    <updated>2014-12-09T16:26:58+08:00</updated>
    <id>http://www.inferjay.com/blog/2014/12/09/androoid-stidio-1-0-and-sdk-tools-r24-download-urli</id>
    <content type="html"><![CDATA[<blockquote>
  <p>提示：所有链接复制到迅雷里就可以下载<strong>无需翻墙</strong></p>
</blockquote>

<h2 id="sdk-tools">SDK Tools下载地址</h2>

<h4 id="windows">Windows</h4>

<p>安装版(官方推荐)：<a href="http://dl.google.com/android/installer_r24-windows.exe">http://dl.google.com/android/installer_r24-windows.exe</a></p>

<p>绿色版：<a href="http://dl.google.com/android/android-sdk_r24-windows.zip">http://dl.google.com/android/android-sdk_r24-windows.zip</a></p>

<h4 id="mac-os-x">Mac OS X</h4>
<p><a href="http://dl.google.com/android/android-sdk_r24-macosx.zip">http://dl.google.com/android/android-sdk_r24-macosx.zip</a></p>

<h4 id="linux">Linux</h4>
<p><a href="http://dl.google.com/android/android-sdk_r24-linux.tgz">http://dl.google.com/android/android-sdk_r24-linux.tgz</a></p>

<h2 id="android-studio">Android Studio下载地址</h2>

<!-- More -->

<h4 id="windows-1">Windows</h4>

<p>官方推荐下载安装版(包含SDT Tools)：<a href="http://dl.google.com/dl/android/studio/install/1.0.0/android-studio-bundle-135.1629389.exe">http://dl.google.com/dl/android/studio/install/1.0.0/android-studio-bundle-135.1629389.exe</a></p>

<p>安装版(不包含SDT Tools)：<a href="http://dl.google.com/dl/android/studio/install/1.0.0/android-studio-ide-135.1629389.exe">http://dl.google.com/dl/android/studio/install/1.0.0/android-studio-ide-135.1629389.exe</a></p>

<p>绿色版： <a href="http://dl.google.com/dl/android/studio/ide-zips/1.0.0/android-studio-ide-135.1629389-windows.zip">http://dl.google.com/dl/android/studio/ide-zips/1.0.0/android-studio-ide-135.1629389-windows.zip</a></p>

<h4 id="mac-os-x-1">Mac OS X</h4>
<p><a href="http://dl.google.com/dl/android/studio/install/1.0.0/android-studio-ide-135.1629389.dmg">http://dl.google.com/dl/android/studio/install/1.0.0/android-studio-ide-135.1629389.dmg</a></p>

<h4 id="linux-1">Linux</h4>
<p><a href="http://dl.google.com/dl/android/studio/ide-zips/1.0.0/android-studio-ide-135.1629389-linux.zip">http://dl.google.com/dl/android/studio/ide-zips/1.0.0/android-studio-ide-135.1629389-linux.zip</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android开发周报 Issue#10]]></title>
    <link href="http://www.inferjay.com/blog/2014/12/08/android-dev-weekly-issue-10/"/>
    <updated>2014-12-08T11:10:12+08:00</updated>
    <id>http://www.inferjay.com/blog/2014/12/08/android-dev-weekly-issue-10</id>
    <content type="html"><![CDATA[<h3 id="section">文章</h3>

<ol>
  <li>
    <p><a href="http://blog.csdn.net/maosidiaoxian/article/details/41692535">Android Apk 拆分机制</a></p>

    <p>拆分机制比起使用 flavors，能让应用程序更有效地构建一些形式的多个apk。多 apk 只支持以下类型: 1.
屏幕密度 2.ABI.使用新的拆分机制，构建同一个应用程序的hdpi版本和mdpi版本，能够共享很多的任务 （如 javac，dx，proguard）。此外，它会被认为是一个单一的variant，并且同一个测试程序将会被用来测试每​​个多APK。</p>
  </li>
  <li>
    <p><a href="http://relex.me/using-manifestplaceholders/">使用manifestPlaceholders</a></p>

    <p>在项目中我需要打包不同渠道的APK，需要在AndroidManifest中定义渠道名称，以便在java中调用。以前ant或gradle打包时动态改变渠道的思路是：正则AndroidManifest的特定字符然后替换.</p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/xushuaic/article/details/40424379">Property Anim详解</a></p>

    <p>本篇文章将对PropertyAnimation进行全面深入的探讨，本篇文章可以分为两大块，从第六部分可以作为分界点。前五部分着重讲解了PropertyAnim的动画值的计算过程，ValueAnimator与ObjectAnimator以及TimeInterpolation与TypeEvaluator之间的介绍和比较，这几点是比较重要的，从第六部分开始是通过源码的角度分析了整个动画计算以及内部的处理细节，以及引出了对JakeWharton大神的NineOldAndroids 开源库的分析，如果你觉得太多，可以分开来看，有理解不准确的地方，欢迎大家指正。</p>
  </li>
</ol>

<!--more-->

<ol>
  <li>
    <p><a href="http://stormzhang.com/posts.html#AndroidStudio">Android Studio系列教程</a></p>

    <p>相信大家对Android Studio已经不陌生了，Android Studio是Google于2013 I/O大会针对Android开发推出的新的开发工具，目前很多开源项目都已经在采用，Google的更新速度也很快，明显能感觉到这是Android开发的未来，那么我们还有什么理由不去拥抱未来呢？虽然推出了很久，但是国内貌似普及的程度并不高，鉴于很多朋友求studio的详细教程，那么今天我就手把手教大家下载、安装、使用，Studio之路从这里开始。</p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/luoshengyang/article/details/41581063">Dalvik虚拟机Java堆创建过程分析</a></p>

    <p>使用C/C++开发应用程序最令头痛的问题就是内存管理。慎不留神，要么内存泄漏，要么内存破坏。虚拟机要解决的问题之一就是帮助应用程序自动分配和释放内存。为了达到这个目的，虚拟机在启动的时候向操作系统申请一大块内存当作对象堆。之后当应用程序创建对象时，虚拟机就会在堆上分配合适的内存块。而当对象不再使用时，虚拟机就会将它占用的内存块归还给堆。Dalvik虚拟机也不例外，本文就分析它的Java堆创建过程。</p>
  </li>
</ol>

<h3 id="section-1">代码&amp;开源库</h3>

<ol>
  <li>
    <p><a href="https://github.com/googlesamples">Google Samples</a></p>

    <p>Google在Github上发布了大量Demo，针对不同的特性，也包含了最新的API 21 (Lollipop),学习的好资料/</p>
  </li>
  <li>
    <p><a href="https://github.com/Rogero0o/MatchView">MatchView</a></p>

    <p>TextView中的文字由类似火柴棍分散组合的效果。</p>

    <p><img src="https://camo.githubusercontent.com/a71e9d26a7f90ea70270b3681d99785a29f83be5/687474703a2f2f7777312e73696e61696d672e636e2f6d773639302f6136393561636465677731656d79746e6b347334356732306567306d6b3439302e676966" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/Musenkishi/wally">Wally</a></p>

    <p>Wally is a fast and efficient open source wallpaper application for Android.</p>
  </li>
  <li>
    <p><a href="https://github.com/kyze8439690/FolderLayout">FolderLayout</a></p>

    <p>A layout like a stack of files and you can choose one to open. Just imitate the UI of Tencent’s QQ手机管家.</p>
  </li>
  <li>
    <p><a href="https://github.com/Malinskiy/android-material-icons">android-material-icons</a></p>

    <p>一个让你方便的在Android开发中使用Google发布出来的Material Design风格图标的库。	</p>
  </li>
  <li>
    <p><a href="https://github.com/quiqueqs/BabushkaText">BabushkaText</a></p>

    <p>A simpler way to style your TextViews</p>

    <p><img src="https://github.com/quiqueqs/BabushkaText/raw/master/images/example.png" alt="image" /></p>
  </li>
</ol>

<h3 id="section-2">工具</h3>

<ol>
  <li>
    <p><a href="http://www.chinagdg.com/thread-6053-1-1.html">Google 技术资源离线版</a></p>

    <p>Google 发布了一套4张 DVD，将 Google Developers 上的在线技术文档和视频打包到离线文件中。内容很丰富，如 Android 官方文档和SDK、Google Cloud 文档和视频、Web Fundamentals 文档、I/O 大会和 Dev Bytes 视频、Google Udacity 课程视频 等等。</p>
  </li>
  <li>
    <p><a href="http://tools.android.com/download/studio/canary/1-0rc4">Android Studio 1.0 Release Candidate 4</a></p>

    <p><strong>墙内下载地址：</strong><a href="http://www.androiddevtools.cn/#android-studio">http://www.androiddevtools.cn/#android-studio</a></p>
  </li>
</ol>

<h3 id="section-3">设计</h3>

<h4 id="section-4">文章</h4>

<ol>
  <li>
    <p><a href="http://www.ui.cn/project.php?id=33849">中国移动应用设计趋势解读</a></p>

    <p>铺天盖地的二维码、丧心病狂的小红点，还有繁花似锦的安卓ROMs…</p>

    <p>——老外对中国式App设计趋势的分析  by  Dan Grover (微信产品经理) </p>
  </li>
</ol>

<hr />
<p>版权声明：欢迎自由转载-非商用-非衍生-保持署名 | <a href="http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh">Creative Commons BY-NC-ND 3.0</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android开发周报 Issue#9]]></title>
    <link href="http://www.inferjay.com/blog/2014/12/01/android-dev-weekly-issue-9/"/>
    <updated>2014-12-01T12:42:08+08:00</updated>
    <id>http://www.inferjay.com/blog/2014/12/01/android-dev-weekly-issue-9</id>
    <content type="html"><![CDATA[<h3 id="section">文章</h3>

<ol>
  <li>
    <p><a href="http://blog.csdn.net/luoshengyang/article/details/41581063">Dalvik虚拟机Java堆创建过程分析</a></p>

    <p>使用C/C++开发应用程序最令头痛的问题就是内存管理。慎不留神，要么内存泄漏，要么内存破坏。虚拟机要解决的问题之一就是帮助应用程序自动分配和释放内存。为了达到这个目的，虚拟机在启动的时候向操作系统申请一大块内存当作对象堆。之后当应用程序创建对象时，虚拟机就会在堆上分配合适的内存块。而当对象不再使用时，虚拟机就会将它占用的内存块归还给堆。Dalvik虚拟机也不例外，本文就分析它的Java堆创建过程。</p>
  </li>
  <li>
    <p><a href="http://www.kuqin.com/shuoit/20140826/341828.html?url_type=39&amp;object_type=crawler&amp;pos=1">为什么Android的图片质量会比iPhone的差？</a></p>

    <p>经常看到有人问：“安卓版微信发出去的图片怎么那么渣！比iPhone的差远了！”。不只是微信，很多应用安卓版的图片质量就是要比iPhone版逊色很多，这到底是怎么回事？</p>
  </li>
  <li>
    <p><a href="http://qichaochen.github.io/2014/11/21/107-Facebook-Rebound-Demo/">[Material Design]使用Fackbook Rebound快速实现弹簧动画效果</a></p>

    <p>Rebound是Facebook推出的一款Android的物理和动画库，于2013年10月在Mobile@Scale大会上正式发布，旨在解决笨重、缓慢的传统移动网络界面。Rebound不是一款通用物理库，但其弹簧模型在应用程序中引入了现实世界的物理，易于集成，创建的动画能够让人感觉到非常自然，并且可以和Material Design的设计原则呼应，可用于滚动条、切换开关、呼叫等场景下。</p>
  </li>
  <li>
    <p><a href="http://stormzhang.com/devtools/2014/11/07/use-curl-debug/">使用curl来调试你的应用</a></p>

    <p>我们在客户端开发过程中总免不了和后端进行api对接，有时候需要对返回的数据格式进行调试，有时候每次运行客户端来发送请求，这个未免效率太低，这里就来介绍一个好用的工具–curl。</p>
  </li>
</ol>

<!--more-->

<ol>
  <li>
    <p><a href="http://www.codeceo.com/article/android-taskaffinity.html">Android taskAffinity属性使用详解</a></p>

    <p>Activity的归属，也就是Activity应该在哪个Task中，Activity与Task的吸附关系。我们知道，一般情况下在同一个应用中，启 动的Activity都在同一个Task中，它们在该Task中度过自己的生命周期，这些Activity是从一而终的好榜样。</p>
  </li>
  <li>
    <p><a href="http://www.codeceo.com/article/android-memory-manage.html">每个Android开发者必须知道的内存管理知识</a></p>

    <p>相信一步步走过来的Android从业者，每个人都会遇到OOM的情况。如何避免和防范OOM的出现，对于每一个程序员来说确实是一门必不可少的能力。今天我们就谈谈在Android平台下内存的管理之道，开始今天的主题之前，先再次回顾两个概念。</p>
  </li>
</ol>

<h3 id="section-1">代码&amp;开源库</h3>

<ol>
  <li>
    <p><a href="https://github.com/liaohuqiu/android-Ultra-Pull-To-Refresh">android-Ultra-Pull-To-Refresh</a></p>

    <p>很炫的下拉刷新效果库。</p>

    <p><img src="https://camo.githubusercontent.com/588a2ef2cdcfb6c71e88437df486226dd15605b3/687474703a2f2f737261696e2d6769746875622e71696e6975646e2e636f6d2f756c7472612d7074722f73746f72652d686f7573652d737472696e672d61727261792e676966" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/AnderWeb/discreteSeekBar">discreteSeekBar</a></p>

    <p><img src="https://camo.githubusercontent.com/e717e2597779d1ddc980ace6f3943f62483d8a8c/68747470733a2f2f6c68332e676f6f676c6575736572636f6e74656e742e636f6d2f2d376e62565058785568596b2f56472d724f3634704d57492f414141414141414148734d2f614d52676c7432567a726b2f773633392d683438302f616e696d6174696f6e2e676966" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/frogermcs/InstaMaterial">InstaMaterial</a></p>

    <p>Material Design风格的Instagram的客户端。</p>
  </li>
  <li>
    <p><a href="https://github.com/pnikosis/materialish-progress">materialish-progress</a></p>

    <p>Material Design风格的圆形进度条，最低支持到2.3的系统。</p>

    <p><img src="https://github.com/pnikosis/materialish-progress/raw/master/spinningwheel.gif" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/inaka/galgo">galgo</a></p>

    <p>Android日志工具库，可以把log显示在屏幕上。</p>

    <p><img src="https://camo.githubusercontent.com/1e2d3b204a0898b697876817cc19ab4a2fef5de2/687474703a2f2f6936312e74696e797069632e636f6d2f327177336279302e676966" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/cookpad/puree-android">puree-android</a></p>

    <p>一个Log日志收集框架。</p>
  </li>
  <li>
    <p><a href="https://github.com/gdpancheng/LoonAndroid">LoonAndroid</a></p>

    <p>一个ioc（依赖注入）框架，但是整个框架式不同于androidannotations，Roboguice等ioc框架，这是一个类似spring的实现方式。在整应用的生命周期中找到切入点，然后对activity的生命周期进行拦截，然后插入自己的功能。</p>
  </li>
</ol>

<h3 id="section-2">工具</h3>

<ol>
  <li>
    <p><a href="http://tools.android.com/download/studio/canary/1-0rc2">Android Studio 1.0 Release Candidate 2</a></p>

    <p>本次Release没有添加什么新的特性，只是修复了一些Bug，如果你之前已经升级到了RC1建议更新到RC2版。另外本次Release还针对Windows用户推出了包含SDK的安装包。</p>

    <p><strong>墙内下载地址：</strong><a href="http://www.androiddevtools.cn/#android-studio">http://www.androiddevtools.cn/#android-studio</a></p>
  </li>
</ol>

<h3 id="section-3">设计</h3>

<h4 id="section-4">文章</h4>

<ol>
  <li>
    <p><a href="http://www.oschina.net/news/57379/what-is-good-ui-design#0-tsina-1-76379-397232819ff9a47a7b7e80a40613cfe1">什么才是优秀的用户界面设计</a></p>

    <p>本文分享一些 Good UI 在一些项目中获取的设计以及运营策略等方面的经验。Good UI 是一家研究用户体验的设计机构。我们知道成功的页面设计不仅有很高的转化率更便于用户使用，既能满足商业目标更能为用户带来良好的体验。</p>
  </li>
  <li>
    <p><a href="https://medium.com/sebs-top-tips/material-navigation-drawer-sizing-558aea1ad266">Material Navigation Drawer sizing</a></p>

    <p>本文分析了Material的抽屉导航的大小到底多少才最符合设计规范和美观。</p>
  </li>
</ol>

<h4 id="section-5">素材</h4>

<ol>
  <li>
    <p><a href="https://dribbble.com/shots/1683873-Android-L-GUI-KIT">Android L GUI KIT</a></p>

    <p>Android L GUI KIT。</p>
  </li>
</ol>

<h4 id="section-6">工具</h4>

<ol>
  <li>
    <p><a href="http://oven.chrometaphore.com">OVEN</a></p>

    <p>A BETTER ASSETS WORKFLOW For Photoshop CC / 2014。</p>

    <p><img src="http://oven.chrometaphore.com/assets/oven_panel_screenshot@2x.png" alt="image" /></p>
  </li>
</ol>

<hr />
<p>版权声明：欢迎自由转载-非商用-非衍生-保持署名 | <a href="http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh">Creative Commons BY-NC-ND 3.0</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android开发周报 Issue#8]]></title>
    <link href="http://www.inferjay.com/blog/2014/11/24/android-dev-weekly-issue-8/"/>
    <updated>2014-11-24T10:56:01+08:00</updated>
    <id>http://www.inferjay.com/blog/2014/11/24/android-dev-weekly-issue-8</id>
    <content type="html"><![CDATA[<h3 id="section">文章</h3>

<ol>
  <li>
    <p><a href="http://blog.isming.me/2014/11/21/use-gradle-new/">使用gradle构建android项目（续）</a></p>

    <p>在几个月之前，我已经写过一篇使用gradle构建android项目的博客了<a href="http://blog.isming.me/2014/05/20/android4gradle/">http://blog.isming.me/2014/05/20/android4gradle/</a>,那篇文章已经介绍了如何使用gradle进行项目构建，以及为谷歌会推荐使用gradle。当时android的gradle插件是0.11.0,现在插件的版本已经是0.14.3了，对于一些老的方法和api，有一些已经被移除，无法使用。因此有必要再写一篇博客介绍这些被移除的部分和替代方案。同时由于个人学识原因，当时没有介绍的一些技巧，其他功能，也会在本文中进行介绍。</p>
  </li>
  <li>
    <p><a href="http://www.csdn.net/article/2014-11-21/2822753-material-design-libs/1">直接拿来用！十大Material Design开源项目</a></p>

    <p>本文详细介绍了十个Material Design开源项目，从示例、FAB、菜单、动画、Ripple到Dialog，看被誉为“Google第一次在设计语言和规范上超越了Apple”的Material Design是如何逐渐成为App的一种全新设计标准。另外推荐大家去 Github 上 Star 或者 Fork <a href="https://github.com/lightSky/MaterialDesignCenter"><code>MaterialDesignCenter</code></a>这个项目，该收集整理了</p>
  </li>
  <li>
    <p><a href="http://www.cnblogs.com/ct2011/p/4100132.html">放弃WebView，使用Crosswalk做富文本编辑器</a></p>

    <p>Android WebView做普通浏览还好，做富文本编辑器（<code>document.body.contentEditable=true;</code>），常常会遇到各种奇葩的bug，而且很难修复。尽管Google在版本迭代中不断修复bug，但依旧没法用它来做富文本编辑。</p>
  </li>
  <li>
    <p><a href="http://blog.isming.me/2014/11/17/material-design-for-pre-lollipop-android/">在低版本android系统上实现Material设计应用</a></p>

    <p>​Material Design真的很好看，动画效果真的很实用。前面也写了一些文章介绍如何编写Material风格的程序，但是很多都是一些新的api，低版本上面没有这些api，我们没办法使用。但是不用气馁，google官方，以及一些大牛，给我们提供了一些程序，让我们在低版本上面可以实现Material风格的程序，这里就给大家介绍一下。</p>
  </li>
</ol>

<!--more-->

<ol>
  <li>
    <p><a href="http://qichaochen.github.io/2014/11/17/106-Android-RoundedBitmapDrawable/">使用RoundedBitmapDrawable快速生成圆角和圆形图片</a></p>

    <p>在I/O大会之后，Google发布了新的Support lib，其中有一个是RoundedBitmapDrawable类，通过这个类可以很容易实现圆角和圆形图片。</p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/androidsecurity/article/details/41207959">“黑暗潜伏者” – 手机病毒新型攻击方式分析</a></p>

    <p>近期百度安全实验室发现一款“黑暗潜伏者”新型手机病毒。该病毒附着在众多壁纸和游戏类应用中。截至目前，已经发现感染该病毒的应用超过1万多款，感染用户超过3000万。</p>
  </li>
  <li>
    <p><a href="http://blog.jobbole.com/78995/">正确使用Android性能分析工具——TraceView</a></p>

    <p>TraceView是一个非常强大的性能分析工具，因为Android 官网对这个工具的使用介绍文档很少，而且一些中文博客中写的也都是抄来抄去，没有讲到底怎么使用。</p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/xyz_lmn/article/details/41052977#0-tsina-1-81289-397232819ff9a47a7b7e80a40613cfe1">移动web开发框架研究</a></p>

    <p>纯粹的总结一下移动web开发框架，移动web开发框架有jQuery Mobile 、Sencha Touch等等,他们都来源于web开发，是成熟的框架，jQuery Mobile出自于jQuery家族，Sencha Touch来自于ExtJS。jQuery Mobile 和Sencha Touch都是比较成熟老牌的框架，项目中也有应用。国内也有公司，像BAT巨头也在探索和实现了适合自己的移动web框架。</p>
  </li>
</ol>

<h3 id="section-1">代码&amp;开源库</h3>

<ol>
  <li>
    <p><a href="https://github.com/ekx/GitLabAndroid">GitLabAndroid</a></p>

    <p>GitLab的非官方开源客户端.</p>

    <p><img src="https://github.com/ekx/GitLabAndroid/raw/master/screenshots.png" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/snowdream/awesome-android">awesome-android</a></p>

    <p>收集整理了Gihub上Android相关的各种开源控件。</p>
  </li>
  <li>
    <p><a href="https://github.com/vince-styling/Netroid">Netroid</a></p>

    <p>Netroid是一个基于Volley实现的Android Http库。提供执行网络请求、缓存返回结果、批量图片加载、大文件断点下载的常见Http交互功能。致力于避免每个项目重复开发基础Http功能，实现显著地缩短开发周期的愿景。</p>
  </li>
  <li>
    <p><a href="https://github.com/kyze8439690/RevealLayout">RevealLayout</a></p>

    <p>附带一些Reveal动画效果的Layout，支持Android4.0以上系统。</p>
  </li>
  <li>
    <p><a href="https://github.com/03uk/CircularReveal">CircularReveal</a></p>

    <p>可以让你在2.3+系统使用Android 5.0的Reveal动画效果的库。</p>
  </li>
  <li>
    <p><a href="https://github.com/pavlospt/RoundedLetterView">RoundedLetterView</a></p>

    <p>仿Android 5.0联系人App的列表效果。</p>
  </li>
  <li>
    <p><a href="http://git.oschina.net/shelwee/UpdateHelper">UpdateHelper</a></p>

    <p>UpdateHelper是一个为了简化Android App的迭代升级开发的Android Library。</p>
  </li>
</ol>

<h3 id="section-2">新闻</h3>

<ol>
  <li>
    <p><a href="http://www.csdn.net/article/2014-11-20/2822732-google-play-android-dev-china">不任性了！Google Play宣布开通国内开发者通道</a></p>

    <p>Google今天宣布，中国的开发者现在可以通过Google Play将付费应用程序向130个国家进行发布。开发者可以利用Google Play发布免费及付费应用程序，并支持应用程序内购买和订阅，收入将汇至开发者在中国本地银行账户。</p>
  </li>
  <li>
    <p><a href="http://linux.cn/article-4249-1.html">安卓编年史(1)</a></p>

    <p>让我们跟着安卓从0.5版本到4.4的无尽迭代来看看它的发展历史。安卓已经以不止一种形式陪伴了我们六年以上。在这段时间内，我们已经看到了不同于任何已有开发周期的，绝对惊人的变化速度。当Google卷入智能手机的战场中时，它拿出了它的快速迭代，Web风格的更新周期，把它们应用到了开发这个操作系统之中，而结果就是突击式的持续改进。</p>
  </li>
</ol>

<h3 id="section-3">视频</h3>

<ol>
  <li>
    <p><a href="http://www.youku.com/playlist_show/id_23094862.html">Google Play 中国开发者中文入门视频</a></p>

    <p>Google Developers 最新发布的 3个 Google Play 中国开发者中文入门视频。教你怎么注册成为Google play开发者。</p>
  </li>
  <li>
    <p><a href="http://v.youku.com/v_show/id_XODMwMjg5Nzg4.html">Tutorial Enhancing Android UI with Custom Views</a></p>

    <p>Android自定义View视频教程，中文字幕，示例源码地址:http://pan.baidu.com/s/1pJp0CIn</p>
  </li>
  <li>
    <p><a href="http://www.youku.com/playlist_show/id_23078962.html">Droidcon London 2014的视频</a></p>

    <p>包含《What’s New in Android》、《Material design &amp; implementation》和《Deep Dive Into the Gradle》这个3个视频，都是来自官方工程师的干货。</p>
  </li>
  <li>
    <p><a href="http://www.infoq.com/cn/presentations/expose-mobile-application-performance">移动应用性能揭秘</a></p>

    <p>目前大部分移动应用都是需要与服务器进行交互的，哪么影响这些应用程序性能的主要因素有哪些？如网络请求、IO操作、多线程等都会对性能产生影响，本议题将分享基调网络在移动应用性能监控中遇到的与移动应用性能提升相关的代码问题，希望能够为程序员开发高性能的应用提供帮助。</p>
  </li>
</ol>

<h3 id="section-4">工具</h3>

<ol>
  <li>
    <p><a href="https://developer.magnet.com">rest2mobile</a></p>

    <p>一个可以将REST services生成Objective-C、Javascript和Java代码的开源工具，并且提供了支持Xcode、Android Studio &amp; IntelliJ IDEA的生成代码的插件以及可以生成iOS，JS和Android跨平台代码的命令行工具。</p>

    <p><img src="http://ww2.sinaimg.cn/bmiddle/8a41f469jw1emk7cqynx7j21cw1660xx.jpg" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://chrome.google.com/webstore/detail/octotree/bkhaagjahfmjljalopjnoealnfndnagc">树形展示 Github 项目代码的Chrome插件</a> （@程序员的那些事）</p>

    <p>国外程序员 Buu Nguyen 做的一个 Chrome 插件，安装之后，浏览托管在Github上的项目，可看到左侧的树形结构，更方便查看代码（有点 IDE 的感觉，用着好来点个赞吧）。</p>

    <p><img src="http://ww4.sinaimg.cn/bmiddle/7cc829d3jw1egep4g1ljcj20h10ae3zy.jpg" alt="image" /></p>
  </li>
  <li>
    <p><a href="http://jgilfelt.github.io/AndroidAssetStudio/icons-launcher.html#foreground.space.trim=1&amp;foreground.space.pad=0&amp;foreColor=E8EAF6%2C0&amp;crop=0&amp;backgroundShape=square&amp;backColor=3F51B5%2C100&amp;effects=none&amp;elevate=0">Android Launcher图标在线生成工具</a></p>

    <p>一个帮助你快速生成Android Launcher图标的在线生成工具，此工具是由Google 的 <a href="https://github.com/romannurik"><code>Roman Nurik</code></a>大神开发的 <a href="https://github.com/romannurik/AndroidAssetStudio"><code>AndroidAssetStudio</code></a> 系列Android资源自动生成工具（包含：）中的其中一个，支持从指定图片、文字和内置的icon生成Android Launcher图标，并且可以设置图标的前景和背景色，缩放类型、图标形状等。</p>

    <p><img src="http://ww4.sinaimg.cn/bmiddle/005GSHYzjw1emit4rrvf7j318g158tds.jpg" alt="image" /></p>
  </li>
  <li>
    <p><a href="http://astralapp.com">Astral</a>（@WillYan）</p>

    <p>可以把你Github上加星的项目进行标签管理，用Github账号授权登陆即可，强迫症患者的福音啊😄。</p>

    <p><img src="http://ww2.sinaimg.cn/bmiddle/5fb87788tw1emils89ritj20x50g6tb2.jpg" alt="image" /></p>
  </li>
  <li>
    <p><a href="http://tools.android.com/download/studio/canary/1-0rc1">Android Studio 1.0 Release Candidate 1</a>	
 这次发布的是Android Studio 1.0候选版，那么距离发布Android Studio 1.0 正式版已经不远喽😄。此次更新主要修复了一些Bug，更换了新的图标和启动界面以及包含了Android Gradle插件所需要的所有依赖，当你新建一个项目的时候就不需要联网了。
 墙内下载地址：<a href="http://www.androiddevtools.cn/#android-studio">http://www.androiddevtools.cn/#android-studio</a></p>
  </li>
  <li>
    <p><a href="https://tinyjpg.com">TinyJPG</a></p>

    <p>一个支持jpg和png格式的图片压缩工具，只压图片的大小而图片的质量不会损失。</p>

    <p><img src="http://ww1.sinaimg.cn/bmiddle/8a41f469jw1emhtewxnysj21kw0imagj.jpg" alt="image" /></p>
  </li>
  <li>
    <p><a href="http://www.appiconsizes.com">IOS and Android App Icon size generator</a></p>

    <p>一键生成iPhone, Android, IOS, Facebook, web touch icons, Blackberry, Windows Phone, Bada and WebOS 等系统App图标的在线工具.</p>
  </li>
  <li>
    <p><a href="http://google.github.io/fplutil/">fplutil</a></p>

    <p>一套可以用于开发Android和其他跨平台应用的库和工具。</p>
  </li>
</ol>

<hr />
<p>版权声明：欢迎自由转载-非商用-非衍生-保持署名 | <a href="http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh">Creative Commons BY-NC-ND 3.0</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android开发周报 Issue#7]]></title>
    <link href="http://www.inferjay.com/blog/2014/11/17/android-dev-weekly-issue-7/"/>
    <updated>2014-11-17T16:31:09+08:00</updated>
    <id>http://www.inferjay.com/blog/2014/11/17/android-dev-weekly-issue-7</id>
    <content type="html"><![CDATA[<h3 id="section">新闻</h3>

<ol>
  <li>
    <p><a href="http://www.csdn.net/article/2014-11-14/2822647-12-great-lollipop-apis/1">盘点最受开发者喜爱的Android 5.0 Lollipop API</a></p>

    <p>作为Android系统的一次重大升级，Android 5.0 Lollipop突出采用全新的Material Design设计语言，不但在视觉和操作上更胜一筹，还包含扩展UI工具包供开发者使用，为应用添加3D实时阴影，可缩放矢量“drawbles”以及流畅的动画效果。本文着重介绍了其中值得开发者深爱的12款API，赶紧一睹为快吧！</p>
  </li>
  <li>
    <p><a href="http://news.cnblogs.com/n/508431/">.NET开源了，VS开始支持Android和iOS编程并自带Android模拟器</a></p>

    <p>北京时间今天凌晨的 Connect (); 大会上，多少程序员的假想成为现实。.NET 开源，集成 Clang 和 LLVM 并且自带 Android 模拟器，这意味着 Visual Studio 这个当下最好没有之一的 IDE 正式支持编写 Android 和 iOS 程序。</p>
  </li>
  <li>
    <p><a href="http://digi.it.sohu.com/20141113/n405991228.shtml">Android 5.0正式开启：Nexus系列最早更新</a>	
 从谷歌给出的公告来看，今天就将会有用户收到Android 5.0的更新提示，而首批设备包含了Nexus 4、Nexus 5、Nexus 7以及Nexus 10。值得一提的是，今天早些时候，摩托罗拉也开始向Moto G的用户提供5.0系统的升级，随后到来的是Moto X，很快LG的G3也将得到系统的升级。</p>
  </li>
</ol>

<h3 id="section-1">文章</h3>

<ol>
  <li>
    <p><a href="http://blog.csdn.net/xiaanming/article/details/41084843#0-tsina-1-26268-397232819ff9a47a7b7e80a40613cfe1">Android 那些你所不知道的Bitmap对象详解</a></p>

    <p>我们知道Android系统分配给每个应用程序的内存是有限的，Bitmap作为消耗内存大户，我们对Bitmap的管理稍有不当就可能引发OutOfMemoryError，而Bitmap对象在不同的Android版本中存在一些差异，今天就给大家介绍下这些差异，并提供一些在使用Bitmap的需要注意的地方。</p>
  </li>
  <li>
    <p><a href="http://greenrobot.me/category/devpost/">如何给你的Android 安装文件（APK）瘦身</a></p>

    <p>Android的apk文件越来越大了这已经是一个不争的事实。在Android 还是最初版本的时候，一个app的apk文件大小也还只有2 MB左右，到了现在，一个app的apk文件大小已经升级到10MB到20MB这个范围了。apk文件大小的爆炸式增长主要是因为用户对app质量的期待越来越高以及开发者的开发经验增长。</p>
  </li>
  <li>
    <p><a href="http://blog.isming.me/tags/material-design/">创建Material Design风格的Android应用系列文章</a></p>

    <p>随着Android 5.0的发布，Android Developer网站也更新了，增加了创建Material Design风格的Android应用指南,也更新了Support Library，在support library增加了一些Material Design风格的控件和动画等，这里给大家简单介绍一下怎样开发aterial Design风格的Android应用。</p>
  </li>
</ol>

<!--more-->

<ol>
  <li>
    <p><a href="http://www.importnew.com/13107.html">从Java代码到字节码（1）</a></p>

    <p>理解Java代码是如何被编译为字节码并在Java虚拟机（JVM）上执行是非常重要的，这将帮助理解你的程序是如何执行的。这样的理解不仅仅能够让你在逻辑上更好的掌握语言特性，而且能够有机会理解在做出重要决定时所需的权衡以及相应的副作用。</p>
  </li>
  <li>
    <p><a href="http://www.pedant.cn/2014/07/04/webview-js-java-interface-research/">在WebView中如何让JS与Java安全地互相调用</a></p>

    <p>在现在安卓应用原生开发中，为了追求开发的效率以及移植的便利性，使用WebView作为业务内容展示与交互的主要载体是个不错的折中方案。那么在这种Hybrid(混合式) App中，难免就会遇到页面JS需要与Java相互调用，调用Java方法去做那部分网页JS不能完成的功能。</p>
  </li>
  <li>
    <p><a href="http://droidyue.com/blog/2014/11/08/understanding-garbage-collection-output-messages-in-android/">译文：理解Android中垃圾回收日志信息</a></p>

    <p>如果你是一名Android开发者并且常常看程序日志的话，你会经常在logcat的调试日志窗口看到像 <code>GC_CONCURRENT freed 178K, 41% free 3673K/6151K, external 0K/0K, paused 2ms+2ms</code> 这样的日志信息，这就是Android系统垃圾回收的部分输出信息，本文将具体介绍这些日志信息的每一部分的含义来帮助帮助大家更好地了解垃圾回收的运行情况。</p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/t12x3456/article/details/40837287">Android 使用android-support-multidex解决Dex超出方法数的限制问题,让你的应用不再爆棚</a></p>

    <p>随着应用不断迭代，业务线的扩展,应用越来越大(比如集成了各种第三方sdk或者公共支持的jar包,项目耦合性高，重复作用的类越来越多)，相信很多人都遇到过如下的错误: <code>java.lang.IllegalArgumentException: method ID not in [0, 0xffff]: 65536 </code> 没错，你的应用中的Dex 文件方法数超过了最大值65536的上限,简单来说，应用爆棚了.</p>
  </li>
</ol>

<h3 id="section-2">代码&amp;开源库</h3>

<ol>
  <li>
    <p><a href="https://github.com/lightSky/MaterialDesignCenter">MaterialDesignCenter</a></p>

    <p>收集整理了Android Material Design相关的设计资源、视频教程、译文教程和开源库等。</p>
  </li>
  <li>
    <p><a href="https://github.com/BlueMor/Android-PullLayout">Android-PullLayout</a></p>

    <p>仿UC天气下拉和微信下拉眼睛</p>

    <p><img src="https://raw.githubusercontent.com/BlueMor/Android-PullLayout/master/screenshoot/123.gif" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/pedant/safe-java-js-webview-bridge">safe-java-js-webview-bridge</a></p>

    <p>抛弃使用高风险的WebView addJavascriptInterface方法，利用onJsPrompt解析纯JSON字符串，来实现网页JS层反射调用Java方法，同时通过对js层调用函数及回调函数的包装，支持方法参数传入所有已知的类型，包括number、string、boolean、object、function。</p>
  </li>
  <li>
    <p><a href="https://github.com/lzyzsd/CircleProgress">CircleProgress</a></p>

    <p>各种样式的自定义圆形进度条。</p>

    <p><img src="https://raw.githubusercontent.com/lzyzsd/CircleProgress/master/demos/circle_progress.gif" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/kyleduo/SwitchButton">SwitchButton</a></p>

    <p>同时支持Material Design和iOS7风格的SwitchButton。</p>

    <p><img src="https://raw.githubusercontent.com/kyleduo/SwitchButton/master/preview/easy_to_style.png" alt="image" /></p>
  </li>
</ol>

<h3 id="section-3">视频</h3>

<ol>
  <li>
    <p><a href="http://www.jikexueyuan.com/course/364.html?hmsr=sina_weibo_VisualStudio">使用Visual Studio 2015开发Android应用</a></p>

    <p>2014年的微软Connect();在线开发者大会在11月12日和11月13日举行。在大会上，微软公布了很多新的特性和功能。其中最吸引人的是.Net开源和Android模拟器。显示了微软更开放的战略思想。并突出了微软CEO移动优先和云优先的理念。</p>
  </li>
</ol>

<h3 id="section-4">工具</h3>

<ol>
  <li>
    <p><a href="https://github.com/akonior/icon-version">icon-version</a></p>

    <p>可以给Android的App图标添加版本号和变种名字的Android gradle插件。</p>

    <p><img src="https://github.com/akonior/icon-version/raw/master/doc/icon-version-screenshot.png" alt="image" /></p>
  </li>
</ol>

<h3 id="section-5">书</h3>

<ol>
  <li>
    <p><a href="http://snowdream86.gitbooks.io/github-cheat-sheet/content/zh/index.html">GitHub秘籍</a></p>

    <p>本秘籍收录了一些Git和Github非常酷同时又少有人知的功能。灵感来自于Zach Holman在2012年Aloha Ruby Conference和2013年WDCNZ上所做的演讲：Git and GitHub Secrets(slides)和More Git and GitHub Secrets(slides)。</p>
  </li>
</ol>

<h3 id="section-6">设计</h3>

<h4 id="section-7">文章</h4>

<ol>
  <li>
    <p><a href="http://mux.baidu.com/?p=3367">切图小贴士</a></p>

    <p>用户手中看到的产品界面，并非设计师呕心沥血创作的效果图，而是一个个单独的切图经由开发同学技术实现。切图作为设计师与开发者之间的桥梁，它的作用很关键，合适的切图、精准的位置可以最大限度的还原效果图的设计，精妙的切图更会有事半功倍的效果哦！	</p>
  </li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android开发周报 Issue#6]]></title>
    <link href="http://www.inferjay.com/blog/2014/11/10/android-dev-weekly-issue-6/"/>
    <updated>2014-11-10T16:45:18+08:00</updated>
    <id>http://www.inferjay.com/blog/2014/11/10/android-dev-weekly-issue-6</id>
    <content type="html"><![CDATA[<h3 id="section">新闻</h3>

<ol>
  <li>
    <p><a href="http://linux.cn/article-4172-1.html">Android 5.0 Lollipop源代码发布</a></p>

    <p>Google将最新的Android 5.0 Lollipop系统源代码上传在公开的<a href="http://source.android.com/source/index.html">Android Open Source Project(AOSP) 库</a>。</p>
  </li>
  <li>
    <p><a href="http://linux.cn/article-4168-1.html">Android 5.0 Lollipop 安全特性详解</a></p>

    <p>Android 5.0 Lollipop 正式版发布在即，根据 Google 的说法，Android 5.0 是 Android 历史上最为重大的版本变更，带来了全新的设计风格，全新的软件运行环境，更好的续航能力以及大量的细节改进。可能关于 Material Design、ART 模式等等新特性你已经有所了解，但是我们今天要聊的是 5.0 的另一个重大变革，关于安全性的改进。</p>
  </li>
  <li>
    <p><a href="http://www.pingwest.com/copresence-is-airdrop-between-android-ios/">Copresence: Google 正为 iOS 和 Android 之间数据通讯架设的桥梁</a></p>

    <p>Google 最近被人发现正在开发的名为「Copresence」的功能，未来很有可能成为跨移动操作系统数据传输的最好解决方案。Copresence 的功能将允许 Android 和 iOS 操作系统设备之间互相传输文件、照片、发送导航定位、文字信息等多种类型的数据——并非通过互联网，而是更加本地化的点对点连接方式。</p>
  </li>
</ol>

<h3 id="section-1">文章</h3>

<ol>
  <li>
    <p><a href="https://github.com/AWCNTT/ArticleTranslateProject/blob/master/translated/Issue%23105/2014-11-06-Creating-a-Cards-UI-on-Android.md">在Android上创建卡片式UI</a></p>

    <p>自从卡片式UI第一次在Google+ app上亮相，这种设计模式在Android社区上开始变得越来越火。很多人都热衷于这种设计模式并在他们的开发中使用。这不只归功于其时尚的外观，还有它实用之处。每张卡片拥有其相关的内容及其内容所触发的动作。换句话来说，每张卡片有它唯一的内容管理机制。</p>
  </li>
  <li>
    <p><a href="http://www.codeceo.com/article/android-adb-shell.html">34个Android常用adb shell命令汇总</a></p>

    <p>调试Android程序有时需要adb shell 命令，adb全称Android Debug Bridge ，就是起到调试桥的作用。通过adb我们可以在Eclipse中通过DDMS来调试Android程序，说白了就是debug工具。adb通过监听Socket TCP 5554等端口让IDE和Qemu通讯。</p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/isming/article/details/26985317"> 使用Gradle构建Android项目</a></p>

    <p>Gradle是以Groovy为基础，面向java应用，基于DSL语法的自动化构建工具。是google引入，替换ant和maven的新工具，其依赖兼容maven和ivy。使用gradle的目的:更容易重用资源和代码；可以更容易创建不同的版本的程序，多个类型的apk包；更容易配置，扩展;更好的IDE集成;</p>
  </li>
  <li>
    <p><a href="http://toughcoder.net/blog/2014/10/26/best-practices-to-support-multiple-screen/">适配多屏幕的最佳实践</a></p>

    <p>对于Android应用开发来讲，比较头疼的，也是比较重要的一个工作就是要尽可能多的支持市场上的Android设备，由于Android的开放性，各种奇奇怪怪的设备都有，符合标准的，不符合标准的，行货，水货，山寨货鱼龙混杂，防不胜防。</p>
  </li>
  <li>
    <p><a href="http://toughcoder.net/blog/2014/10/25/tricks-to-remove-duplicates/">如何有效的减少重复的代码</a></p>

    <p>重复的代码一直都是可维护性的大敌，重构的重要任务之一也就是要去除掉重复的代码，有效的减少重复代码，可以大大提高软件的扩展性。</p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/isming/article/details/39404407">在android中画圆形图片的几种办法</a>	
 在开发中经常会有一些需求,比如显示头像，显示一些特殊的需求,将图片显示成圆角或者圆形或者其他的一些形状。但是往往我们手上的图片或者从服务器获取到的图片都是方形的。这时候就需要我们自己进行处理，将图片处理成所需要的形状。</p>
  </li>
</ol>

<!--more-->

<h3 id="section-2">代码&amp;开源库</h3>

<ol>
  <li>
    <p><a href="https://github.com/ajaysahani/MultiActionTextView">MultiActionTextView</a></p>

    <p>MultiActionTextView 一个textview的开源库，可以分别给TextView中的某几个字设置点击事件。</p>
  </li>
  <li>
    <p><a href="https://github.com/cymcsg/UltimateAndroid">UltimateAndroid</a></p>

    <p>快速开发Android应用的框架，框架目前主要包含的功能有View Injection,ORM,异步网络请求和图片加载，自动化脚本测试,磁盘LRU等功能.同时提供了类似于TripleDes、Webview快速设置、Md5处理、String处理,Https处理等常用工具类，还有超过100多种UI控件效果。</p>
  </li>
  <li>
    <p><a href="https://github.com/MustafaFerhan/DebugLog">DebugLog</a></p>

    <p>DebugLog可以帮你创建更简单和更容易理解的调试日志，能够友好的显示调试信息所在类和函数。</p>
  </li>
  <li>
    <p><a href="https://github.com/rengwuxian/MaterialEditText">MaterialEditText</a></p>

    <p>Material Design风格的EditText。虽然AppCompat v21中也提供了 Material Design 的控件外观支持，其中包括 EditText 。但 AppCompat 中的 EditText 实在有点难用，因为它是通过 colorAccent 来自动为控件着色的，并没有提供设置颜色的api，因此需要通过为控件定制theme的方式来实现自定义控件颜色。 另外，除了外观上的变化， AppCompat 没有提供任何 Google Material Design Spec 中提到的特性。  </p>
  </li>
</ol>

<h3 id="section-3">视频</h3>

<ol>
  <li>
    <p><a href="http://v.youku.com/v_show/id_XODE5NDI1MTI4.html">GoogleFit APIs for Android</a></p>

    <p>来自Google美女工程师的DevBytes系列《GoogleFit APIs for Android》视频共两集,现已搬至优酷，关注Google Fit的可以看内容，不感兴趣内容可以看美女，程序猿们我懂你们的！！！</p>
  </li>
</ol>

<h3 id="section-4">工具</h3>

<ol>
  <li>
    <p><a href="https://github.com/intrications/material-design-icons-adt-template">material-design-icons-adt-template</a></p>

    <p>Android Studio / Eclipse ADT template for including icon resources from <a href="https://github.com/google/material-design-icons">https://github.com/google/material-design-icons</a> in your project.</p>
  </li>
  <li>
    <p><a href="http://tools.android.com/download/studio/canary">Android Studio 0.9.2 Released</a></p>

    <p>Android Studio 0.9.1 released to the canary channel! </p>
  </li>
</ol>

<h3 id="section-5">书</h3>

<ol>
  <li>
    <p><a href="http://it-ebooks.info/book/646/">Pro Android Apps Performance Optimization</a></p>

    <p>Today’s Android apps developers are often running into the need to refine, improve and optimize their apps performances. As more complex apps can be created, it is even more important for developers to deal with this critical issue. </p>
  </li>
</ol>

<h3 id="section-6">设计</h3>

<h4 id="section-7">文章</h4>

<ol>
  <li>
    <p><a href="http://www.ui.cn/project.php?id=30796">熊氏切图法–一键导出App icon</a></p>

    <p>做App设计的小伙伴有没有遇到这种情况呢，同一个icon要输出N种尺寸，用传统的方法批处理调整图片大小比较繁琐，不方便同时整体预览，如果后续修改了设计，又要重复一次这个批处理的过程，有没有一键输出所有尺寸的方法呢？本熊这就给大家推荐一种强大的技巧：智能对象+生成图像资源，是的，本熊不要脸的将其命名为“熊氏切图法”.</p>
  </li>
  <li>
    <p><a href="http://www.ui.cn/project.php?id=30921">UE+UI设计流程之一二三</a></p>

    <p>在做移动端app的设计过程中，经常会碰到一些二次返工或者时间的浪费，在这里分享下自己在项目中的流程经验，供遇到问题的小伙伴们参考。</p>
  </li>
  <li>
    <p><a href="http://www.ui.cn/project.php?id=30538">从Material UI得到的设计感悟</a></p>

    <p>如果你读过Google的Material设计文档，你就会发现其对细节和深度的注重。在文档中你能学到很多东西。其中最为重要的一项，就是其证明了编写复杂视觉风格指南是完全可能的。尽管可能困难重重，但还是可能的。特别是对于Google复杂多样的产品组合来说。</p>
  </li>
  <li>
    <p><a href="http://www.ui.cn/project.php?id=30540">APP规范实例(详细的UI设计方法</a></p>

    <p>设计是无限的，可作为借鉴，这一套UI设计规范，包含了界面布局、颜色、文字规范、按钮规范、图标规范、图片规范、列表规范、控件规范、弹出浮层，超级详细。大家可以借鉴下，学会自己设计一套APP设计规范，成为高级设计师。但是不要生搬硬套，毕竟不是一个产品，总之可参考的价值很高。</p>
  </li>
</ol>

<h4 id="section-8">工具&amp;资源</h4>

<ol>
  <li>
    <p><a href="https://github.com/romashamin/Size-Marks-PS">Size-Marks-PS</a></p>

    <p>Photoshop Javascript插件，可以以新建图层的方式直接在PS中标注尺寸。</p>

    <p><img src="http://ww1.sinaimg.cn/mw1024/4b4d632fgw1elyr9qvsipg20kf08jdjf.gif" alt="image" /></p>
  </li>
  <li>
    <p><a href="http://www.uisdc.com/21-photoshop-plugins-for-designer">高效神器！21款强大实用的PHOTOSHOP扩展插件</a></p>

    <p>21款扩展插件，特别适合网页设计师。这些神器可以让平时复杂繁琐的操作变得更加简单.</p>
  </li>
</ol>

<hr />
<p>版权声明：欢迎自由转载-非商用-非衍生-保持署名 | <a href="http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh">Creative Commons BY-NC-ND 3.0</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android开发周报 Issue#5]]></title>
    <link href="http://www.inferjay.com/blog/2014/11/05/android_dev_weekly_issue_5/"/>
    <updated>2014-11-05T17:45:47+08:00</updated>
    <id>http://www.inferjay.com/blog/2014/11/05/android_dev_weekly_issue_5</id>
    <content type="html"><![CDATA[<h3 id="section">文章</h3>

<ol>
  <li>
    <p><a href="http://blog.csdn.net/xushuaic/article/details/40627389">进入Material Design时代</a></p>

    <p>Material Design是Android 5.0系统的重头戏，并在以后App中将成为一种设计标准，而且随着已支持Android 5.0 Lollipop的Nexus 6的开售，Google希望开发者更快的支持Material Design，连续发了3篇文章，来帮助开发者如何在自己的App 中实现Material Design。并表示：expect Winter 2014 to be a big quarter for design on Android.</p>
  </li>
  <li>
    <p><a href="http://www.liaohuqiu.net/cn/posts/how-does-android-caculate-the-size-of-child-view/">Android中View大小的确定过程</a></p>

    <p>子View有一个期望的尺寸大小，父容器有尺寸大小约束，这两方面的约束协调，用来计算View的大小状态。根据父容器的尺寸状态，以及子View的LayoutParams，可以确定子View的大小和状态：MeasureSpec，并要求子View确定自身大小。调用子View的measure()方法，子View的onMeasure()方法也会被执行。子View在onMeasure()方法中，根据父容器给出的尺寸大小和约束，根据自身情况，确定最终的大小。父容器根据子View的确定的大小，最终确定自身大小。</p>
  </li>
  <li>
    <p><a href="http://www.ticmy.com/?p=329">ScheduledThreadPoolExecutor实现原理</a></p>

    <p>自jdk1.5开始，Java开始提供ScheduledThreadPoolExecutor类来支持周期性任务的调度，在这之前，这些工作需要依靠Timer/TimerTask或者其它第三方工具来完成。但Timer有着不少缺陷，如Timer是单线程模式，调度多个周期性任务时，如果某个任务耗时较久就会影响其它任务的调度；如果某个任务出现异常而没有被catch则可能导致唯一的线程死掉而所有任务都不会再被调度。ScheduledThreadPoolExecutor解决了很多Timer存在的缺陷。</p>
  </li>
  <li>
    <p><a href="http://mogu.io/android-im-design">Android-IM架构设计</a></p>

    <p>文章介绍了蘑菇街开源的IM项目Android客户端的整体架构和消息流程。</p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/vipzjyno1/article/details/23542617">Android 命名规范（提高代码可以读性）</a>	
 刚接触android的时候，命名都是按照拼音来，所以有的时候想看懂命名的那个控件什么是什么用的，就要读一遍甚至好几遍才知道，这样的话，在代码的审查和修改过程中就会浪费不少不必要的时间。如果就是我一个人开发，一个人维护的话还好，可是如果一个项目是团队分工合作，这样让你的同事去看你的代码就更加吃力了，因为大家之间的编程方式不一样，所以，在开发过程中，命名规范统一尤为重要，最好是团队中统一好大家命名方法，这样对于日后的工作会轻松很多。</p>
  </li>
</ol>

<!--more-->

<h3 id="section-1">代码&amp;开源库</h3>

<ol>
  <li>
    <p><a href="https://github.com/liaohuqiu/android-GridViewWithHeaderAndFooter">android-GridViewWithHeaderAndFooter</a></p>

    <p>在HeaderGridView的基础上做了更改，可以addHeaderView()和addFooterView()的GridView来了。用法和ListView一样.</p>
  </li>
  <li>
    <p><a href="https://github.com/torryharris/Skycons">Skycons</a></p>

    <p>一组自定义的天气图标View库。</p>
  </li>
  <li>
    <p><a href="https://github.com/PhilJay/ValueBar">ValueBar</a></p>

    <p>一个漂亮的自定义View。工作原理类似于Seeker。支持API level 11+.</p>
  </li>
  <li>
    <p><a href="https://github.com/percolate/caffeine">caffeine</a></p>

    <p>一个可以加速Android开发的工具库。</p>
  </li>
  <li>
    <p><a href="https://github.com/mogutt">TeamTalk</a></p>

    <p>蘑菇街开源的 IM 项目 TeamTalk，包括 Android、iOS、Win、Mac 客户端以及 Server端、管理后台、环境自动部署，大赞！支持文字、音频、图片、表情、文件传输、屏幕振动、分组等，做聊天的同学可以看看.</p>
  </li>
  <li>
    <p><a href="https://github.com/pedant/sweet-alert-dialog">sweet-alert-dialog</a></p>

    <p>Android版的SweetAlert，清新文艺，快意灵动的甜心弹框。</p>

    <p><img src="https://github.com/pedant/sweet-alert-dialog/raw/master/change_type.gif" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/MobiDevelop/android-split-pane-layout">android-split-pane-layout</a></p>

    <p>可以将2个子View之间的可用空间按照指定比例分割的自定义Layout。</p>
  </li>
</ol>

<h3 id="section-2">视频</h3>

<ol>
  <li>
    <p><a href="https://github.com/KevinChen9117/ikevin">Android DevBytes and Google IO视频</a></p>

    <p>Youtube上的Google IO、跟Android相关的DevBytes、Android Design In Action和跟Android相关的DesignBytes视频，全部是720P的mp4. 包含英文字幕。</p>
  </li>
</ol>

<h3 id="section-3">工具</h3>

<ol>
  <li>
    <p><a href="http://tools.android.com/download/studio/canary">Android Studio 0.9.0 Released</a></p>

    <p>Android Studio 0.9.0 released to the canary channel! 
 这次发布添加了新版本的Android Gradle plugin 0.14.0，此外，修复了一些bug等。</p>
  </li>
  <li>
    <p><a href="https://github.com/matheusjardimb/ios2android">ios2android</a></p>

    <p>一个可以将iOS格式的切图转换为Android格式切图的Python脚本工具。</p>
  </li>
</ol>

<h3 id="section-4">设计</h3>

<h4 id="section-5">工具&amp;资源</h4>

<ol>
  <li>
    <p><a href="http://www.uisdc.com/21-photoshop-plugins-for-designer">高效神器！21款强大实用的PHOTOSHOP扩展插件</a></p>

    <p>21款扩展插件，特别适合网页设计师。这些神器可以让平时复杂繁琐的操作变得更加简单.</p>
  </li>
</ol>

<hr />
<p>版权声明：欢迎自由转载-非商用-非衍生-保持署名 | <a href="http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh">Creative Commons BY-NC-ND 3.0</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android开发周报 Issue#4]]></title>
    <link href="http://www.inferjay.com/blog/2014/10/27/android-dev-weekly-issue-4/"/>
    <updated>2014-10-27T15:42:14+08:00</updated>
    <id>http://www.inferjay.com/blog/2014/10/27/android-dev-weekly-issue-4</id>
    <content type="html"><![CDATA[<h3 id="section">文章</h3>

<ol>
  <li>
    <p><a href="http://blog.csdn.net/innost/article/details/9008691">Android系统性能调优工具介绍</a></p>

    <p>在软件开发过程中，想必很多读者都遇到过系统性能问题。而解决系统性能问题的几个主要步骤是：</p>

    <ul>
      <li>测评：对系统进行大量有针对性的测试，以得到合适的测试数据。</li>
      <li>分析系统瓶颈：分析测试数据，找到其中的hotspot（热点，即bottleneck）。</li>
      <li>性能优化：对hotspot相关的代码进行优化。</li>
    </ul>
  </li>
  <li>
    <p><a href="https://github.com/jsenjoy/introrx-chinese-edition">The introduction to Reactive Programming you’ve been missing – 中文版</a>	</p>

    <p>什么是FRP?在互联网上有着一大堆糟糕的解释与定义。维基百科一如既往的空泛与理论化。Stackoverflow的权威答案明显不适合初学者。Reactive Manifesto看起来是你展示给你公司的项目经理或者老板们看的东西。微软的Rx terminology “Rx = Observables + LINQ + Schedulers” 过于重量级且微软味十足，只会让大部分人困惑</p>
  </li>
  <li>
    <p><a href="http://baoyz.com/android/2014/10/21/android-palette-use/">Android Lollipop 新特性 - Palette</a></p>

    <p>Palette 可以从一张图片中提取颜色，我们可以把提取的颜色融入到App UI中，可以使UI风格更加美观融洽。比如，我们可以从图片中提取颜色设置给ActionBar做背景颜色，这样ActionBar的颜色就会随着显示图片的变化而变化。</p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/t12x3456/article/details/39958755">Android 使用动态加载框架DL进行插件化开发</a></p>

    <p>随着应用的不断迭代，应用的体积不断增大,项目越来越臃肿,冗余增加.项目新功能的添加，无法确定与用户匹配性，发生严重异常往往牵一发而动全身,只能紧急发布补丁版本，强制用户进行更新.结果频繁的更新，反而容易降低用户使用黏性.或者是公司业务的不断发展,同系的应用越来越多,传统方式需要通过用户量最大的主项目进行引导下载并安装.</p>
  </li>
</ol>

<h3 id="section-1">代码&amp;开源库</h3>

<ol>
  <li>
    <p><a href="https://github.com/mihaip/dex-method-counts">dex-method-counts</a></p>

    <p>一个可以统计 <code>.dex</code> 文件中方法个数的命令行工具。</p>
  </li>
  <li>
    <p><a href="https://github.com/demitsuri/smali2java">smali2java</a></p>

    <p>可以将smali代码转换为java代码的工具。</p>

    <p><!--more--></p>
  </li>
  <li>
    <p><a href="https://github.com/navasmdc/MaterialDesignLibrary">MaterialDesignLibrary</a></p>

    <p>可以让你在2.2系统上使用Android L系统才支持的控件效果的库。具体兼容的控件请看项目的介绍。</p>
  </li>
  <li>
    <p><a href="https://github.com/vinaysshenoy/enhanced-volley">enhanced-volley</a></p>

    <p>enhanced-volley是在Volley的基础上进行了扩展，添加了 <code>自定义Http头</code> 、<code>自定义GET请求的URL参数</code> 、<code>给ImageLoader添加了默认的BitmapLruCache实现</code> 、<code>添加了新的可以执行任意你想要的动画的AnimateImageView控件</code> 以及支持 <code>application/octet-stream MIME 类型的文件上传</code> 等功能。</p>
  </li>
</ol>

<h3 id="section-2">小技巧</h3>

<ol>
  <li>
    <p>Android Studio / Intellij Tip of the Day：显示最近更改的文件(@<a href="https://www.google.com/+PhilippeBreault">Philippe Breault</a>)</p>

    <p>快捷键（菜单）： 
 - Mac：Cmd的+ Shift键+ E 
 - Windows / Linux：CTRL + SHIFT + E </p>
  </li>
</ol>

<h3 id="section-3">工具</h3>

<ol>
  <li>
    <p><a href="https://github.com/castorflex/manifestreplace-plugin">manifestreplace-plugin</a></p>

    <p>Gradle plugin to add more placeholders to your manifest.xml.</p>
  </li>
</ol>

<h3 id="section-4">设计</h3>

<h4 id="section-5">文章</h4>

<ol>
  <li>
    <p><a href="http://www.ui.cn/project.php?id=28848">IOS机Android切图标注与命名规范</a></p>

    <p>在项目迭代的过程中，会碰到很多切图替换的问题，怎么去命名？给几个分辨率合适？怎么去标注等。本文把我在版本迭代工作中的一些经验分享给大家，希望能对大家有所作用。</p>
  </li>
  <li>
    <p><a href="http://cdc.tencent.com/?p=8239">图标设计初阶要先型</a></p>

    <p>UI最重要组建之一就是图标，随着扁平化设计的发展趋势，越来越注重图标的简洁与寓意表达，平面图标已占主导地位。每位设计师所处的阶段所关注的要点是不一样的，我把图标设计分为2个阶段–初阶与高阶，这样分是为了有步骤性的学习和进阶的加强，当然，能人的话一步到位，对于新人来讲会较难，需要实际工作中辅导与自己经验总结。</p>
  </li>
</ol>

<h4 id="section-6">工具&amp;资源</h4>

<ol>
  <li>
    <p><a href="https://www.behance.net/gallery/20514895/Material-Design-UI-Kit">Material Design UI Kit for Sketch</a></p>

    <p>A UI Kit for Google’s Material design. Essential if you’re designing for Android.</p>
  </li>
  <li>
    <p><a href="http://icons8.com/app/">Icons8 App</a>	</p>

    <ul>
      <li>Quick search through the icons</li>
      <li>Compatible with Photoshop, Xcode and more</li>
      <li>5000 icons for iOS 7, Windows 8 and Android</li>
    </ul>
  </li>
</ol>

<hr />
<p>版权声明：欢迎自由转载-非商用-非衍生-保持署名 | <a href="http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh">Creative Commons BY-NC-ND 3.0</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android开发周报 Issue#3]]></title>
    <link href="http://www.inferjay.com/blog/2014/10/21/android-dev-weekly-issue-3/"/>
    <updated>2014-10-21T09:26:08+08:00</updated>
    <id>http://www.inferjay.com/blog/2014/10/21/android-dev-weekly-issue-3</id>
    <content type="html"><![CDATA[<h3 id="section">文章</h3>

<ol>
  <li>
    <p><a href="http://www.csdn.net/article/2014-10-05/2821953-instagram-improved-their-apps-performance">Instagram工程师教你如何改善App的性能</a></p>

    <p>扁平化设计由于其简洁的外表，更少的按钮和选项使得界面干净整齐，从而减少认知障碍的产生。扁平化设计更是功能上的简化于与重组，相比于拟物化而言，扁平风格的一个优势就在于它可以更加简单直接的将信息和事物的工作方式展示出来。本文来自Instagram一名工程师的分享。</p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/xushuaic/article/details/40212327">AppCompat V21：将 Materia Design 兼容到5.0之前的设备</a></p>

    <p>本篇文章翻译自Chris Banes(就职于Google，工作内容 Android Developer Relations team)，android 5.0今天发布。在很多很棒的更新中，包括了新的UI组件和创建 Material Design 主题的能力。为了使你能够将新的设计中更新到旧的系统中，我们同时更新了包含 AppCompat 的support libraries。在这篇文章中，我将总体说明一下appCompat的新特性并介绍一下如何应用于你的app中。</p>
  </li>
  <li>
    <p><a href="http://www.codeceo.com/article/android-activity-start.html">Android中Activity启动过程探究</a></p>

    <p>文章从源码一步步分析了Android中Activity的启动过程，步骤很详细。</p>
  </li>
  <li>
    <p><a href="http://www.yangzhiping.com/tech/github.html">如何高效利用GitHub</a></p>

    <p>正是Github，让社会化编程成为现实。本文尝试谈谈GitHub的文化、技巧与影响。</p>
  </li>
  <li>
    <p><a href="http://slides.ngot.me/emoji/index.html#0">跨终端Emoji</a></p>

    <p>由孢子社区 - 庄恒飞分享了饱子社区在跨终端Emoji表情上的一些实践经验。	</p>
  </li>
</ol>

<!--more-->

<ol>
  <li>
    <p><a href="http://blog.csdn.net/qijianke2014/article/details/40041331">优化Android App性能？十大技巧必知！</a></p>

    <p>无论锤子还是茄子手机的不断冒出，Android系统的手机市场占有率目前来说还是最大的，因此基于Android开发的App数量也是很庞大的。那么，如何能开发出更高性能的Android App？相信是软件开发公司以及广大程序员们头疼的一大难题。</p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/minimicall/article/details/39484493">Android开发之多级下拉列表菜单实现（仿美团，淘宝等）</a></p>

    <p>我们在常用的电商或者旅游APP中，例如美团，手机淘宝等等，都能够看的到有那种下拉式的二级列表菜单，我相信很多人都想开发一个跟它一样的功能放到自己的APP中。作者首先分析了该效果的组成结构，然后通过LinearLayout＋ToggleButton＋PopupWindow实现了类似的效果。</p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/lmj623565791/article/details/39670935">Android 实现形态各异的双向侧滑菜单</a></p>

    <p>关于自定义控件侧滑已经写了两篇了，今天决定把之前的单向改成双向，当然了，单纯的改动之前的代码也没意思，今天不仅会把之前的单向改为双向，还会多添加一种侧滑效果，给大家带来若干种形态各异的双向侧滑菜单，不过请放心，代码会很简单，然后根据这若干种，只要你喜欢，相信你可以打造任何绚（bian）丽（tai）效果的双向侧滑菜单。</p>
  </li>
</ol>

<h3 id="section-1">代码&amp;开源库</h3>

<ol>
  <li>
    <p><a href="https://github.com/google/iosched"> Google I/O App</a></p>

    <p>源码已经更新到SDK5.0了，http://t.cn/RvouJFP， 对于最终的Android 5 SDK的更新，包括删除所有产品风格缺陷 使用appcompat和android.support.v7.widget.Toolbar带来更多的# material design兼容到Lollipop之前的设备 更新导航抽屉分层等</p>
  </li>
  <li>
    <p><a href="https://coding.net/u/yoojia/p/FireEye/git">FireEye</a></p>

    <p>Android校验库 - Fire Eye 简单易用的Android校验库。 这是一个简单Android校验库，按配置来验证用户输入的表单信息。 只需要几行代码，即可验证用户输入，并且将验证错误反馈给用户。 它内置了大量常用的验证类型，足以满足你的功能需求。 它还有一个可扩展的验证选项，你可以通过扩展接口添加你需要的验证方式。</p>
  </li>
  <li>
    <p><a href="https://github.com/twotoasters/multi-column-list-adapter">multi-column-list-adapter</a></p>

    <p>MultiColumnListAdapter是一个CursorAdapter的子类，它可以使你的ListView看起来像一个GridView，并且还可以给列表添加header和footer。</p>
  </li>
  <li>
    <p><a href="https://github.com/lecho/hellocharts-android">hellocharts-android</a></p>

    <p>一个兼容API 8+(Android 2.2)图表库，当硬件加速可用的时候工作状态最好，因此推荐在API 14+(Android 4.0)以上使用。</p>
  </li>
  <li>
    <p><a href="https://github.com/flavienlaurent/tickplusdrawable">tickplusdrawable</a></p>

    <p>通过canvas rotation + line translations实现的I/O 2014 app中对号和加号切换的效果。</p>
  </li>
</ol>

<h3 id="section-2">小技巧</h3>

<p>1.一行命令检查代码是否有addJavascriptInterface安全隐患(<a href="http://weibo.com/p/1005051869137113">@杨辉__</a>)</p>

<pre><code>grep -r -n -i --include=*.java addJavascriptInterface *  
</code></pre>

<h3 id="section-3">视频</h3>

<ol>
  <li>
    <p><a href="http://v.youku.com/v_show/id_XODA1ODAyNzc2.html"> From Holo to Material</a></p>

    <p>介绍了如何从现有的Holo风格升级到Material风格以及在升级的过程中需要注意的地方等待。</p>
  </li>
  <li>
    <p><a href="http://v.youku.com/v_show/id_XODA1ODY5NTYw.html"> What’s new in Android 5.0 Lollipop </a></p>

    <p>介绍了Android 5.0 Lollipop的新特性。</p>
  </li>
</ol>

<h3 id="section-4">新闻</h3>

<ol>
  <li>
    <p><a href="http://www.infoq.com/cn/news/2014/10/android-5.0-release">Android 5.0正式版发布，代号“棒棒糖”</a></p>

    <p>Android L是Google在今年6月份的Google I/O开发者大会上正式推出的最新Android系统。近日，Google发布了Android L的正式版即Android 5.0，该版本延续了此前甜品命名的传统，命名为Lollipop（棒棒糖）。Android的主管 Sundar Pichai在Google官方博客中写道，Lollipop是Android迄今为止最重大的版本更新，在用户视觉、用户体验、功能等方面都有重大的改进。Lollipop最明显的改变是采用了全新的设计语言，被称之为“Material Design”。
. </p>
  </li>
</ol>

<h3 id="section-5">设计</h3>

<h4 id="section-6">文章</h4>

<ol>
  <li>
    <p><a href="https://medium.com/@kennycheny/creating-your-first-prototype-with-framer-c39221da7668">Creating Your First Prototype with Framer</a></p>

    <p>一步步教你在Framer Studio中创建自己的第一个交互原型..</p>
  </li>
</ol>

<h4 id="section-7">工具&amp;资源</h4>

<ol>
  <li>
    <p><a href="https://github.com/google/material-design-icons">Material Design的图标</a></p>

    <p>伴随着Android 5.0 Lollipop（棒棒糖）的发布，Google也在Github开源了Material Design的图标, 包含多种尺寸。主要包含了：</p>

    <ul>
      <li>SVG versions of all icons in both 24px and 48px flavours</li>
      <li>SVG and CSS sprites of all icons</li>
      <li>1x, 2x icons targeted at the Web (PNG)</li>
      <li>1x, 2x, 3x icons targeted at iOS (PNG)</li>
      <li>Hi-dpi versions of all icons (hdpi, mdpi, xhdpi, xxhdpi, xxxhdpi) (PNG)</li>
    </ul>
  </li>
</ol>

<hr />
<p>版权声明：欢迎自由转载-非商用-非衍生-保持署名 | <a href="http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh">Creative Commons BY-NC-ND 3.0</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android开发周报 Issue#2]]></title>
    <link href="http://www.inferjay.com/blog/2014/10/12/android-dev-weekly-issue-2/"/>
    <updated>2014-10-12T09:52:49+08:00</updated>
    <id>http://www.inferjay.com/blog/2014/10/12/android-dev-weekly-issue-2</id>
    <content type="html"><![CDATA[<h3 id="section">文章</h3>

<ol>
  <li>
    <p><a href="http://blog.csdn.net/maosidiaoxian/article/category/2380095">Andriod Studio科普篇</a></p>

    <p>作者记录了自己在使用Android Studio时做的一些个性化设置，踩到的一些坑等等。</p>
  </li>
  <li>
    <p><a href="http://tech.meituan.com/mt-apk-packaging.html">美团Android自动化之旅—生成渠道包</a></p>

    <p>文章介绍了三种打渠道包的方式。目前，Android团队打包基本使用第三种方式，完成了打包的自动化，解放了工程师的生产力，善哉善哉。打包的问题解决了，但有时候还需要为不同的渠道定制不同的APK。	</p>
  </li>
  <li>
    <p><a href="http://tech.meituan.com/mt-apk-adaptation.html">美团Android自动化之旅—适配渠道包</a></p>

    <p>文章介绍了如何使用Android构建利器Gradle的flavor特性来定制渠道包。</p>
  </li>
  <li>
    <p><a href="http://tech.meituan.com/packet_forwarding.html">如何把Android手机变成一个WIFI下载热点? — 报文转发及DNS报文拦截</a>	</p>

    <p>随着wifi的普及，移动运营商的热点也越来越多了，如中国移动的CMCC、中国电信的ChinaNet、中国联通的ChinaUnicom等，一般来说，连上此类的热点，打开浏览器上网时都会自动跳转到一个验证页面，最近有个项目也有类似的需求，Android手机自建热点，别的手机wifi连接此热点，打开浏览器，输入任意内容，自动跳转到一个下载列表页面，点击相应的链接即可下载相应的文件。</p>
  </li>
  <li>
    <p><a href="http://stormzhang.github.io/posts.html#Activity">Android通过Wifi来调试你的应用</a></p>

    <p>在Android中调试我们经常要用一根USB数据线连接到手机和电脑，一方面麻烦不说，手机一直连着电脑充电时间长了对手机也是一种伤害，另一方面如果哪一天忘记带USB数据线就很悲催了。今天就来教大家一种通过wifi来连接手机调试的方法，瞬间高大上有木有？而且不需要root，以后你就可以隔空给你公司的测试妹子安装/卸载apk了。</p>
  </li>
  <li>
    <p><a href="http://stormzhang.github.io/posts.html#Activity">Activity生命周期详解系列</a></p>

    <p>文章第一部分结合官方的Activity生命周期流程图讲解了各个生命周期方法的执行顺序，第二部分结合一些特定的使用场景分析了Activity的生命周期，第三部分讲解了onSaveInstanceState和onRestoreInstanceState这两个方法的作用。</p>
  </li>
</ol>

<!--more-->

<h3 id="section-1">代码&amp;开源库</h3>

<ol>
  <li>
    <p><a href="https://github.com/kongnanlive/android-combination-avatar">android-combination-avatar</a></p>

    <p>网易工程师实现的模仿QQ讨论组头像叠加效果的控件</p>

    <p><img src="https://github.com/kongnanlive/android-combination-avatar/raw/master/screenshots/screenshot1.jpg" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/Polidea/RoboSpock">RoboSpock</a> </p>

    <p>RoboSpock是一个Android的测试框架，它可以让你非常快的在JVM上运行单元测试，而无需启动任何仿真器或进行任何部署。</p>
  </li>
  <li>
    <p><a href="https://github.com/gcacace/android-signaturepad">android-signaturepad</a></p>

    <p>一个可以平滑的绘制签名的自定义View。</p>

    <p><img src="https://github.com/gcacace/android-signaturepad/raw/master/header.png" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/sromku/android-simple-storage">android-simple-storage</a></p>

    <p>这个库可以让你使用简单的Api在内部或者外部磁盘空间上创建、读取、删除、附加、加密文件等等。</p>
  </li>
  <li>
    <p><a href="https://github.com/cundong/ZhihuPaper">ZhihuPaper</a></p>

    <p>一个「知乎日报」Android 客户端</p>

    <p><img src="https://raw.githubusercontent.com/cundong/ZhihuPaper/master/screenshot/one.png" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/cundong/SmartAppUpdates">Smart App Updates</a></p>

    <p>Android App 增量更新实例</p>
  </li>
  <li>
    <p><a href="https://github.com/chalup/cerberus">cerberus</a></p>

    <p>Android library for detecting and reporting long running SQLite queries.</p>
  </li>
  <li>
    <p><a href="https://github.com/ideaismobile/AKParallax-Android">AKParallax-Android</a></p>

    <p>一个可以为ScrollView或者ListView添加视差滚动效果的库。</p>
  </li>
  <li>
    <p><a href="https://github.com/johnkil/Android-Icon-Fonts">Android-Icon-Fonts</a></p>

    <p>Material和Holo风格的图标字体.</p>

    <p><img src="https://raw.githubusercontent.com/johnkil/Android-Icon-Fonts/master/Art/android-icon-fonts.png" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/castorflex/SmoothProgressBar">SmoothProgressBar</a></p>

    <p>平滑的进度条。</p>

    <p><img src="https://raw.githubusercontent.com/castorflex/SmoothProgressBar/master/screenshots/SPB_sample.gif" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/jgilfelt/SystemBarTint">SystemBarTint</a></p>

    <p>Apply background tinting to the Android system UI when using KitKat translucent modes。</p>

    <p><img src="https://camo.githubusercontent.com/fbbeaab2048f78e2d4974bb1559544c9f22eccae/68747470733a2f2f7261772e6769746875622e636f6d2f6a67696c66656c742f53797374656d42617254696e742f6d61737465722f73637265656e73686f742e706e67" alt="image" />	</p>
  </li>
  <li>
    <p><a href="https://github.com/chiragjain/Emoticons-Keyboard">Emoticons-Keyboard</a></p>

    <p>带表情情符号的自定义键盘。</p>

    <p><img src="https://raw.githubusercontent.com/chiragjain/Emoticons-Keyboard/master/s2.png" alt="image" />
 <img src="https://raw.githubusercontent.com/chiragjain/Emoticons-Keyboard/master/s3.png" alt="image" /></p>
  </li>
</ol>

<h3 id="section-2">工具</h3>

<ol>
  <li>
    <p><a href="http://www.androiddevtools.cn">Android Studio 0.8.12 Released</a></p>

    <p>主要更新：</p>

    <ul>
      <li>一个全新的AVD管理器，新的AVD管理器与IDE的集成更紧密了。例如，当你试图去运行一个App时，你可以快速直接地从运行对话框中创建Nexus5或7的Nexus AVD。在这个新的AVD列表里，你可以查看和编辑AVD（你可以看到每个AVD使用多少磁盘空间），你也可以启动AVD等。你还可以很容易在现有的这些默认基础硬件上创建新的AVD，而且，在不同的类别，如手机，平板电脑，耐磨，电视。一旦你选择了硬件，你可以配置特定的架构和Android版本。最后，你可以选择一个显示名称，默认方向，GPU/快照选项 - 或者更高级的设置，例如外部存储等大小。</li>
      <li>当创建新的项目，我们现在默认使用HTTPS而不是HTTP的Gradle wrapper。我们还增加了一个lint（和的quickfix）警告如何在现有项目中使用HTTP。</li>
      <li>如果你喜欢手动编辑配置XML文件（使用XML编辑器，而不是图形化的布局编辑器），你现在可以通过点击版面编辑或布局预览窗口上方工具栏中的选项图标，并选择“首选的XML编辑器“，一旦选择了，新创建的布局将在XML编辑器中打开，而不是在布局编辑器中打开。</li>
      <li>翻译编辑器现在可以在字符串编辑器中工作了。</li>
      <li>Android项目视图现在是默认选择。您可以通过右键点击上面的项目视图的下拉列表切换回普通的项目视图。</li>
      <li>现在，您可以在XML中使用的quickfix导入工具命名空间：<code>tools：</code> 前缀，然后IDE将提供插入相应的命名空间声明,同样，<code>Android：</code> 前缀它导入了Android的命名空间，而不是显示所有可用的命名空间，并要求你选择一个.</li>
      <li>一些Bug修复 </li>
    </ul>
  </li>
  <li>
    <p><a href="https://github.com/NetEase/Emmagee/releases">Emmagee</a>		
 Emmagee是网易推出的一个实用的、便利的Android App性能测试工具，Emmagee推出了2.0版本，作为一次重大的升级，2.0版本主要在UI以及用户体验上做了优化，同时提供国际化的支持(感谢国际用户的反馈)，希望本次更新给各位带来更优质的用户体验。</p>
  </li>
  <li>
    <p><a href="http://gt.tencent.com/index.html">GT</a></p>

    <p>GT（随身调）是APP的随身调测平台，它是直接运行在手机上的“集成调测环境”(IDTE, Integrated Debug&amp;Test Environment)。利用GT，仅凭一部手机，无需连接电脑，您即可对APP进行快速的性能测试(CPU、内存、流量、电量、帧率/流畅度等等)、开发日志的查看、Crash日志查看、网络数据包的抓取、APP内部参数的调试、真机代码耗时统计等等；更重要的是，您可以在任意真实场所、任何时候做如上的系列事情，这就是“APP的场测”。如果您觉得GT提供的功能还不够满足您的需要，您还可以利用GT提供的基础API自行开发有特殊功能的GT插件（目前，仅iOS版支持），帮助您解决更加复杂的APP调试、测试问题。 </p>
  </li>
</ol>

<h3 id="section-3">视频</h3>

<ol>
  <li>
    <p><a href="http://www.infoq.com/cn/presentations/android-client-architecture-evolution-and-impact-on-development-process#0-tsina-1-70270-397232819ff9a47a7b7e80a40613cfe1">微信Android客户端架构演进及其对开发流程的影响</a></p>

    <p>微信ANDROID客户端的架构演进史，可以说是一个典型ANDROID应用在从小到大的成长过程中的“踩坑”与“填坑”的历史。从1.0版本安装包的354KB，到今天5.3版本的24.1MB，从最开始两三个码农的突击作业，到今天的“集团军”开发力量，微信的体量在不断增大，开发同学遇到的“成长的烦恼”也越来越多： 为什么微信收消息又延迟了？</p>
  </li>
</ol>

<h3 id="section-4">书</h3>

<ol>
  <li>
    <p><a href="http://www.it-ebooks.info/book/2445/">50 Android Hacks</a></p>

    <p>这本书分12部分介绍了50个Android开发中的小技巧。</p>
  </li>
</ol>

<h3 id="section-5">新闻</h3>

<ol>
  <li>
    <p><a href="http://cn.engadget.com/2014/10/09/google-android-l-64-bit/">谷歌发布x86 64位Android L模拟器</a></p>

    <p>【Google Android L 模拟器已经准备好了，开发者可以开发 64 位应用】Google 公布了 x86 64-bit Android L developer preview 的模拟器映像档已经开放给开发者下载，让有意的开发者可以准备着手开发新世代的应用程序。</p>
  </li>
</ol>

<h3 id="section-6">设计</h3>

<h4 id="section-7">文章</h4>

<ol>
  <li>
    <p><a href="http://www.ui.cn/project.php?id=26650">图标设计之尺规作图全过程</a></p>

    <p>国外上年纪大品牌的Logo都是尺规作图做出来的，因为最开始电脑不发达的时候，制作标志都是手工做的，没有尺规制图，没法制作。后来这些品牌出名了，Logo成为了典范，尺规作图也成了一个logo规范与否的标准。</p>
  </li>
  <li>
    <p><a href="http://bjango.com/articles/actions/">Photoshop Actions &amp; Workflows</a></p>

    <p>文章介绍了自己在过去的几年里建立了一套自己每天都在使用的Photoshop Actions以及工作流程。</p>
  </li>
  <li>
    <p><a href="http://bjango.com/articles/appdesignworkflow/">My app design workflow</a></p>

    <p>作者完整的介绍了自己在做iOS，Android和Mac的应用程序设计的工作流程，从你第一次打开Photoshop开始，到应用程序发布。</p>
  </li>
  <li>
    <p><a href="https://medium.com/android-design/latest">Understanding Material Design</a></p>

    <p>作者分Material is the metaphor、Authentic Motion和Skeuomorphism vs Flat Design这个三个主题分析讲解了自己对Material Design的理解。</p>
  </li>
  <li>
    <p><a href="http://zhuanlan.zhihu.com/TingTalk/19865937">导航抽屉到底归属于哪个层级?</a></p>

    <p>当导航抽屉成为 Google 设计规范的一部分时, Google 明确告诉我们该这么做, 而且提供了可以让开发者直接调用的工具.难道说 Google 在一开始的时候犯了个错误? 也许第一眼看上去这样做是对的, 但是从规范上看来确实是有些问题的.</p>
  </li>
  <li>
    <p><a href="http://www.ui.cn/project.php?id=17636">2014交互设计工具革新之年</a></p>

    <p>在这一年里，我们见到了很多新颖的交互设计工具和原型设计工具。工具旨在提高我们的工作效率，改善我们的工作流程，诸多新兴的工具造就了相关的讨论团体和设计，且这些工具，大大缩短了设计成本，现在，高保真的原型设计更简便了。</p>
  </li>
  <li>
    <p><a href="http://www.zhihu.com/question/25812945/answer/31495421">如何看待 Google 让自家应用的 iOS 版与 Android 版统一使用 Material Design ？</a></p>

    <p>国内例如 腾讯QQ 等一些 App 的 Android版 完全照搬 iOS 版的 UI ，这个一直饱受很多同学的诟病，如今 Google 刚好反过来了，把自家 App 的 iOS 版刻意做的和 Android 版一致。</p>
  </li>
</ol>

<h4 id="section-8">工具</h4>

<ol>
  <li>
    <p><a href="http://www.astutegraphics.com/software/subscribe/">SubScribe</a></p>

    <p>一款增强绘图功能的AI插件，这个插件能轻易解决直线和圆、圆与圆的精准相切[外切内切]等问题。</p>
  </li>
</ol>

<hr />
<p>版权声明：欢迎自由转载-非商用-非衍生-保持署名 | <a href="http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh">Creative Commons BY-NC-ND 3.0</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android开发周报 Issue#1]]></title>
    <link href="http://www.inferjay.com/blog/2014/09/23/android-dev-weekly-issue-1/"/>
    <updated>2014-09-23T22:36:14+08:00</updated>
    <id>http://www.inferjay.com/blog/2014/09/23/android-dev-weekly-issue-1</id>
    <content type="html"><![CDATA[<h3 id="section">文章</h3>

<ol>
  <li>
    <p><a href="https://github.com/fex-team/http2-spec/blob/master/HTTP2中英对照版(06-29).md">HTTP2协议中英对照版</a></p>

    <p>HTTP 全称为 HyperText Transfer Protocol，中文叫做超文本传输协议。用于 Web 应用层传输，是 Web 架构的核心，它至今公布有 3 个版本：HTTP 0.9、HTTP 1.0、HTTP 1.1，作为与时俱进的我们，有必要去了解和学习 HTTP 2，它对我们未来 Web 性能优化工作起到很重要的作用，是一切优化的基础。现 Chrome 里也已使用 SPDY。</p>

    <p>由百度FEX团队的 zhangtao 等同学们，业余花费近半年时间翻译的 HTTP 2 草案发布。</p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/morgan_xww/article/details/9372285#comments">Android TouchEvent事件传递机制</a></p>

    <p>作者通过列举通俗易懂的例子和打印日志的方式讲解了Android TouchEvent事件传递机制。		</p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/guolin_blog/article/details/9097463">Android事件分发机制完全解析，带你从源码的角度彻底理解(上)</a>	</p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/loongggdroid/article/details/19118475">Android事件分发机制完全解析，带你从源码的角度彻底理解(下)</a></p>
  </li>
</ol>

<h3 id="section-1">代码&amp;开源库</h3>

<ol>
  <li>
    <p><a href="https://github.com/nhachicha/SnappyDB">SnappyDB</a></p>

    <p>一个Android平台的 <code>key-value</code> 数据库，在 <code>读/写</code> 操作方面可以完胜 SQLite。 下图就是它们在 <code>读/写</code> 方面的对比测试结果：</p>

    <p><img src="https://camo.githubusercontent.com/0f6193a1f84aa8a77d07ac18d3566b87bc89999b/687474703a2f2f736e6170707964622e636f6d2f696d672f62656e63686d61726b5f73716c6974655f776974685f7472616e73616374696f6e2e706e67" alt="image" /></p>
  </li>
</ol>

<!--more-->

<ol>
  <li>
    <p><a href="https://github.com/kikoso/AppRate-for-Android">AppRate-for-Android</a> </p>

    <p>AppRate for Android是一个以不打扰用户的方式允许用户对您的应用程序进行评价。一个窗口中选择评价、稍后提醒还是拒绝进行评价。</p>

    <p><img src="https://camo.githubusercontent.com/f84466fd21066bad1ba7c47224f8f351a21d2361/68747470733a2f2f7261772e6769746875622e636f6d2f6b696b6f736f2f417070526174652d666f722d416e64726f69642f6d61737465722f6172742f73637265656e73686f742e706e67" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/emmano/BlurStickyHeaderListView">BlurStickyHeaderListView</a> </p>

    <p>ListView with blur/parallax/sticky capabilities</p>
  </li>
  <li>
    <p><a href="https://github.com/2359media/EasyAndroidAnimations">EasyAndroidAnimations</a> </p>

    <p>Easy Android Animations is an animation library that aims to make android animations easier, with 50+ builtin animations, it allows you to introduce many complex animation effects in your application with one or two lines of code.</p>
  </li>
  <li>
    <p><a href="https://github.com/MrEngineer13/SnackBar">SnackBar</a></p>

    <p>toast-like alert pattern for Android</p>

    <p><img src="https://camo.githubusercontent.com/67a39af16f3d46631567c1f7bd7dcddeb3c4c9e9/687474703a2f2f6d6174657269616c2d64657369676e2e73746f726167652e676f6f676c65617069732e636f6d2f696d616765732f636f6d706f6e656e74732d746f617374732d73706563732d737065635f746f6173745f30335f315f6c617267655f6d6470692e706e67" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/Instagram/ig-json-parser">ig-json-parser</a></p>

    <p>一个由Instagram团队实现的快速JSON解析器。</p>
  </li>
  <li>
    <p><a href="https://github.com/marvinlabs/android-floatinglabel-widgets">android-floatinglabel-widgets</a></p>

    <p>浮动标签输入组件，当输入框不为空的时候可以在其上方显示一个提示标签。</p>

    <p><img src="https://camo.githubusercontent.com/ae02c8934861e7fcc10661cfed79f7276dfe06b7/687474703a2f2f696d672e796f75747562652e636f6d2f76692f68705a4439674a635267302f302e6a7067" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/traex/CalendarListview">CalendarListview</a></p>

    <p>在ListView中实现了一个日历，每行显示一个月。</p>

    <p><img src="https://github.com/traex/CalendarListview/raw/master/demo.gif" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/emmaguy/clean-status-bar">clean-status-bar</a></p>

    <p>在你获取屏幕截图之前帮你清空Android Status bar的小工具。</p>

    <p><img src="https://raw.githubusercontent.com/emmaguy/clean-status-bar/master/images/before.png" alt="image" /><img src="https://raw.githubusercontent.com/emmaguy/clean-status-bar/master/images/after.png" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/geekcompany/ResumeSample">ResumeSample</a></p>

    <p>程序员简历模板系列。包括PHP程序员简历模板、iOS程序员简历模板、Android程序员简历模板、Web前端程序员简历模板、Java程序员简历模板、C/C++程序员简历模板、NodeJS程序员简历模板、架构师简历模板以及通用程序员简历模板 
http://get.jobdeer.com/744.get</p>
  </li>
  <li>
    <p><a href="https://github.com/imbryk/LoopingViewPager">LoopingViewPager</a></p>

    <p>一个Android ViewPager扩展可以无限滚动。</p>
  </li>
  <li>
    <p><a href="https://github.com/AltBeacon/android-beacon-library">android-beacon-library</a></p>

    <p>这是一个提供了与Beacons进行交互Api的库。</p>
  </li>
  <li>
    <p><a href="https://github.com/RatioLabs/BLEService">BLEService</a></p>

    <p>一个Android蓝牙低功耗Service库，主要实现了以下几个Feature：</p>

    <ul>
      <li>Implements BLE as an android service</li>
      <li>Requests done via AIDL with a service connection</li>
      <li>Responses sent via BroadcastReceivers</li>
      <li>Allows persistent device interface cross-activity.</li>
      <li>Hides all the nasty stuff</li>
      <li>Wraps Bluetooth classes in parcelable classes so they can be passed between activities.</li>
      <li>Less than 20 calls on a single object</li>
      <li>Supports connection retries</li>
    </ul>
  </li>
</ol>

<h3 id="section-2">工具</h3>

<ol>
  <li>
    <p><a href="https://github.com/evant/gradle-retrolambda">gradle-retrolambda</a></p>

    <p>一个可以在java 6，7和android中获得java lambda特性的gradle插件。</p>
  </li>
  <li>
    <p><a href="http://www.androiddevtools.cn">Android Studio 0.8.11</a></p>

    <p>Android Studio又如期的发布了更新，本次更新有如下几点：</p>

    <ul>
      <li>
        <p>支持了新版的Android Gradle plugin (0.13)，新版插件支持Gradle 2.1。</p>
      </li>
      <li>
        <p>Lint工具检查出的错误可以在文本扩展提示框中显示完整的错误解释说明了，以帮助你快速的解决问题。</p>
      </li>
      <li>
        <p>layout editor会检查,以确保你有最新版本的“layoutlib”。</p>
      </li>
      <li>
        <p>从IntelliJ 13.1.5 RC合并了最新的改动，其中一个改动是改变了Android Studio.app bundle的目录结构。</p>
      </li>
      <li>
        <p>修复了一些Bug。</p>
      </li>
    </ul>
  </li>
  <li>
    <p><a href="https://github.com/vladikoff/chromeos-apk">chromeos-apk</a></p>

    <p>一个可以让Android应用在Chrome OS, OS X, Linux 和 Windows系统上运行的小工具。</p>
  </li>
</ol>

<h3 id="section-3">书</h3>

<ol>
  <li>
    <p><a href="http://it-ebooks.info/book/2445/">50 Android Hacks</a></p>

    <p>本书讲解了50个Android开发的小技巧。</p>
  </li>
</ol>

<h3 id="section-4">设计</h3>

<ol>
  <li>
    <p><a href="http://lab.rayps.com/lc/">LayerCraft</a></p>

    <p>A Photoshop plugin to export UI assets from layers。</p>
  </li>
</ol>

<hr />
<p>版权声明：欢迎自由转载-非商用-非衍生-保持署名 | <a href="http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh">Creative Commons BY-NC-ND 3.0</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Keytool 错误 java.io.IOException: Incorrect AVA Format]]></title>
    <link href="http://www.inferjay.com/blog/2014/09/23/android-keytool-incorrect-ava-format-error/"/>
    <updated>2014-09-23T19:45:35+08:00</updated>
    <id>http://www.inferjay.com/blog/2014/09/23/android-keytool-incorrect-ava-format-error</id>
    <content type="html"><![CDATA[<p>今天在打包的时候碰到了 <code>keytool 错误 java.io.IOException: incorrect AVA format</code> 错误，还以为是混淆规则加的有问题导致的，看日志窗口也没有任何错误日志，只好请出Google大神，Google的一下错误信息，发现是有由于在创建Keystore时填写的 <code>First and Last Name</code> 、<code>Organizational Unit</code> 、<code>Organization</code> 、 <code>City or Locality</code> 、<code>State or Province</code> 等信息中是不允许有 <code>,</code> 符号的，将这些信息中的逗号去掉后就可以了。</p>

<p><img src="http://www.inferjay.com/images/notes_images/incorrect-AVA-format-error.png" alt="image" title="incorrect AVA format Error" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android开发周报 Issue#0]]></title>
    <link href="http://www.inferjay.com/blog/2014/09/15/android-weekly-issue-0/"/>
    <updated>2014-09-15T10:35:31+08:00</updated>
    <id>http://www.inferjay.com/blog/2014/09/15/android-weekly-issue-0</id>
    <content type="html"><![CDATA[<h3 id="section">文章</h3>

<ol>
  <li>
    <p><a href="http://blog.csdn.net/luoshengyang/article/details/37613135">SEAndroid安全机制框架分析</a></p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/singwhatiwanna/article/details/22597587">Android apk动态加载机制的研究</a></p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/singwhatiwanna/article/details/38168103">Android View系统解析(上)</a></p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/singwhatiwanna/article/details/38426471">Android View系统解析(下)</a></p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/cym492224103/article/details/39177275">Android仿QQ5.0侧滑菜单ResideMenu源码分析</a></p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/lmj623565791/article/details/39102591">Android ViewGroup事件分发机制 </a></p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/a396901990/article/details/38904543">ANDROID内存优化(大汇总——全)</a></p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/lmj623565791/article/details/38067475">Android 属性动画（Property Animation） 完全解析 （上）</a></p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/lmj623565791/article/details/38092093">Android 属性动画（Property Animation） 完全解析 （下）</a></p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/lmj623565791/article/details/37970961">Android Fragment 真正的完全解析（上）</a></p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/lmj623565791/article/details/37992017">Android Fragment 真正的完全解析（下）</a></p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/a396901990/article/details/34139157">利用&amp;,^,~,«,»&gt;写出高效艺术的代码</a></p>
  </li>
</ol>

<h3 id="section-1">技巧</h3>

<ol>
  <li>
    <p><a href="http://blog.csdn.net/maosidiaoxian/article/details/38300627">Fragment的懒加载</a></p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/maosidiaoxian/article/details/39156563">去掉TextView中autolink的下划线</a></p>
  </li>
</ol>

<!--more-->

<h3 id="section-2">代码&amp;开源库</h3>

<ol>
  <li>
    <p><a href="https://github.com/109021017/GridViewPager">GridViewPager</a> </p>

    <p>一个自适应横竖屏的网格ViewPager。</p>

    <p><img src="https://camo.githubusercontent.com/e6523106882ba44ae41e9fd1b95c1a4b701015b6/68747470733a2f2f7261772e6769746875622e636f6d2f3130393032313031372f477269645669657750616765722f6d61737465722f73637265656e73686f74732f30332e706e67" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/Glamdring/EasyCamera">EasyCamera</a> </p>

    <p>作者重新封装了Andorid Camera的api，使Camera的Api使用起来方便和简单。</p>
  </li>
  <li>
    <p><a href="https://github.com/siyamed/android-shape-imageview">android-shape-imageview</a> </p>

    <p>一个可以自定义各种形状的ImageView, 并且支持边框。</p>
  </li>
  <li>
    <p><a href="https://github.com/matthewrkula/SecretTextView">SecretTextView</a> </p>

    <p>实现了文字淡入/淡出效果.</p>

    <p><img src="https://camo.githubusercontent.com/bbb38412d3ae652f565556711e7aa6db67ebb4c7/68747470733a2f2f692e696d67666c69702e636f6d2f39356d39312e676966" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/xuchdeid/LiveBlurListView">LiveBlurListView</a></p>

    <p>Sample to show how to implement live blur for Android ViewGroup。</p>
  </li>
  <li>
    <p><a href="https://github.com/Manabu-GT/EtsyBlur">EtsyBlur</a> </p>

    <p>一个可以让你在自己的App里轻松实现毛玻璃模糊效果的库。</p>

    <p><img src="https://raw.github.com/Manabu-GT/EtsyBlur/master/art/readme_demo.gif" alt="image" />	</p>
  </li>
  <li>
    <p><a href="https://github.com/dodola/WaterFallExt">WaterFallExt</a> </p>

    <p>增强版的瀑布流 扩展自StaggeredGridView.</p>
  </li>
  <li>
    <p><a href="https://github.com/sockeqwe/CircleProgressView">CircleProgessView</a> </p>

    <p>一个实现了Android L progressbar效果的圆形进度条。</p>

    <p><img src="https://raw.githubusercontent.com/sockeqwe/CircleProgressBar/master/gif/demo.gif" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/thuytrinh/android-collage-views">android-collage-views</a></p>

    <p>一个实现了可自由拖动、旋转和缩放的ImageView。</p>
  </li>
</ol>

<h3 id="section-3">设计</h3>

<ol>
  <li>
    <p><a href="https://github.com/timroes/android-ps-tools">android-ps-tools</a></p>

    <p>一些方便Android UI设计的PhototShop插件。</p>
  </li>
  <li>
    <p><a href="https://github.com/marcosecchi/android_resizer_toolkit">android_resizer_toolkit</a></p>

    <p>A tool for batch resizing images for Android in Photoshop CS5/CS6</p>
  </li>
</ol>

<hr />
<p>版权声明：欢迎自由转载-非商用-非衍生-保持署名 | <a href="http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh">Creative Commons BY-NC-ND 3.0</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mac OSX 10.9.4下使用Homebrew安装MongoDB]]></title>
    <link href="http://www.inferjay.com/blog/2014/07/18/use-homebrew-install-mongodb-at-the-mac-osx-10.9.4/"/>
    <updated>2014-07-18T00:09:28+08:00</updated>
    <id>http://www.inferjay.com/blog/2014/07/18/use-homebrew-install-mongodb-at-the-mac-osx-10.9.4</id>
    <content type="html"><![CDATA[<h2 id="homebrew">安装Homebrew</h2>

<blockquote>
  <p>Homebrew是Mac OSX下一个包依赖管理工具，用它来安装软件非常的方便只需要<code>brew install 软件名</code>这一条命令就可以将你所需要的软件安装好，不用再操心安装过程中软件的依赖问题，这些问题Homebrew统统帮你搞定，Homebrew的官网：<a href="http://brew.sh/">http://brew.sh/</a>  在官网上对Homebrew的安装和用法有详细的描述这里就不多扯了。如果你还没有安装，还等什么赶紧动手安装吧！:]</p>
</blockquote>

<p>Homebrew安装方法也很简单：打开终端，然后输入命令</p>

<pre><code>ruby -e "$(curl -fsSL https://raw.github.com/mxcl/homebrew/go)"
</code></pre>

<p>对，就是这么简单一条命令就可以将神器Homebrew安装好.</p>

<h2 id="mongodb">安装MongoDB</h2>

<blockquote>
  <p>MongoDB是一个基于分布式文件存储的数据库。由C++语言编写。旨在为WEB应用提供可扩展的高性能数据存储解决方案。
MongoDB是一个介于关系数据库和非关系数据库之间的产品，是非关系数据库当中功能最丰富，最像关系数据库的。他支持的数据结构非常松散，是类似json的bson格式，因此可以存储比较复杂的数据类型。Mongo最大的特点是他支持的查询语言非常强大，其语法有点类似于面向对象的查询语言，几乎可以实现类似关系数据库单表查询的绝大部分功能，而且还支持对数据建立索引.</p>
</blockquote>

<p>进入正题开始用Homebrew安装主角MongoDB～～～</p>

<p>在终端输入如下命令即可安装MongoDB</p>

<pre><code>brew install mongodb
</code></pre>

<p>用Homebrew安装软件是不是很爽，耐心等待一会儿MongoDB就会安装好了……</p>

<!--more-->

<h2 id="mongodb-1">测试MongoDB是否安装成功</h2>

<p>在终端输入如下命令进行测试</p>

<pre><code>mongod
</code></pre>

<p><strong><code>mongod</code></strong>命令是用来启动MongoDB的服务的</p>

<p>执行<code>mongos</code>命令后返回了一堆错误信息，如下：</p>

<pre><code>mongod --help for help and startup options
2014-07-17T21:34:21.732+0800 [initandlisten] MongoDB starting : pid=13117 port=27017 	dbpath=/data/db 64-bit host=zhcmacbook-pro.local
2014-07-17T21:34:21.732+0800 [initandlisten] db version v2.6.3
2014-07-17T21:34:21.732+0800 [initandlisten] git version: nogitversion
2014-07-17T21:34:21.732+0800 [initandlisten] build info: Darwin minimavericks.local 13.2.0 	Darwin Kernel Version 13.2.0: Thu Apr 17 23:03:13 PDT 2014; root:xnu-2422.100.13~1/	RELEASE_X86_64 x86_64 BOOST_LIB_VERSION=1_49
2014-07-17T21:34:21.732+0800 [initandlisten] allocator: tcmalloc
2014-07-17T21:34:21.732+0800 [initandlisten] options: {}
2014-07-17T21:34:21.733+0800 [initandlisten] exception in initAndListen: 10296
*********************************************************************
 	ERROR: dbpath (/data/db) does not exist.
 	Create this directory or give existing directory in --dbpath.
 	See http://dochub.mongodb.org/core/startingandstoppingmongo
*********************************************************************
, terminating
2014-07-17T21:34:21.733+0800 [initandlisten] dbexit:
2014-07-17T21:34:21.733+0800 [initandlisten] shutdown: going to close listening sockets...
2014-07-17T21:34:21.733+0800 [initandlisten] shutdown: going to flush diaglog...
2014-07-17T21:34:21.733+0800 [initandlisten] shutdown: going to close sockets...
2014-07-17T21:34:21.733+0800 [initandlisten] shutdown: waiting for fs preallocator...
2014-07-17T21:34:21.733+0800 [initandlisten] shutdown: lock for final commit...
2014-07-17T21:34:21.733+0800 [initandlisten] shutdown: final commit...
2014-07-17T21:34:21.733+0800 [initandlisten] shutdown: closing all files...
2014-07-17T21:34:21.733+0800 [initandlisten] closeAllFiles() finished
2014-07-17T21:34:21.733+0800 [initandlisten] dbexit: really exiting now
</code></pre>

<p>这么一堆错误信息，重点是这几句</p>

 	ERROR: dbpath (/data/db) does not exist.
 	Create this directory or give existing directory in –dbpath.
 	See http://dochub.mongodb.org/core/startingandstoppingmongo

<p>错误信息的意思是<code>dbpath (/data/db)</code>不存在，需要创建<code>/data/db</code>这个目录或者使用<code>--dbpath</code>参数项指定一个已经存在的目录。</p>

<pre><code>dbpath (/data/db)这个目录是用来存储MongoDB数据文件的地方
</code></pre>

<p>既然不存在<code>/data/db</code>那我们就创建这个目录</p>

<p>首先在终端输入<code>cd /</code>命令返回到磁盘根目录</p>

<p>然后输入<code>mkdir -p /data/db</code>创建<code>/data/db</code></p>

<p>再次输入<code>mongos</code>命令启动MongoDB的服务，服务又退出了返回一堆信息如下：</p>

<pre><code>mongod --help for help and startup options
2014-07-17T23:56:40.285+0800 [initandlisten] MongoDB starting : pid=21182 port=27017 	dbpath=/data/db 64-bit host=zhcmacbook-pro.local
2014-07-17T23:56:40.285+0800 [initandlisten] db version v2.6.3
2014-07-17T23:56:40.285+0800 [initandlisten] git version: nogitversion
2014-07-17T23:56:40.285+0800 [initandlisten] build info: Darwin minimavericks.local 13.2.0 	Darwin Kernel Version 13.2.0: Thu Apr 17 23:03:13 PDT 2014; root:xnu-2422.100.13~1/	RELEASE_X86_64 x86_64 BOOST_LIB_VERSION=1_49
2014-07-17T23:56:40.285+0800 [initandlisten] allocator: tcmalloc
2014-07-17T23:56:40.285+0800 [initandlisten] options: {}
2014-07-17T23:56:40.287+0800 [initandlisten] exception in initAndListen: 10309 Unable to 	create/open lock file: /data/db/mongod.lock errno:13 Permission denied Is a mongod 	instance already running?, terminating
2014-07-17T23:56:40.287+0800 [initandlisten] dbexit:
2014-07-17T23:56:40.287+0800 [initandlisten] shutdown: going to close listening sockets...
2014-07-17T23:56:40.287+0800 [initandlisten] shutdown: going to flush diaglog...
2014-07-17T23:56:40.287+0800 [initandlisten] shutdown: going to close sockets...
2014-07-17T23:56:40.287+0800 [initandlisten] shutdown: waiting for fs preallocator...
2014-07-17T23:56:40.287+0800 [initandlisten] shutdown: lock for final commit...
2014-07-17T23:56:40.287+0800 [initandlisten] shutdown: final commit...
2014-07-17T23:56:40.287+0800 [initandlisten] shutdown: closing all files...
2014-07-17T23:56:40.288+0800 [initandlisten] closeAllFiles() finished
2014-07-17T23:56:40.288+0800 [initandlisten] shutdown: removing fs lock...
2014-07-17T23:56:40.288+0800 [initandlisten] couldn't remove fs lock errno:9 Bad file 	descriptor
2014-07-17T23:56:40.288+0800 [initandlisten] dbexit: really exiting now
</code></pre>

<p>出错原因是这几句log</p>

<pre><code>create/open lock file: /data/db/mongod.lock errno:13 Permission denied Is a mongod 	instance already running?, terminating
</code></pre>

<p>意思是不创建和打开<code>/data/db/mongod.lock</code>这个文件，原因是<strong><code>Permission denied</code></strong>（权限拒绝），看来是当前用户执行<code>mongod</code>这个命令时，对<code>/data/db</code>这个目录没有操作权限，OK，知道原因就好办了，给<code>/data/db</code>加上权限。</p>

<p>在终端输入如下命令：</p>

<pre><code>sudo chown -R  当前登录的用户名 /data
</code></pre>

<p>再次在终端输入<code>mongod</code>启动MongoDB的服务，返回如下信息：</p>

<pre><code>mongod --help for help and startup options
2014-07-18T01:29:23.286+0800 [initandlisten] MongoDB starting : pid=22420 port=27017 	dbpath=/data/db 64-bit host=zhcmacbook-pro.local
2014-07-18T01:29:23.286+0800 [initandlisten] db version v2.6.3
2014-07-18T01:29:23.286+0800 [initandlisten] git version: nogitversion
2014-07-18T01:29:23.286+0800 [initandlisten] build info: Darwin minimavericks.local 13.2.0 	Darwin Kernel Version 13.2.0: Thu Apr 17 23:03:13 PDT 2014; root:xnu-2422.100.13~1/	RELEASE_X86_64 x86_64 BOOST_LIB_VERSION=1_49
2014-07-18T01:29:23.286+0800 [initandlisten] allocator: tcmalloc
2014-07-18T01:29:23.287+0800 [initandlisten] options: {}
2014-07-18T01:29:23.288+0800 [initandlisten] journal dir=/data/db/journal
2014-07-18T01:29:23.288+0800 [initandlisten] recover : no journal files present, no 	recovery needed
2014-07-18T01:29:23.437+0800 [initandlisten] waiting for connections on port 27017
</code></pre>

<p>终于启动成功了，然后再打开一个新的终端窗口输入<code>mongo</code>命令，返回如下信息：</p>

<pre><code>MongoDB shell version: 2.6.3
connecting to: test
Welcome to the MongoDB shell.
For interactive help, type "help".
For more comprehensive documentation, see
http://docs.mongodb.org/
Questions? Try the support group
http://groups.google.com/group/mongodb-user
&gt;
</code></pre>

<p>哦耶！，成功进入MongoDB的命令行模式，到这里MongoDB就安装好了！:] :] :]……</p>

<hr />
<p>版权声明：欢迎自由转载-非商用-非衍生-保持署名 | <a href="http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh">Creative Commons BY-NC-ND 3.0</a></p>

]]></content>
  </entry>
  
</feed>
