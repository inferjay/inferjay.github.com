<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[脉脉不得语的技术博客]]></title>
  <link href="http://www.inferjay.com/atom.xml" rel="self"/>
  <link href="http://www.inferjay.com/"/>
  <updated>2015-08-16T01:01:39+08:00</updated>
  <id>http://www.inferjay.com/</id>
  <author>
    <name><![CDATA[inferjay]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Android NDK Preview]]></title>
    <link href="http://www.inferjay.com/blog/2015/08/16/android-ndk-preview/"/>
    <updated>2015-08-16T00:48:52+08:00</updated>
    <id>http://www.inferjay.com/blog/2015/08/16/android-ndk-preview</id>
    <content type="html"><![CDATA[<p>We’ve just released another update to Android Studio 1.3’s canary channel, Release Candidate 1.</p>

<p>This build contains a big new feature: Android NDK support, with support for editing, running and debugging C and C++ code! Note however that NDK support is only preview quality, and will remain in preview status for the upcoming final 1.3 release. There are many significant limitations (described below), but we hope that the preview will be useful for many Android NDK developers even in its current state!</p>

<h3 id="limitations">Limitations</h3>

<p>First, the Android NDK support only works with the new experimental Gradle plugin for Android (which in turn requires Gradle 2.5, released yesterday.)</p>

<p>While the new gradle plugin delivers some major performance improvements (and Android NDK build support), note that it also requires changes to the build file “DSL” (the way your build is described in your build.gradle files.) Not only will you need to modify your build.gradle files (a process we hope to automate before the plugin graduates from experimental to stable), but we anticipate making some additional incompatible changes along the way.</p>

<!--more-->

<p>Second, note also that Android Studio has not yet been updated to fully handle the experimental plugin. This means that for example the Project Structure Dialog, and various quick fixes which automatically update the build data, do not work correctly. You’ll need to edit your build.gradle files manually to configure your projects. As another example, the various templates which update the build files (such as New Module), have not yet been updated.</p>

<p>Finally, there are still some known bugs in this build; when debugging with LLDB breakpoints do not always work on Windows; if you run into this, you can switch to GDB debugging as a temporary workaround.</p>

<h3 id="bundled-android-ndk">Bundled Android NDK</h3>

<p>Historically, the Android NDK was distributed separately from the Android SDK, as a giant .zip file download, and installed in a separate location from where the Android SDK resides.</p>

<p>In this release we’ve tried to unify this; the NDK should now be installed under the SDK home in “ndk-bundle”. We’ve updated the IDE built-in SDK Manager to let you install the NDK in the right place, and the Project Structure Dialog’s SDK Location panel (where you can edit the locations), now also offers a quick link to install it directly; just click on the Download hyperlink shown below:</p>

<p>Note that the NDK is a large download (~1 GB!) so unless you have a really great network connection, prepare to be patient…</p>

<p>Speaking of large downloads, note also that the IDE update patches from previous 1.3 builds to this one are really large: not only does this build contain all the new code to support Android NDK development, but it also contains LLDB binaries (~200 MB uncompressed). This is just a temporary situation; we’ll move these into the NDK.</p>

<h3 id="how-to-get-started">How to get started</h3>

<p>Since the Android NDK support depends on an experimental plugin, with an incompatible build file syntax which we know will change over the next few months, we have not added a simple way to create Android NDK projects. Instead, to explore the Android NDK support, either</p>

<ol>
  <li>
    <p>Follow the <a href="http://tools.android.com/tech-docs/new-build-system/gradle-experimental">Experimental Gradle Plugin</a> document which describes how to modify your project to use the current version of the experimental plugin, or</p>
  </li>
  <li>
    <p>Check out some of the existing Android NDK samples which have been updated to work with the new Gradle plugin.</p>
  </li>
</ol>

<p>To check out the samples, invoke VCS &gt; Checkout from Version Control &gt; Git, and in the resulting dialog point to <a href="https://github.com/googlesamples/android-ndk.git">https://github.com/googlesamples/android-ndk.git</a> . Pick a location to check out the samples into. <strong>NOTE:</strong> At the end of the import the IDE will ask you whether you want to create a project from the checked out sources. Answer no. The android-ndk git project contains a large number of separate projects. Instead, once the import is done, go to File &gt; Open…, and navigate to (for example) the Teapot folder and select the file build.gradle in that folder. The project will now be opened and synced. This will take a while the first time as the new Gradle plugin and dependencies are downloaded. When you’re done you can look at the project sources and start exploring the IDE support for Android NDK.</p>

<p>For example, in the Project View you’ll see that the project has a “jni” source set next to the normal “java” source set; that’s where you’ll find the native code:</p>

<p><img src="http://www.inferjay.com/images/notes_images/ndk-jni-folder.png" alt="ndk-jni-folder" /></p>

<p>You can now build &amp; run the project, and explore the various editing features:</p>

<ul>
  <li>Code completion</li>
  <li>Code navigation (go to declaration, jump between header and implementation, etc)</li>
  <li>Quick fixes</li>
  <li>Intentions</li>
  <li>Refactoring</li>
  <li>Source format
…</li>
</ul>

<p><img src="http://www.inferjay.com/images/notes_images/ndk-jni-editor-small.png" alt="ndk-jni-editor-small" /></p>

<h3 id="debugging">Debugging</h3>

<p>To debug the project, you’ll need to create a <strong>native</strong> run configuration. Invoke Run &gt; Edit Configurations…, then choose the Native configuration type:</p>

<p><img src="http://www.inferjay.com/images/notes_images/ndk-native.png" alt="ndk-native" /></p>

<p>Name the configuration, and choose the module to run. If you run into bugs with the LLDB debugger in this version of the IDE, you can try switching to the GDB debugger instead as a workaround.</p>

<p><img src="http://www.inferjay.com/images/notes_images/ndk-native2.png" alt="ndk-native2" /></p>

<p>原文链接：<a href="http://tools.android.com/tech-docs/android-ndk-preview">http://tools.android.com/tech-docs/android-ndk-preview</a></p>

<hr />
<p>版权声明：版权归原网站所有。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android开发技术周报 Issue#22]]></title>
    <link href="http://www.inferjay.com/blog/2015/03/09/android-dev-weekly-issue-22/"/>
    <updated>2015-03-09T14:13:42+08:00</updated>
    <id>http://www.inferjay.com/blog/2015/03/09/android-dev-weekly-issue-22</id>
    <content type="html"><![CDATA[<h3 id="section">教程</h3>

<ol>
  <li>
    <p><a href="http://www.91ri.org/12472.html">如何检测一个APP：从解密到批量获取他人信息</a></p>

    <p>在挖掘Android App的web端漏洞时，遇到一些看起来安全性做的比较好的应用会对http请求也会加密，这篇文章作者就提供了一个不错的基本的解决思路：反编译获取加密方式-》解密 -》添加logcat直接输出加密的内容。</p>
  </li>
  <li>
    <p><a href="http://www.cnblogs.com/tianzhijiexian/p/4301113.html">用Path来绘制一些图形</a></p>

    <p>Path是android中用来封装几何学路径的一个类，因为Path在图形绘制上占的比重还是相当大的。你可以用它来绘制各种样式的几何图形，做图表什么的都可以。</p>
  </li>
  <li>
    <p><a href="http://android.jobbole.com/80668/">用PageTransformer打造更好的动画效果</a></p>

    <p>Android的ViewPager类已经变成一个相当流行的Android应用组件了。它简单直观，并且提供了极好的功能。你可以经常在设置向导，图片画廊种看到它，它还是分开应用内容的良好方式。标准的ViewPager实现工作得非常出色，但是在Google工作的牛人创建了名为PageTransformer的类。</p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/innost/article/details/44081147">深入理解Android之Java Security（第一部分）</a></p>

    <p>从事Android工作4年以来，只有前1年不到的时间是用C++在开发东西（主要是开发DLNA组件，目前我已将它们全部开源，参考http://blog.csdn.net/innost/article/details/40216763），后面的工作几乎都在用Java。自以为Java相关的东西都见过了，可前段时间有个朋友给我花了1个多小时讲解他们某套系统的安全体系结构，其中涉及到很多专业术语，比如Message Digest（消息摘要）、Digital Signature（数字签名）、KeyStore（恕我不知道翻译成什么好，还是用英文原称吧）、CA（Certificate Authority）等。</p>
  </li>
</ol>

<!--more-->

<ol>
  <li>
    <p><a href="http://blog.csdn.net/guolin_blog/article/details/42318689"> Android最佳性能实践(三)——高性能编码优化</a></p>

    <p>在前两篇文章当中，我们主要学习了Android内存方面的相关知识，包括如何合理地使用内存，以及当发生内存泄露时如何定位出问题的原因。那么关于内存的知识就讨论到这里，今天开始我们将学习一些性能编码优化的技巧。这里先事先提醒大家一句，本篇文章中讨论的编码优化技巧都是属于一些“微优化”，也就是说即使我们都按照本篇文章的技巧来优化代码，在性能方面也是看不出有什么显著的提升的。</p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/icedream_hong/article/details/44103083">这些高效的Android注解，你有使用过么？</a></p>

    <p>介绍几个support library 19.1中的注解:1.<code>Nullness annotations</code> 2.<code>Resource type annotations</code> 3.<code>IntDef and StringDef annotations</code>, 这几个注解在项目中非常有用，而且library本身也是用了这些注解。让我们来研究下。</p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/lzyzsd/article/details/44094895">深入浅出RxJava(二：操作符)</a></p>

    <p>在<a href="http://blog.csdn.net/lzyzsd/article/details/41833541">第一篇blog</a>中，我介绍了RxJava的一些基础知识，同时也介绍了map()操作符。当然如果你并没有意愿去使用RxJava我一点都不诧异，毕竟才接触了这么点。看完这篇blog，我相信你肯定想立即在你的项目中使用RxJava了，这篇blog将介绍许多RxJava中的操作符，RxJava的强大性就来自于它所定义的操作符。</p>
  </li>
  <li>
    <p><a href="http://www.csdn.net/article/2015-02-13/2823958">Java开发者易犯错误Top10</a></p>

    <p>在Java中，有些事物如果不了解的话，很容易就会用错，如数组转换为数组列表、元素删除、Hashtable和HashMap、ArrayList和LinkedList、Super和Sub构造函数等，如果这些对你来说是陌生的，你可以在本文中了解它们。</p>
  </li>
  <li>
    <p><a href="http://www.jamespan.me/blog/2015/02/09/guava-basic-utilities-2/">Guava 是个风火轮之基础工具(2)</a></p>

    <p>Guava 是 Java 开发者的好朋友。虽然我在开发中使用 Guava 很长时间了，Guava API 的身影遍及我写的生产代码的每个角落，但是我用到的功能只是 Guava 的功能集中一个少的可怜的真子集，更别说我一直没有时间认真的去挖掘 Guava 的功能，没有时间去学习 Guava 的实现。</p>
  </li>
  <li>
    <p><a href="http://www.jianshu.com/p/a387269a8a43">配置 Android 签名的 gradle 插件</a></p>

    <p>使用本插件可以让所有的开发机以及持续交付设备使用完全相同的代码进行工作.
避免陷入本地配置兼容性的泥淖中, 防止私密信息泄露. 解决的问题:1.签名文件路径这样的本地信息独立配置 2.签名文件密钥与代码仓库隔离, 与开发隔离 3.便于持续交付</p>
  </li>
</ol>

<h3 id="section-1">代码&amp;开源库</h3>

<ol>
  <li>
    <p><a href="https://github.com/ShogoMizumoto/ZDepthShadowLayout">ZDepthShadowLayout</a></p>

    <p>支持Z轴阴影的Layout。</p>

    <p><img src="https://raw.githubusercontent.com/ShogoMizumoto/ZDepthShadowLayout/master/demo.gif" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/pedrovgs/Algorithms">Algorithms</a></p>

    <p>常见算法问题的Java实现.</p>
  </li>
  <li>
    <p><a href="https://github.com/chenupt/SpringIndicator">SpringIndicator</a></p>

    <p>模仿Morning Routine的引导页效果.</p>

    <p><img src="https://raw.githubusercontent.com/chenupt/SpringIndicator/master/img/si_1.0.0.gif" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/hedaode/SmartProxy">SmartProxy</a></p>

    <p>安卓下的智能代理。</p>
  </li>
  <li>
    <p><a href="https://github.com/Flipboard/GoldenGate">GoldenGate</a>	
 Flipboard开源一个通过注解生成类型安全的javascript bindings (Bridges)的库。</p>
  </li>
  <li>
    <p><a href="https://github.com/hzsweers/palettehelper">palettehelper</a></p>

    <p>用Kotlin实现的可以根据图片生成color palettes的android app。</p>
  </li>
  <li>
    <p><a href="https://github.com/stuxuhai/jpinyin">jpinyin</a>	
 JPinyin是一个汉字转拼音的Java开源类库，在PinYin4j的功能基础上做了一些改进。
 【JPinyin主要特性】</p>

    <ol>
      <li>准确、完善的字库；
 Unicode编码从4E00-9FA5范围及3007（〇）的20903个汉字中，JPinyin能转换除46个异体字（异体字不存	在标准拼音）之外的所有汉字；</li>
      <li>拼音转换速度快；
 经测试，转换Unicode编码从4E00-9FA5范围的20902个汉字，JPinyin耗时约100毫秒。</li>
      <li>多拼音格式输出支持；
 JPinyin支持多种拼音输出格式：带音标、不带音标、数字表示音标以及拼音首字母输出格式；</li>
      <li>常见多音字识别；
 JPinyin支持常见多音字的识别，其中包括词组、成语、地名等；</li>
      <li>简繁体中文转换</li>
    </ol>
  </li>
</ol>

<h3 id="section-2">工具</h3>

<ol>
  <li>
    <p><a href="https://github.com/dodocat/AndroidSigning">AndroidSigning</a></p>

    <p>AndroidSigning是一个可以方便你配置和管理Android签名信息的Gradle插件，使用本插件可以让所有的开发机以及持续交付设备使用完全相同的代码进行工作.避免陷入本地配置兼容性的泥淖中, 防止私密信息泄露. </p>
  </li>
</ol>

<h3 id="section-3">新闻</h3>

<ol>
  <li>
    <p><a href="http://www.oschina.net/news/60292/google-vr-android">Google 正在研发支持虚拟现实设备的安卓系统</a></p>

    <p>两名熟悉谷歌虚拟现实安卓项目人士透露，在Facebook以20亿美元收购Oculus VR之后，谷歌组建了一个工程师团队来开发支持虚拟现实应用的安卓版本。他们说谷歌有“几十名工程师”及其他员工在从事这个项目。谷歌计划免费发布这个新的为虚拟现实设备定制的安卓系统。谷歌的免费策略使安卓系统成为最多人使用的智能手机系统，但谷歌为智能手表打造的安卓系统则到目前为止一直不太成功，搭载这个系统的设备销量平平</p>
  </li>
</ol>

<h3 id="section-4">视频</h3>

<ol>
  <li>
    <p><a href="http://t.cn/Rw3kQum">Analytics Academy 四套中文课程视频</a></p>

    <p>Analytics Academy 四套中文课程视频已搬到优酷 ，感兴趣的可以学习一下。Google Analytics 不仅可以做网站分析，也可以做移动分析，至少海外可用吧.教程官网:<a href="http://t.cn/8s6kHjY">http://t.cn/8s6kHjY</a> 。</p>
  </li>
  <li>
    <p><a href="http://www.infoq.com/cn/presentations/alloykit-qq-hybrid-app-optimizing-ideas?utm_source=infoq&amp;utm_medium=videos_homepage&amp;utm_campaign=videos_row1">AK(AlloyKit)—手机QQ Hybrid app 优化新思路</a></p>

    <p>无线移动终端的兴起，引发业界 Native app 和 Web app 选型大讨论。随着终端机器性能的不断提升，结合 Web 和 Native 的 Hybrid app 在体验上逐渐得到改善和认可，并以其不可替代的快速迭代能力，在大量的场景中获得广泛的运用。如手Q 中群部落、吃喝玩乐、主题中心等核心业务。AK（AlloyKit）是一套高性能的 Hybrid Web 业务的技术架构体系，能够使 Web 项目快速拥有 Web 资源离线化、JS Api、诊断分析、自动种入登录态和续期、DNS管理、开发者工具、关键性能数据上报等特性。目前 AK 已经手机QQ、PC QQ、手机空间、手机QQ音乐 4 大平台级产品进行运用，超过 4 个 BG 的 200 个业务接入。本次分享将详细解密 AK 的核心模块实现细节。</p>
  </li>
  <li>
    <p><a href="http://www.infoq.com/cn/presentations/write-high-quality-gradle-script?utm_source=infoq&amp;utm_medium=videos_homepage&amp;utm_campaign=videos_row1">Gradle脚本的整洁之道—编写高质量的Gradle脚本</a></p>

    <p>本演讲介绍Gradle既可以通过Maven的约定来构建Java项目，也可以像Ant一样灵活的处理和Maven约定不一致的Java项目。虽然Gradle抛弃了冗余的XML，但是我们在使用Groovy脚本和DSL编写Gradle脚本的时候，仍然有重复代码。本演讲还介绍如何利用Gradle的特性通过Project、Task在脚本级别重用代码以及通过Plugin在项目之间重用代码，编写Clean的构建脚本。</p>
  </li>
</ol>

<h3 id="section-5">设计</h3>

<ol>
  <li>
    <p><a href="http://colachan.com/post/3416">material design学习笔记</a></p>

    <p>自从material design发布以来，可乐橙就在一直收集相关素材与资源，研究别人的作品。这套设计风格非常鲜明，带有浓郁的Google式严谨和理性哲学，深得我心。实际上，光是研究素材和别人作品，就能发现一些明显的规律，做出几分相似的设计。这样半吊子的状态一直保持到现在，最近有时间通读一遍官方的设计指南，终于有了深入的理解。在朋友的项目中实践了一番，虽然很抱歉拿朋友开刀，不过他对整体效果似乎还算满意。</p>
  </li>
</ol>

<hr />
<p>版权声明：欢迎自由转载-非商用-非衍生-保持署名 | <a href="http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh">Creative Commons BY-NC-ND 3.0</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android开发技术周报 Issue#21]]></title>
    <link href="http://www.inferjay.com/blog/2015/03/02/android-dev-weekly-issue-21/"/>
    <updated>2015-03-02T13:50:42+08:00</updated>
    <id>http://www.inferjay.com/blog/2015/03/02/android-dev-weekly-issue-21</id>
    <content type="html"><![CDATA[<h3 id="section">教程</h3>

<ol>
  <li>
    <p><a href="http://stormzhang.com/android/2015/03/01/android-reference-local-aar">Android模块化编程之引用本地的aar</a></p>

    <p>随着项目越来越多，代码的复用就变得异常重要，这时候就要进行模块化编程，就是把一些通用的组件或者类库做成单独的模块，其他项目直接进行引用就好。针对Android开发最常见的就是Android Library，在Gradle出现之前引用Android Library的方式也很繁琐，但是有了Gradle一切变得非常简单方便。</p>
  </li>
  <li>
    <p><a href="http://blog.aaapei.com/article/2013/12/wei-xin-de-jsbridgeshi-xian">微信的jsbridge实现</a></p>

    <p>android的webview api中有开放过一个addJavaScriptInterface函数,这个函数的作用是在页面的Window中注入一个JS对象,如果你的应用中使用了这个api,建议先看一下国内安全领域第一人黑哥的这篇文章<a href="http://hi.baidu.com/hi_heige/item/9baf99f063331d58c9f3379a">android webview 漏洞背后的节操</a>.</p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/xiaanming/article/details/42833893">Android单点触控技术，对图片进行平移，缩放，旋转操作</a></p>

    <p>相信大家使用多点对图片进行缩放，平移的操作很熟悉了，大部分大图的浏览都具有此功能，有些app还可以对图片进行旋转操作，QQ的大图浏览就可以对图片进行旋转操作，大家都知道对图片进行缩放，平移，旋转等操作可以使用Matrix来实现，Matrix就是一个3X3的矩阵，对图片的处理可分为四个基础变换操作，Translate(平移变换)、Rotate(旋转变换）、Scale (缩放变换)、Skew（错切变换）.</p>
  </li>
</ol>

<!--more-->

<ol>
  <li>
    <p><a href="http://blog.csdn.net/xiaanming/article/details/42396507">Android 性能优化之使用MAT分析内存泄露问题</a></p>

    <p>我们平常在开发Android应用程序的时候，稍有不慎就有可能产生OOM，虽然JAVA有垃圾回收机，但也不能杜绝内存泄露，内存溢出等问题，随着科技的进步，移动设备的内存也越来越大了，但由于Android设备的参差不齐，可能运行在这台设备好好的，运行在那台设备就报OOM，这些适配问题也是比较蛋疼的，…		</p>
  </li>
  <li>
    <p><a href="http://flavienlaurent.com/blog/2014/01/31/spans/">Span的详细用法/演示/自定义方法</a></p>

    <p>Span的详细用法/演示/自定义方法, 先介绍的各个Span之间的在Framework中的继承关系和它是如何工作的，然后又针对每种Span结合具体的示例做详细的讲解，有图有真相。</p>
  </li>
  <li>
    <p><a href="http://blog.jobbole.com/67914/">Android开发贴士集合（1）</a></p>

    <p>Android开发贴士集合共五篇文章介绍一些你可能不知道却比较有用的API。其他四篇：<a href="http://blog.jobbole.com/67920/">Android开发贴士集合（2）</a>、<a href="http://blog.jobbole.com/67928/">Android开发贴士集合（3）</a>、<a href="http://blog.jobbole.com/68006/">Android开发贴士集合（4）</a>、<a href="http://blog.jobbole.com/72523/">Android开发贴士集合（5）</a>。</p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/lmj623565791/article/details/43752383">Android Drawable 那些不为人知的高效用法</a></p>

    <p>Drawable在我们平时的开发中，基本都会用到，而且给大家非常的有用。那么什么是Drawable呢？能够在canvas上绘制的一个玩意，而且相比于View，并不需要去考虑measure、layout，仅仅只要去考虑如何draw（canavs）。</p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/lzyzsd/article/details/41833541">深入浅出RxJava（一：基础篇）</a></p>

    <p><a href="https://github.com/ReactiveX/RxJava">RxJava</a>正在Android开发者中变的越来越流行。唯一的问题就是上手不容易，尤其是大部分人之前都是使用命令式编程语言。但是一旦你弄明白了，你就会发现RxJava真是太棒了。这里仅仅是帮助你了解RxJava，整个系列共有四篇文章，希望你看完这四篇文章之后能够了解RxJava背后的思想，并且喜欢上RxJava。</p>
  </li>
  <li>
    <p><a href="https://github.com/futurice/android-best-practices">Android 开发最佳实践</a></p>

    <p>Best practices in Android development，整理了一些不错的Android实践。</p>
  </li>
  <li>
    <p><a href="https://medium.com/sebs-top-tips/tools-of-the-trade-part-2-b91271892d10">关于xml中tools属性介绍</a>	</p>

    <p>关于xml中tools:context，tools:menu，tools:actionBarNavMode，tools:listitem/listheader/listfooter，tools:showIn，tools:layout的作用介绍，又能节省一大段Java代码了。</p>
  </li>
  <li>
    <p><a href="http://www.jianshu.com/p/3e1fcd9e0d4b?utm_campaign=maleskine&amp;utm_content=note&amp;utm_medium=pc_all_hots&amp;utm_source=recommendation">简单几步教你不用vpn照样翻墙</a></p>

    <p>在这里教大家一个简单的方法，只需要修改host就可翻墙。与网上的改host方法不同，百度到的host地址基本是固定的，可能短暂时间有用，但被墙了就gg了。这里提供一个@netsh.org博客的链接，netsh大神会经常更新host地址，就算之前的host地址被墙了，去更新一下就可以继续上了。</p>
  </li>
</ol>

<h3 id="section-1">代码&amp;开源库</h3>

<ol>
  <li>
    <p><a href="https://github.com/zhaozhentao/MaterialImageView">MaterialImageView</a></p>

    <p>小而美的MaterialImageView,圆角,阴影,抗锯齿。</p>
  </li>
  <li>
    <p><a href="https://github.com/lzyzsd/JsBridge">JsBridge</a></p>

    <p>模仿微信webview的JsBridge，安全方便的实现js和Java的互相调用，主要通过loadUrl和shouldOverrideUrl实现.</p>
  </li>
  <li>
    <p><a href="https://gist.github.com/nickbutcher/b3962f0d14913e9746f2">search_bar.xml</a></p>

    <p><img src="http://ww2.sinaimg.cn/bmiddle/7cb90679gw1epot6e8edjg20b408cjrk.gif" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/linroid/Sky31Radio">Sky31Radio</a></p>

    <p>一个开源的校园电台app，一款学院风的电台节目。各色主播可供调戏。 有小清新有重口味；广播小剧专业自制；神路人档各种乱入.</p>

    <p><img src="http://ww3.sinaimg.cn/bmiddle/005ZJ8j4gw1epnzliy8bnj31221ut7g4.jpg" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/zhaozhentao/BooheeScrollView">BooheeScrollView</a></p>

    <p>模仿薄荷食物图书馆效果.</p>

    <p><img src="https://raw.githubusercontent.com/zhaozhentao/BooheeScrollView/master/screenshot/screen.gif" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/danoz73/RecyclerViewFastScroller">RecyclerViewFastScroller</a></p>

    <p>带Fast Scroller的RecyclerView。</p>

    <p><img src="https://camo.githubusercontent.com/8b8e323a4f7f904b6d6f5057ceaa28a81570af26/687474703a2f2f692e696d6775722e636f6d2f327a4277496c776c2e706e67" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/square/sqlbrite">sqlbrite</a></p>

    <p>良心企业Square的又一开源项目，当你不想给用ContentProvider，只想简单监听SQLite表增删改的数据变更时可以试试它。</p>
  </li>
  <li>
    <p><a href="https://github.com/orhanobut/hawk">Hawk</a>	</p>

    <p>安全简单的Android KV存储开源项目Hawk，使用AES加密内容，SharedPreferences存储数据、GSon序列化对象，支持存储任何类型及其List。</p>
  </li>
  <li>
    <p><a href="https://github.com/bluelinelabs/LoganSquare">LoganSquare</a></p>

    <p>一个比Gson、Jackson解析和序列化还要快的JSON解析库。</p>
  </li>
  <li>
    <p><a href="https://github.com/cesards/CropImageView">CropImageView</a></p>

    <p>支持9个方向进行图片裁剪的ImageView。</p>

    <p><img src="https://github.com/cesards/CropImageView/raw/master/art/cropping.png" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/bmelnychuk/AndroidTreeView">AndroidTreeView</a></p>

    <p>Android TreeView支持第n级展开或收缩，自定义view、value、样式.</p>
  </li>
  <li>
    <p><a href="https://github.com/prolificinteractive/material-calendarview">Material Calendar View</a></p>

    <p>Material Design风格的日历控件。	</p>

    <p><img src="https://raw.githubusercontent.com/prolificinteractive/material-calendarview/master/images/screencast.gif" alt="image" /></p>
  </li>
</ol>

<h3 id="section-2">工具</h3>

<ol>
  <li>
    <p><a href="http://www.androiddevtools.cn">Android Studio 1.1</a></p>

    <ul>
      <li>Improved unit testing support! This is described in much greater detail in <a href="http://tools.android.com/tech-docs/unit-testing-support">http://tools.android.com/tech-docs/unit-testing-support</a>. Note that this requires the new version of the Android Gradle plugin 1.1, also available (and bundled with the IDE for offline usage). Note also that while the new Gradle plugin is included and supported, version 1.0 continues to be supported as well, so you can update to the new version of the IDE without affecting your project files and builds.</li>
      <li>Many new lint checks - run Analyze &gt; Inspect Code to see if version 1.1 uncovers new issues in your projects</li>
      <li>Templates for creating analog and digital Android Wear watch faces
Updated launcher icons, now packaged as mipmap resources</li>
      <li>Support for BCP 47 language tags (e.g. additional 3-letter language codes when using Android 5.0); as with the improved unit testing support this requires version 1.1 of the Gradle plugin.</li>
      <li>See <a href="http://tools.android.com/tech-docs/new-build-system">New Build System</a> for the Gradle plugin release notes.</li>
    </ul>
  </li>
  <li>
    <p><a href="https://github.com/cyfdecyf/cow">Cow</a>	</p>

    <p>COW 是一个简化穿墙的 HTTP 代理服务器。它能自动检测被墙网站，仅对这些网站使用二级代理。</p>
  </li>
  <li>
    <p><a href="https://github.com/konifar/android-material-design-icon-generator-plugin">Android Material Design Icon Generator Plugin</a></p>

    <p>自动帮你生成Material Design风格的图标的插件，还在为不会设计图标发愁吗？赶紧试试Android Material Design Icon Generator Plugin吧。</p>

    <p><img src="https://raw.githubusercontent.com/konifar/android-material-design-icon-generator-plugin/master/docs/capture.gif" width="728" height="451" /></p>
  </li>
</ol>

<h3 id="section-3">新闻</h3>

<ol>
  <li>
    <p><a href="http://www.36kr.com/p/220003.html">Google将在I/O大会上推出新的支付接口Android Pay</a></p>

    <p>有知情人士向 <a href="http://arstechnica.com/business/2015/02/google-will-launch-android-pay-at-io-in-may/">Ars</a> 透露，Google 将在今年的 I/O 大会推出新的移动支付接口 Android Pay，简化用户在应用内、商店内支付流程。Android Pay 主要面向开发者，帮助后者在自己的应用内增加支付选项，用户上传信用卡或者银行卡信息后，就可以在应用内一键支付，无需经过 Google Wallet。</p>
  </li>
  <li>
    <p><a href="http://www.36kr.com/p/219941.html">Android 5.1新特性：单次上划关闭下拉栏、快速解锁</a></p>

    <p>悄然推出的 Android 5.1 在不久前于 MicroMax 的 Android One 设备上被发现，但具体更新内容并没有官方文档。然而国外爱好者 Ramit Suri 还是发现了一些新东西。</p>
  </li>
</ol>

<h3 id="section-4">视频</h3>

<ol>
  <li>
    <p><a href="http://www.infoq.com/cn/presentations/from-360-development-see-big-mobile-application-development">从360手机卫士的开发历程看如何实施大型移动应用开发</a></p>

    <p>视频讲解了360手机卫士在开发过程中曾经面临的许多问题，体系架构上的挑战与应对(多进程化、插件化、云化等等)、研发流程(Build流程、自动化测试等、安全审核)等。</p>
  </li>
</ol>

<h3 id="section-5">设计</h3>

<ol>
  <li>
    <p><a href="http://www.aliued.cn/2015/02/15/sketchkeynote双剑合璧：5步快速制作移动动效.html">Sketch+Keynote双剑合璧：5步快速制作移动动效</a></p>

    <p>2014年，Facebook推出了新闻阅读应用Paper，诸多交互细节与炫酷动效启动了界面设计的新时代，Google的Material Design更是将移动动效提升到了app基础体验环节的高度。盘点如今体验优秀的移动app，精彩的动效层出不穷，放眼望去，聚集UI设计大神的dribbble、behance等地，出彩的动效更好的诠释了流畅细腻的交互操作……如果说移动体验设计师还能在传统的交互视觉之上提升app的可用性，移动动效必定是最重要的方式之一。</p>
  </li>
</ol>

<hr />
<p>版权声明：欢迎自由转载-非商用-非衍生-保持署名 | <a href="http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh">Creative Commons BY-NC-ND 3.0</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android开发技术周报 Issue#20]]></title>
    <link href="http://www.inferjay.com/blog/2015/02/18/android-dev-weekly-issue-20/"/>
    <updated>2015-02-18T09:03:42+08:00</updated>
    <id>http://www.inferjay.com/blog/2015/02/18/android-dev-weekly-issue-20</id>
    <content type="html"><![CDATA[<h3 id="section">新闻</h3>

<ol>
  <li>
    <p><a href="http://www.xda-developers.com/xposed-framework-for-android-lollipop-is-here/">Xposed Framework for Android Lollipop is Here!</a></p>

    <p>Xposed框架是一款可以在不修改APK的情况下影响程序运行（修改系统）的框架服务，基于它可以制作出许多功能强大的模块，且在功能不冲突的情况下同时运作。</p>
  </li>
</ol>

<h3 id="section-1">教程</h3>

<ol>
  <li>
    <p><a href="http://drakeet.me/quick-return-like-as-seashell">用 RecyclerView 实现『贝壳单词』英语角的 Quick Return 效果</a></p>

    <p>今天把『贝壳单词』中英语角的 quick return 效果剥离出来写了个 Demo，讲解使用 RecyclerView 和 nineoldandroids 自己动手写快速返回菜单。通过这篇文章你将了解到的知识有：1.RecyclerView 和其适配器的基本使用
RV、2.适配多种 Item View 类型写法、3.mRecyclerView.setOnScrollListener()、4.nineoldandroids 这个强大 View 操作库的使用等。</p>
  </li>
  <li>
    <p><a href="http://www.lightskystreet.com/2015/02/10/philm_mvp/">开源项目Philm的MVP架构分析</a></p>

    <p>最近一直在研究ChrisBannes的开源项目<a href="https://github.com/chrisbanes/philm">Philm</a>，其整体架构是一套MVP的实现，因为自己也确实没有遇到过整个项目利用MVP搭建的架构，看到的更多是一些代码片段，这里就探讨Philm是如何结合Android实际问题来实现一种MVP架构，如有分析不准确的地方，欢迎指出，大家一起探讨。</p>
  </li>
  <li>
    <p><a href="http://www.yrom.net/blog/2015/02/07/change-gradle-maven-repo-url/">Gradle 修改 Maven 仓库地址</a></p>

    <p>近来迁移了一些项目到Android Studio，采用Gradle构建确实比原来的Ant方便许多。但是编译时下载依赖的网速又着实令人蛋疼不已。如果能切换到国内的Maven镜像仓库，如开源中国的Maven库，又或者是换成自建的Maven私服，那想必是极好的。</p>
  </li>
</ol>

<!--more-->

<ol>
  <li>
    <p><a href="http://blog.csdn.net/aigestudio/article/details/43449123">为什么我们可以在非UI线程中更新UI</a></p>

    <p>看到这样的标题…估计N多人会说我是逗比…因为很多盆友在学习Android（特别是从4.0之后开始入门的）的时候都会常看见或听到别人说我们更新UI呢要在UI线程（或者说主线程）中去更新UI，不要在子线程中更新UI，而Android官方呢也建议我们不要在非UI线程直接更新UI，为什么呢?</p>
  </li>
  <li>
    <p><a href="http://ifeve.com/guava-base-1/">Guava 是个风火轮之基础工具(1)</a></p>

    <p>Guava 是 Java 开发者的好朋友。虽然我在开发中使用 Guava 很长时间了，Guava API 的身影遍及我写的生产代码的每个角落，但是我用到的功能只是 Guava 的功能集中一个少的可怜的真子集，更别说我一直没有时间认真的去挖掘 Guava 的功能，没有时间去学习 Guava 的实现。</p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/guolin_blog/article/details/42238633">Android最佳性能实践(二)—分析内存的使用情况</a></p>

    <p>由于Android是为移动设备开发的操作系统，我们在开发应用程序的时候应当始终把内存问题充分考虑在内。虽然Android系统拥有垃圾自动回收机制，但这并不意味着我们就可以完全忽略何时去分配或释放内存。即使我们全部按照上一篇文章中给出的编程建议来去编写程序，还是会很有可能出现内存泄露或其它类型的内存问题。所以，唯一能够解决问题的办法，就是尝试去分析应用程序的内存使用情况，那么本篇文章就会教大家如何进行分析。</p>
  </li>
  <li>
    <p><a href="http://android.jobbole.com/80636/">Android 主线程之旅—PSVM</a></p>

    <p>当碰到与Android主线程交互相关的Bug时，我决定好好去看看Android的主线程究竟是怎么一回事。这篇文章就是描述我的Android主线程之旅的第一部分。</p>
  </li>
  <li>
    <p><a href="http://www.race604.com/annotation-processing/">Java注解处理器</a></p>

    <p>Java中的注解(Annotation)是一个很神奇的东西，特别现在有很多Android库都是使用注解的方式来实现的。在这篇文章中，我将阐述怎样写一个注解处理器(Annotation Porcessor)。在这篇教程中，首先，我将向您解释什么是注解器，你可以利用这个强大的工具做什么以及不能做什么；然后，我将一步一步实现一个简单的注解器。</p>
  </li>
</ol>

<!--more-->

<ol>
  <li>
    <p><a href="http://www.eoeandroid.com/thread-557380-1-1.html">在 x86 上优化 Android 应用的方法和技巧</a></p>

    <p>英特尔致力于帮助开发人员提供能够在英特尔架构上正常运行（甚至出色运行）的 Android 应用。 虽然英特尔主要致力于社区层面：优化 Dalvik Java、V8 引擎和 Bionic C；丰富代码库；为 IA 提供采用 32 位和 64 位内核的版本，他们同样提供了多种类型的新工具为 Android 开发人员提供帮助。 这些工具主要用于提高性能，使其超过面向 x86 的默认 ARM 转换层：libhoudini 所提供的性能。 </p>
  </li>
</ol>

<h3 id="section-2">代码&amp;开源库</h3>

<ol>
  <li>
    <p><a href="https://github.com/zhaozhentao/KugouLayout">KugouLayout</a></p>

    <p>一个模仿酷狗播放器滑动返回的layout，可以让你的app有更丰富便捷的手势操作，支持activity滑动返回和普通layout的滑动显示/隐藏两种模式。</p>

    <p><img src="https://raw.githubusercontent.com/zhaozhentao/KugouLayout/master/screenshot/screen2.gif" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/linger1216/labelview">labelview</a></p>

    <p>贴纸效果。</p>

    <p><img src="https://raw.githubusercontent.com/linger1216/labelview/master/img/img2.png" alt="image" />	
<!--	![image](https://github.com/linger1216/labelview/raw/master/img/img1.png)--></p>
  </li>
  <li>
    <p><a href="https://github.com/2dxgujun/AndroidTagGroup/">AndroidTagGroup</a></p>

    <p>一个漂亮的标签组控件。</p>

    <p><img src="https://camo.githubusercontent.com/6a4ce346d402597d71f3e523c4a404311a4cd25b/68747470733a2f2f7261772e6769746875622e636f6d2f32647867756a756e2f416e64726f696454616747726f75702f6d61737465722f6173736574732f64656d6f5f73637265656e73686f742e706e67" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/mwrlabs/drozer">drozer</a></p>

    <p>一个Android安全测试框架。</p>
  </li>
  <li>
    <p><a href="https://github.com/pedrovgs/Lynx">Lynx</a></p>

    <p>一个可以创建一个自定义View并显示所有日志信息的库。</p>

    <p><img src="https://raw.githubusercontent.com/pedrovgs/Lynx/master/art/screenshot_demo_1.gif" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/AizazAZ/Android-Ultra-Photo-Selector">Android-Ultra-Photo-Selector</a></p>

    <p>一个图片选择器控件，支持选择多张图片、浏览设备上所有包含图片的文件夹、预览选择的图片并且支持缩放。</p>

    <p><img src="https://raw.githubusercontent.com/AizazAZ/Android-Ultra-Photo-Selector/master/media/image1.png" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/shell-software/fab">fab</a></p>

    <p>一个支持很多自定义属性的Floating Action Button控件。</p>

    <p><img src="https://github.com/shell-software/fab/raw/master/demo/button_type_default.png" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/JorgeCastilloPrz/EasyMVP">EasyMVP</a></p>

    <p>Linkedin工程师做的一个mvp示例demo.</p>

    <p><img src="https://raw.githubusercontent.com/JorgeCastilloPrz/EasyMVP/master/art/screenshot_1.png" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/pnc/IconButton">IconButton</a></p>

    <p>一个Button的子类，支持更好控制over drawable位置的功能。</p>

    <p><!--![image](https://raw.githubusercontent.com/pnc/IconButton/master/images/demo.png)--></p>
  </li>
  <li>
    <p><a href="https://github.com/lsjwzh/MaterialLoadingProgressBar">MaterialLoadingProgressBar</a></p>

    <p>抽取的support-v4 v21 中的loading圈效果。</p>

    <p><img src="https://raw.githubusercontent.com/lsjwzh/MaterialLoadingProgressBar/master/screen.gif" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/Kitdroid/ElasticScrollView">ElasticScrollView</a></p>

    <p>带回弹效果的ScrollView。</p>

    <p><img src="https://raw.githubusercontent.com/Kitdroid/ElasticScrollView/master/image/elastic_sample.gif" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/Tikitoo/android-resources">android-resources</a></p>

    <p>Android 开发资料收集汇总。</p>
  </li>
  <li>
    <p><a href="https://github.com/glomadrian/dashed-circular-progress">dashed-circular-progress</a></p>

    <p>圆形轨迹进度条控件。</p>

    <p><img src="https://raw.githubusercontent.com/glomadrian/dashed-circular-progress/master/art/sample.gif" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/FrederickRider/AutoCompleteBubbleText">AutoCompleteBubbleText</a>	</p>

    <p><img src="https://raw.githubusercontent.com/FrederickRider/AutoCompleteBubbleText/master/images/Screenshot_1.png" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/PaNaVTEC/DrawableView">DrawableView</a></p>

    <p>支持手写绘画的自定View，并且可以将绘画的结果保存为图片。</p>

    <p><img src="https://raw.githubusercontent.com/PaNaVTEC/DrawableView/master/art/DrawableView.gif" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/hanspeide/anytextview">anytextview</a></p>

    <p>对TextView、EditText和Button进行了扩展，可以支持非系统字体。</p>
  </li>
</ol>

<h3 id="section-3">工具</h3>

<ol>
  <li>
    <p><a href="http://www.androiddevtools.cn">Android Studio 1.1 RC1</a></p>

    <p>修复了一些Bug。</p>
  </li>
  <li>
    <p><a href="https://jitpacio">JitPack.io</a></p>
  </li>
</ol>

<p>　　JitPack根据需要构建GitHub项目并提供现成的软件包，方便你在Gradle,Maven和Sbt项目中使用包库。</p>

<ol>
  <li>
    <p><a href="http://gerrithub.io">GerritHub</a></p>

    <p>Github仓库代码Review工具。</p>
  </li>
</ol>

<h3 id="section-4">视频</h3>

<ol>
  <li>
    <p><a href="http://www.imooc.com/view/267?from=itblog">Android面试常客Handler详解</a></p>

    <p>本课程将深入理解Android的Handler机制，并结合源码实例，讲解Looper、MessageqQueue、Handler之间的关系，同时介绍HandlerThread的原理和使用，并分析Handler在开发中遇到的异常的原因，最后从源码的角度分析一下Handler更新UI的流程。</p>
  </li>
  <li>
    <p><a href="http://www.imooc.com/view/303">Android自定义任意层级树形控件</a></p>

    <p>本课程将带领大家通过ListView打造一个任意层级的树形控件，大家可以学到巧妙的设计思想以及数据结构的知识。课程中也包含如何巧妙的利用反射加注解将设计通用化，同时可以进一步加深对ListView适配器的理解.</p>
  </li>
</ol>

<h3 id="section-5">设计</h3>

<ol>
  <li>
    <p><a href="http://www.ui.cn/project.php?id=41420">Twitter视频功能设计流程全程剖析</a></p>

    <p>在这7000字文章中，Twitter设计师展示了严谨的设计流程 以及 设计开发协作心得。Twitter设计流程值得学习的几点：1.原型设计驱动设计方向，可交互、便于测试、确定开发可行性。2.注重设计与开发的沟通，将很多设计师来做更好的开发工作转移给设计师，项目跟进扎实，与其在AE中死抠“设计”细节，不如简单制作大致原型，尽早协助开发调节效果，制作“产品”3.精雕细琢，750+静态设计变种，54份原型可见细心程度。4.问题汇总，bug发现，用户测试并非与设计师无关。5.任何棘手的实现问题，多揪着开发问，很多小发现影响却很大。</p>
  </li>
  <li>
    <p><a href="http://www.uisdc.com/photoshop-efficient-operation-skills-2">四个不为人知的PHOTOSHOP高效操作秘籍（二）</a></p>

    <p>首先花一小段文字来重申下 mac 和 win 的快捷键问题。两个操作系统下的 PS 是一样的，只不过 mac 下的快捷键 Command 在 win 下换成了 Ctrl，Option 换成了 Alt ，其他是没有区别的。本文所提的技巧对两个平台都是通用的！</p>
  </li>
</ol>

<hr />
<p>版权声明：欢迎自由转载-非商用-非衍生-保持署名 | <a href="http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh">Creative Commons BY-NC-ND 3.0</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android开发技术周报 Issue#19]]></title>
    <link href="http://www.inferjay.com/blog/2015/02/11/android-dev-weekly-issue-19/"/>
    <updated>2015-02-11T22:45:07+08:00</updated>
    <id>http://www.inferjay.com/blog/2015/02/11/android-dev-weekly-issue-19</id>
    <content type="html"><![CDATA[<h3 id="section">教程</h3>

<ol>
  <li>
    <p><a href="http://www.codekk.com/">Android开源项目源码解析</a></p>

    <p>由<a href="https://github.com/Trinea">@Trinea</a>发起的Android开源项目源码解析项目，目前已校对发布的分析有：Volley源码解析、Android Universal Image Loader源码分析、Dagger源码解析、EventBus 源码解析、xUtils源码解析、ViewPagerindicator源码解析、HoloGraphLibrary源码解析、CircularFloatingActionMenu源码解析、PhotoView 源码解析、Android Lock Pattern源码解析以及公共技术点：Java动态代理、Java注解Annotation、View绘制流程、依赖注入和View时间传递等。</p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/guolin_blog/article/details/42238627">Android最佳性能实践(一)——合理管理内存</a></p>

    <p>有不少朋友都问过我，怎样才能写出高性能的应用程序，如何避免程序出现OOM，或者当程序内存占用过高的时候该怎么样去排查。确实，一个优秀的应用程序，不仅仅要功能完成得好，性能问题也应该处理得恰到好处。为此，我也是阅读了不少Android官方给出的高性能编程建议，那么从本篇文章开始，我就准备开始写一个全新系列的博文，来把这些建议进行整理和分析，帮助大家能够写出更加出色的应用程序。</p>
  </li>
  <li>
    <p><a href="http://android.jobbole.com/80627/">深入解析Android的自定义布局</a></p>

    <p>这篇文章是前Firefox Android工程师（现在跳槽去Facebook了） <a href="http://lucasr.org/about">Lucas Rocha</a>所写，文中对Android中常用的四种自定义布局方案进行了很好地分析，并结合这四种Android自定义布局方案所写的示例项目讲解了它们各自的优劣以及四种方案之间的比较。看完这篇文章，也让我对Android 自定义布局有了进一步的了解，于是趁着兴头，我把它翻译成中文，<a href="http://lucasr.org/2014/05/12/custom-layouts-on-android/">原文链接在此</a>。</p>
  </li>
  <li>
    <p><a href="http://android.jobbole.com/80634/">巧用Drawable 实现Android UI 元素间距效果</a></p>

    <p>在大部分的移动UI或者Web UI都是基于网格概念而设计的。这种网格一般都是有一些对其的方块组成，然后它们组合成为一个块。使用网格这样的设计原则可以有助于对齐UI元素，提升UI的一致性，同时还能让用户更加容易的获取UI上面包含的内容。简而言之，网格是一个相当的强大的设计工具。</p>
  </li>
</ol>

<!--more-->

<ol>
  <li>
    <p><a href="http://ifeve.com/fun-modules/">模块化的乐趣</a>	</p>

    <p>模块间的紧耦合是一种很糟糕的设计，而耦合的最坏表现就是模块间的循环依赖。幸运的是，有几种方法可以用来消除循环依赖，分别是回调函数，代码上移，代码下移。 接下来，我会为大家展示一个小例子。示例中，我会分别使用上述几种技术来消除循环依赖。</p>
  </li>
  <li>
    <p><a href="http://android.jobbole.com/80630/">你的Android应用完全不需要那么多的权限</a>	
 Android系统的权限从用户的角度来看有时候的确有点让人摸不着头脑。有时候可能你只需要做一些简单的事情（对联系人的信息进行编辑），却申请了远超你应用所需的权限（比如访问所有联系人信息的权限）。这很难不让用户对你保存戒备。</p>
  </li>
  <li>
    <p><a href="http://stackvoid.com/performance-tuning-on-android/">Android App 性能优化实践</a>	
 本文从工具、布局优化、代码、View的绘制、电量、和Apk的大小等几个方面记录了Android App优化需要用到的工具和以及在实践中的Tips。</p>
  </li>
  <li>
    <p><a href="http://www.ruanyifeng.com/blog/2015/02/mvcmvp_mvvm.html">MVC，MVP 和 MVVM 的图示</a></p>

    <p>复杂的软件必须有清晰合理的架构，否则无法开发和维护。<a href="http://zh.wikipedia.org/wiki/MVC">MVC</a>（Model-View-Controller）是最常见的软件架构之一，业界有着广泛应用。它本身<a href="http://www.ruanyifeng.com/blog/2007/11/mvc.html">很容易理解</a>，但是要讲清楚，它与衍生的 MVP 和 MVVM 架构的区别就不容易了。</p>
  </li>
  <li>
    <p><a href="http://www.androidperformance.com/build-rom-for-nexus5.html">为Nexus5编译AndroidL固件</a></p>

    <p>接前一篇文章&lt;<a href="http://www.androidperformance.com/view-android-source-code-with-androidstudio.html">使用Android Studio查看Android Lollipop源码</a>&gt; , 我们知道,仅仅看代码,提高是比较有限的,而且理解起来也比较肤浅,往往过目就忘. 而自己写过的代码,往往会印象比较深刻,在写的时候也会比较容易理解流程. 所以我们在看代码的同时, 如果能修改代码, 在手机上跑起来并看到修改的效果,这无疑会加快看代码的效率和积极性. </p>
  </li>
  <li>
    <p><a href="http://www.race604.com/communicate-with-remote-service-1/">与Sevice实现双向通信系列</a></p>

    <p>经常有这样的应用场景，我们需要Client端调用Service完成一些事情，Service也可以通过回调通知客户端。</p>
  </li>
  <li>
    <p><a href="http://zhengxiaopeng.com/2015/02/02/使用Gradle发布项目到JCenter仓库/">使用Gradle发布项目到JCenter仓库</a>	</p>

    <p>这篇文章介绍通过Gradle把开源项目发布到公共仓库JCenter中，方便你我他的事情，我们都是很懒的嘛。JCenter现在是Android Studio中repositories的默认节点了，之前是Maven的，不过JCenter是兼容Maven的，所以放心使用。</p>
  </li>
</ol>

<h3 id="section-1">代码&amp;开源库</h3>

<ol>
  <li>
    <p><a href="https://github.com/ZieIony/Carbon">Carbon</a></p>

    <p>Material Design的兼容实现，支持Android 2.1+。</p>
  </li>
  <li>
    <p><a href="https://github.com/Stuart-campbell/RushOrm">RushOrm</a></p>

    <p>一个ORM框架，核心功能：</p>

    <ul>
      <li>自定义字段 - 轻松实现定制字段,以便任何对象都可以被序列化到数据库</li>
      <li>表关系
        <ul>
          <li>一对一</li>
          <li>一对多</li>
          <li>保存一个父对象会自动保存与之相关关联的子对象</li>
        </ul>
      </li>
      <li>文件 - 轻松的保存长文本, JSON and bitmaps</li>
      <li>升级 - 数据库升级支持通过注解去删除和重命名列名。</li>
    </ul>
  </li>
  <li>
    <p><a href="https://github.com/geftimov/android-patternview">android-patternview</a></p>

    <p>图案密码解锁库。</p>

    <p><img src="https://github.com/geftimov/android-patternview/raw/master/art/rsz_pattern_correct.png" alt="image" /><img src="https://github.com/geftimov/android-patternview/raw/master/art/rsz_mm.png" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/sbakhtiarov/gif-movie-view">gif-movie-view</a></p>

    <p>可以显示Gif动画的自定义View。</p>
  </li>
  <li>
    <p><a href="https://github.com/bytedeco/javacpp">JavaCPP</a></p>

    <p>JavaCPP provides efficient access to native C++ inside Java, not unlike the way some C/C++ compilers interact with assembly language. No need to invent new languages such as with SWIG, SIP, C++/CLI, Cython, or RPython as required by cppyy. Instead, it exploits the syntactic and semantic similarities between Java and C++. Under the hood, it uses JNI, so it works with all implementations of Java SE, in addition to Android, Avian, and RoboVM (instructions).</p>
  </li>
  <li>
    <p><a href="https://github.com/qiujuer/Genius-Android">Genius-Android</a></p>

    <p>Genius-Android 是 Android 中一些常用的的方法集合, Genius 提供6个基本板块：app(Ui)、animation(动画)、widget(Material控件)、command(命令行)］、net tool(Ping、Dns…)、util(常用方法,类)等。</p>
  </li>
  <li>
    <p><a href="https://github.com/dcloudio">5+ Runtime</a></p>

    <p>5+ Runtime是DCloud推出的HTML5强化引擎，性能和功能都大幅领先phoneg*p，可以使用JS调用40W原生API，可以在低端机上流畅运行。点击视频观看低端机上如何流畅运行App。http://download.dcloud.net.cn/FastAndroid-mini.m4v 也可直接下载App在手机上体验：</p>

    <p>功能演示：http://dcloud.io/helloh5/
 UI演示：http://dcloud.io/hellomui/</p>
  </li>
  <li>
    <p><a href="https://github.com/alexzaitsev/freepager">freepager</a></p>

    <p>对ViewPager进行了扩展，支持垂直切换page、垂直无限切换page、水平无线切换page和即可以垂直又可以水平无限切换page，支持ndroid 2.1.x (API 7) +系统。</p>

    <p><img src="https://raw.githubusercontent.com/alexzaitsev/freepager/master/04.gif" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/jenzz/Android-MaterialPreference">Android-MaterialPreference</a></p>

    <p>一个自定义的，向后兼容的Material Design风格的Preference实现。</p>

    <p><img src="https://camo.githubusercontent.com/e7d19d635dd16b8559b1f9c1982ca47ee55ddbe1/68747470733a2f2f7261772e6769746875622e636f6d2f6a656e7a7a2f416e64726f69642d4d6174657269616c507265666572656e63652f6d61737465722f6173736574732f53637265656e73686f74312e706e67" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/KlassenKonstantin/CollapseOnScroll">CollapseOnScroll</a></p>

    <p>模仿Android Lollipop Contacts滚动效果的容器View。</p>
  </li>
  <li>
    <p><a href="https://github.com/bboyfeiyu/AndroidEventBus">AndroidEventBus</a></p>

    <p>一个Android平台的事件总线框架, 它简化了Activity、Fragment、Service等组件之间的交互，很大程度上降低了它们之间的耦合，使得我们的代码更加简洁，耦合性更低，提升我们的代码质量。</p>

    <p><img src="https://camo.githubusercontent.com/1ba8becec515613cd83aa6b0273c67b058d0b6ab/687474703a2f2f696d672e626c6f672e6373646e2e6e65742f3230313530323033313235353038313130" alt="image" /></p>
  </li>
</ol>

<h3 id="section-2">工具</h3>

<ol>
  <li>
    <p><a href="http://www.androiddevtools.cn">Android Studio 1.1 Beta 4</a></p>

    <p>添加了对单元测试的支持以及修复了一些Bug。</p>
  </li>
  <li>
    <p><a href="https://github.com/ksoichiro/gradle-eclipse-aar-plugin">gradle-eclipse-aar-plugin</a>	
 一个可以让你在Eclipse中使用Android AAR格式库的Gradle插件。</p>
  </li>
  <li>
    <p><a href="https://www.codota.com">Codota</a>	</p>

    <p>一个代码片段搜索工具。</p>
  </li>
</ol>

<h3 id="section-3">视频</h3>

<ol>
  <li>
    <p><a href="http://www.imooc.com/view/312?from=itblog">细说多线程之Thread VS Runnable</a></p>

    <p>本课程带领大家更加深入地学习Java多线程机制，深入理解创建线程的两种方式之间的差异，掌握线程的生命周期和守护线程的概念。</p>
  </li>
  <li>
    <p><a href="http://www.imooc.com/view/226?from=itblog">千变万化的ViewPager切换动画</a></p>

    <p>本课程将带领大家实现个性的ViewPager切换动画，首先介绍通过PageTransformer结合ViewPager.setPageTransformer来实现动画效果，然后教大家如何让其兼容到3.0以后，其中会涉及到属性动画等知识点；最后将介绍通过自定义ViewPager的方式来实现动画切换效果。</p>
  </li>
  <li>
    <p><a href="http://v.youku.com/v_show/id_XODg1NTE5MjAw.html">android应用卡顿优化实践-何杰</a></p>

    <p>Android应用的卡顿问题非常突出，所有用户都能感觉得到却又很难做量化卡顿的严重程度，过去的做法只是零星地发现和解决一些小点。DAU超亿级的UC浏览器在卡顿优化的过程中建立了一套衡量卡顿严重性的数据指标与监控分析机制，并藉此有针对性地落实了200+个性能优化点。这里会介绍卡顿监控与分析的方法、常见的卡顿案例与原因</p>
  </li>
</ol>

<hr />
<p>版权声明：欢迎自由转载-非商用-非衍生-保持署名 | <a href="http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh">Creative Commons BY-NC-ND 3.0</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android开发技术周报 Issue#18]]></title>
    <link href="http://www.inferjay.com/blog/2015/02/11/android-dev-weekly-issue-18/"/>
    <updated>2015-02-11T22:41:41+08:00</updated>
    <id>http://www.inferjay.com/blog/2015/02/11/android-dev-weekly-issue-18</id>
    <content type="html"><![CDATA[<h3 id="section">新闻</h3>

<ol>
  <li>
    <p><a href="http://www.infoq.com/cn/news/2015/01/groovy-2-4-released">Groovy 2.4发布，支持Android开发</a></p>

    <p>近日，Groovy编程语言的管理者Guillaume Laforge在博客上宣布了Groovy 2.4发布的消息。就在不久前，Pivotal宣布不再资助Groovy/Grails项目，Groovy 2.4将成为Pivotal资助下的最后一个主要的Groovy版本。Groovy 2.4最大的亮点就是对Android的支持，现在开发者可以完全使用Groovy编写Android应用了，而且与Java相比，可以省去很多样板代码。</p>
  </li>
</ol>

<h3 id="section-1">教程</h3>

<ol>
  <li>
    <p><a href="http://yanghui.name/blog/2015/02/01/2015-1-31-ali-technical-salon/">Android应用性能优化实践</a></p>

    <p>周末跑去深圳参加了一场阿里主持的技术沙龙，主题是《如何构建高可用的APP》，沙龙中相关的ppt和视频可以在他们的微博中找到。沙龙中收获比较大的是有关UC的何杰分享的Android应用性能优化实践，和手Q web业务优化的解析。</p>
  </li>
  <li>
    <p><a href="http://blog.isming.me/2015/02/01/android-view-animation/">android动画-View Animation</a></p>

    <p>视图动画（View Animation）,又称补间动画（Tween Animation）,即给出两个关键帧，通过一些算法将给定属性值在给定的时间内在两个关键帧间渐变。本文首先讲解各种基本动画的使用，其实介绍View动画的工作过程。</p>
  </li>
  <li>
    <p><a href="http://www.cnblogs.com/tianzhijiexian/p/4128045.html">用开源项目ActivityOptionsICS让ActivityOptions的动画实现兼容</a></p>

    <p>我之前写过一篇文章是讲解ActivityOption的api方法的（http://www.cnblogs.com/tianzhijiexian/p/4087917.html），当时吐槽各种动画不兼容，完全无视我们4.x或者2.x用户嘛，好在有开源库来帮助我们实现动画。</p>
  </li>
  <li>
    <p><a href="http://www.imooc.com/wenda/detail/245687">android:clipToPadding属性的分析</a></p>

    <p>ListView或GridView中android:clipToPadding属性的使用说明示例该属性的解释:Defines whether the ViewGroup will clip its drawing surface so as to exclude the padding area. 什么意思呢?就是说:clipToPadding属性定义了是否允许ViewGroup在padding中绘制,该值默认为true,即不允许.</p>
  </li>
</ol>

<!--more-->

<ol>
  <li>
    <p><a href="http://blog.csdn.net/xyang81/article/category/2759987">JNI/NDK开发指南</a></p>

    <p>相信很多做过Java或Android开发的朋友经常会接触到JNI方面的技术，由其做过Android的朋友，为了应用的安全性，会将一些复杂的逻辑和算法通过本地代码（C或C++）来实现，然后打包成so动态库文件，并提供Java接口供应用层调用，这么做的目的主要就是为了提供应用的安全性，防止被反编译后被不法分子分析应用的逻辑。</p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/xyang81/article/details/42319789">Android NDK开发Crash错误定位</a></p>

    <p>在Android开发中，程序Crash分三种情况：未捕获的异常、ANR（Application Not Responding）和闪退（NDK引发错误）。其中未捕获的异常根据logcat打印的堆栈信息很容易定位错误。ANR错误也好查，Android规定，应用与用户进行交互时，如果5秒内没有响应用户的操作，则会引发ANR错误，并弹出一个系统提示框，让用户选择继续等待或立即关闭程序。</p>
  </li>
  <li>
    <p><a href="https://sobug.com/article/detail/7">Android APP安全测试入门</a></p>

    <p>最近这两年移动端真是非常火，每个单位或多或少都会有那么几款App，对于我们Web安全攻城师来说，App安全也需要或多或少的了解一些。年初单位来了一位对App安全略有研究的小伙伴，某日闲来无事教了笔者几招，分享给大家。有句古语:”工欲善其事，必先利其器”，我们要研究App安全，没有几款高大上的神器是会非常麻烦的，因此本文主要给大家分享一下笔者学到的一些基础知识，主要是一些移动端测试辅助工具的使用。</p>
  </li>
  <li>
    <p><a href="http://www.infoq.com/cn/author/黄文海">Java多线程编程模式实战指南</a></p>

    <p>Active Object模式是一种异步编程模式。它通过对方法的调用与方法的执行进行解耦来提高并发性。若以任务的概念来说，Active Object模式的核心则是它允许任务的提交（相当于对异步方法的调用）和任务的执行（相当于异步方法的真正执行）分离。</p>
  </li>
</ol>

<h3 id="section-2">代码&amp;开源库</h3>

<ol>
  <li>
    <p><a href="https://github.com/pedrovgs/TuentiTV">TuentiTV</a></p>

    <p>一个Android TV应用。</p>
  </li>
  <li>
    <p><a href="https://github.com/hongyangAndroid/Android-CircleMenu">Android-CircleMenu</a></p>

    <p>自定义ViewGroup实现的圆形旋转菜单，支持跟随手指旋转以及快速旋转。</p>

    <p><img src="https://raw.githubusercontent.com/hongyangAndroid/Android-CircleMenu/master/sample_zhy_CircleMenu/screen_shot.gif" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/DWorkS/VolleyPlus">VolleyPlus</a></p>

    <p>Volley的加强版，在Volley的基础上进行了扩展：</p>
  </li>
  <li>
    <p><a href="https://github.com/h6ah4i/android-verticalseekbar">VerticalSeekBar</a></p>

    <p>垂直的SeekBar，支持2.3～5.0系统。</p>

    <p><img src="https://github.com/h6ah4i/android-verticalseekbar/raw/master/pic/gb.png?raw=true" alt="Example on Android 2.3" width="200" />
 <img src="https://github.com/h6ah4i/android-verticalseekbar/raw/master/pic/ics.png?raw=true" alt="Example on Android 4.0" width="200" />
 <img src="https://github.com/h6ah4i/android-verticalseekbar/raw/master/pic/lollipop.png?raw=true" alt="Example on Android 5.0" width="200" /></p>
  </li>
  <li>
    <p><a href="https://github.com/rahulrj/ChromeOverflowMenu">ChromeOverflowMenu</a></p>

    <p>模仿实现了Chrome的Overflow Menu的动画效果。</p>
  </li>
  <li>
    <p><a href="https://github.com/Avocarrot/json2view">json2view</a></p>

    <p>json2view是一个非常简单的库，它可以将JSON文件转换为Android View，从而实现无需升级Apk就可以动态的更新View的样式。</p>
  </li>
  <li>
    <p><a href="https://github.com/kymjs/KJFrameForAndroid">/KJFrameForAndroid</a></p>

    <p>KJFrameForAndroid 又叫KJLibrary，是一个帮助快速开发的框架。使用KJFrameForAndroid，你可以轻松完成http请求、网络图片加载、数据库数据保存或读取。</p>
  </li>
  <li>
    <p><a href="https://github.com/kymjs/CJFrameForAndroid">CJFrameForAndroid</a></p>

    <p>CJFrameForAndroid 是一个实现android插件化开发的框架。使用CJFrameForAndroid，apk动态加载不再是难题，更重要的是可以轻松实现插件与APP项目之间的解耦。</p>
  </li>
  <li>
    <p><a href="https://github.com/houkx/android-pluginmgr/">android-pluginmgr</a></p>

    <p>android插件化开发的框架,实现apk动态加载。</p>
  </li>
  <li>
    <p><a href="https://github.com/tianzhijiexian/ActivityOptionsICS">ActivityOptionsICS</a></p>

    <p>ActivityOptions Animations的兼容库，支持Android api3.1+。</p>
  </li>
  <li>
    <p><a href="https://github.com/chenupt/DragTopLayout">DragTopLayout</a></p>

    <p>一个在ViewPager头部添加一个TopView用以显示头部菜单的控件，类型豌豆荚的应用详情页实现。</p>

    <p><img src="https://raw.githubusercontent.com/chenupt/DragTopLayout/master/imgs/dragtop_1.1.0.gif" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/zhaozhentao/InboxLayout">InboxLayout</a></p>

    <p>模仿Google Inbox邮箱的上下拉返回效果，让你的app加入真正方便的手势操作。目前已支持底部为scrollview 顶部为listview和scrollview的情况,适用于大部分场景，正在做底部为listview的情况。</p>

    <p><img src="https://raw.githubusercontent.com/zhaozhentao/InboxLayout/master/screenshot/pic.gif" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/frankiesardo/icepick">icepick</a></p>

    <p>一个通过注解来方便我们保存和恢复Android Instance状态的Library。</p>
  </li>
</ol>

<h3 id="section-3">工具</h3>

<ol>
  <li><a href="http://www.androiddevtools.cn">Android Studio 1.1 Beta 2</a></li>
</ol>

<h3 id="section-4">视频</h3>

<ol>
  <li>
    <p><a href="http://www.tudou.com/programs/view/A-1wE18UWeA/">React.js Conf 2015 Keynote</a></p>

    <p>React是Facebook开源的一个方便开发大型WebApp的框架。 </p>
  </li>
  <li>
    <p><a href="http://www.imooc.com/view/308">Android图案解锁</a></p>

    <p>本课程将带领大家通过自定义控件实现一个图案解锁的功能，包括自定义控件的使用、常见绘图操作、控件事件处理、监听器使用、以及综合案例的应用。</p>
  </li>
  <li>
    <p><a href="http://www.imooc.com/view/264">多种多样的App主界面Tab实现方法</a>	
 Tab选项卡几乎成为了App必备的一个功能，它的实现方法也是多种多样，本课程就将讲解迄今为止最主流的4种实现Tab的方法，包括ViewPager、Fragment、FragmentPagerAdapter和ViewPagerIndicator。</p>
  </li>
  <li>
    <p><a href="http://www.infoq.com/cn/presentations/static-detection-method-for-android-app-vulnerabilities">安卓APP漏洞的静态检测方法</a></p>

    <p>安卓系统凭借其灵活和开放的特性获得了市场的青睐，但开放性也意味着APP开发者需要为安全负更大的责任。一方面在安卓APP这个快速发展的领域有大量新手开发者的加入，另一方面即使经验丰富的开发者也难免犯错误，安卓应用的漏洞层出不穷，值得我们深入研究。由于安卓APP的功能越来越多，代码逻辑越来越复杂，漏洞常常隐藏在深处，只有触发到一系列特定条件后才会被触发。</p>
  </li>
</ol>

<h3 id="section-5">小技巧</h3>

<ol>
  <li>
    <p>查看task stack中当前正在运行的activity(<a href="http://weibo.com/brucefromsdu">@hi大头鬼hi</a>)</p>

    <pre><code> adb shell dumpsys activity activities | sed -En -e '/Running activities/,/Run #0/p'
</code></pre>
  </li>
  <li>
    <p>Android使用Chrome远程调试Webview(<a href="http://weibo.com/brucefromsdu">@hi大头鬼hi</a>)</p>

    <ol>
      <li>chrome中输入<code>chrome://inspect/#devices</code></li>
      <li>
        <p>代码中需要开启webview debug </p>

        <pre><code> if (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.KITKAT) { 
     WebView.setWebContentsDebuggingEnabled(true); 
 }
</code></pre>
      </li>
    </ol>
  </li>
</ol>

<hr />
<p>版权声明：欢迎自由转载-非商用-非衍生-保持署名 | <a href="http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh">Creative Commons BY-NC-ND 3.0</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android开发技术周报 Issue#17]]></title>
    <link href="http://www.inferjay.com/blog/2015/01/19/android-dev-weekly-issue-17/"/>
    <updated>2015-01-19T14:38:55+08:00</updated>
    <id>http://www.inferjay.com/blog/2015/01/19/android-dev-weekly-issue-17</id>
    <content type="html"><![CDATA[<h3 id="section">教程</h3>

<ol>
  <li>
    <p><a href="http://blog.csdn.net/luoshengyang/article/details/42555483">ART运行时垃圾收集（GC）过程分析</a></p>

    <p>ART运行时与Dalvik虚拟机一样，都使用了Mark-Sweep算法进行垃圾回收，因此它们的垃圾回收流程在总体上是一致的。但是ART运行时对堆的划分更加细致，因而在此基础上实现了更多样的回收策略。不同的策略有不同的回收力度，力度越大的回收策略，每次回收的内存就越多，并且它们都有各自的使用情景。这样就可以使得每次执行GC时，可以最大限度地减少应用程序停顿。本文就详细分析ART运行时的垃圾收集过程。</p>
  </li>
  <li>
    <p><a href="http://greenrobot.me/devpost/how-to-debug-http-and-https-traffic-on-android/">如何调试 Android 上 HTTP(S) 流量</a></p>

    <p>在Android开发中我们常常会和API 打交道，可能你不想，但是这是避不开的。大部分情况下，调试发送网络请求和接收响应的过程都是十分痛苦的。有多少次我们经过调试发现API的调用失败仅仅是因为我们的编码错了或者丢失了一个HTTP头部参数？在调试的过程中，我们发现出现错误的原因千奇百怪。</p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/luoshengyang/article/details/42492621">ART运行时为新创建对象分配内存的过程分析</a></p>

    <p>ART运行时和Dalvik虚拟机一样，在堆上为对象分配内存时都要解决内存碎片和内存不足问题。内存碎片问题可以使用dlmalloc技术解决。内存不足问题则通过垃圾回收和在允许范围内增长堆大小解决。由于垃圾回收会影响程序，因此ART运行时采用力度从小到大的进垃圾回收策略。</p>
  </li>
  <li>
    <p><a href="http://hukai.me/android-performance-patterns/">Android性能优化典范</a></p>

    <p>2015年伊始，Google发布了关于Android性能优化典范的专题，一共16个短视频，每个3-5分钟，帮助开发者创建更快更优秀的Android App。课程专题不仅仅介绍了Android系统中有关性能问题的底层工作原理，同时也介绍了如何通过工具来找出性能问题以及提升性能的建议。主要从三个方面展开，Android的渲染机制，内存与GC，电量优化。下面是对这些问题和建议的总结梳理。</p>
  </li>
</ol>

<!--more-->

<ol>
  <li>
    <p><a href="http://blog.csdn.net/vector_yi/article/details/24719873">50个Android开发技巧(20 使用MVP模式)</a></p>

    <p>随着UI创建技术的功能日益增强，UI层也履行着越来越多的职责。为了更好地细分视图(View)与模型(Model)的功能，让View专注于处理数据的可视化以及与用户的交互，同时让Model只关系数据的处理，基于MVC概念的MVP(Model-View-Presenter)模式应运而生。</p>
  </li>
  <li>
    <p><a href="http://yanghui.name/blog/2015/01/20/android-developer-tools/">Android Developer Tools(开发人员工具)</a></p>

    <p>在做Android开发的过程中，不可避免地需要使用到自带的android developer tools（开发人员工具），这是一个强大的开发辅助工具，随着android版本的更新，developer tools也集成了越来越多十分方便的调试功能，这里以android 4.4.4版本为例子，说说其中一部分我常用工具的使用.</p>
  </li>
  <li>
    <p><a href="https://github.com/tiimgreen/github-cheat-sheet/blob/master/README.zh-cn.md">GitHub秘籍</a></p>

    <p>本秘籍收录了一些Git和Github非常酷同时又少有人知的功能。同时有英文、韩文、日文版本。</p>
  </li>
  <li>
    <p><a href="http://stormzhang.com/android/2015/01/25/gradle-build-field/">Gradle自定义你的BuildConfig</a></p>

    <p>在很早之前我发布了这篇博客<a href="http://stormzhang.com/android/2013/08/28/android-use-build-config/">Android BuildConfig.DEBUG的妙用</a>, 提到了Eclipse中通过BuildConfig.DEBUG字段用来调试Log非常好用，但是殊不知在Android Studio中通过Gradle这种用法更加强大。</p>
  </li>
  <li>
    <p><a href="http://ifeve.com/google-guava/">Google Guava官方教程（中文版）</a></p>

    <p>Guava工程包含了若干被Google的 Java项目广泛依赖 的核心库，例如：集合 [collections] 、缓存 [caching] 、原生类型支持 [primitives support] 、并发库 [concurrency libraries] 、通用注解 [common annotations] 、字符串处理 [string processing] 、I/O 等等。 所有这些工具每天都在被Google的工程师应用在产品服务中。</p>
  </li>
  <li>
    <p><a href="http://www.infoq.com/cn/articles/High-Performance-Java-Inter-Thread-Communications">Java里快如闪电的线程间通讯</a></p>

    <p>创建一个对开发人员友好的、简单轻量的线程间通讯框架，完全不用锁、同步器、信号量、等待和通知，在Java里开发一个轻量、无锁的线程内通讯框架；并且也没有队列、消息、事件或任何其他并发专用的术语或工具。</p>
  </li>
</ol>

<h3 id="section-1">代码&amp;开源库</h3>

<ol>
  <li>
    <p><a href="https://github.com/7heaven/bitmapMesh">bitmapMesh</a></p>

    <p>一个实现窗帘效果的库。</p>

    <p><img src="https://raw.githubusercontent.com/7heaven/bitmapMesh/master/arts/arts2.gif" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/MoshDev/AndroidIndicators">AndroidIndicators</a></p>

    <p>一个可以给Title增效动画效果的库，已实现效果有左右切换、上下切换和3D切换效果。</p>

    <p><img src="https://raw.githubusercontent.com/MoshDev/AndroidIndicators/master/snapshots/2015-01-12%2019_42_02.gif" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/ryanhoo/Zhihu-Parallax-Animation">Zhihu-Parallax-Animation</a></p>

    <p>知乎 Android 客户端启动页的视差动画效果实现.</p>

    <p><img src="https://raw.githubusercontent.com/ryanhoo/Zhihu-Parallax-Animation/develop/images/zhihu-parallax-animation.gif" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/itzikBraun/TutorialView">TutorialView</a></p>

    <p>一个方便你给Activity添加功能说明的库。</p>

    <p><img src="https://camo.githubusercontent.com/3ccafa15f750a95fa01b88b16077af5431e22f06/687474703a2f2f7261772e6769746875622e636f6d2f49747a696b427261756e2f5475746f7269616c566965772f6d61737465722f73637265656e5f73686f74732f6578616d706c652e676966" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/geftimov/android-pathview">android-pathview</a></p>

    <p>一个可以显示路径动画的自定义View，同时也支持从SVG文件加载路径动画。</p>

    <p><img src="https://raw.githubusercontent.com/geftimov/android-pathview/master/art/settings.gif" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/pwittchen/NetworkEvents">NetworkEvents</a></p>

    <p>一个监听网络连接状态并且可以改变Wifi信号强度的库。	</p>
  </li>
  <li>
    <p><a href="https://github.com/yqritc/RecyclerView-FlexibleDivider">RecyclerView-FlexibleDivider</a></p>

    <p>一个方便你控制RecyclerView中Item之间分割线样式的库。</p>

    <p><img src="https://raw.githubusercontent.com/yqritc/RecyclerView-FlexibleDivider/master/sample/sample1.gif" alt="image" /><img src="https://raw.githubusercontent.com/yqritc/RecyclerView-FlexibleDivider/master/sample/sample2.gif" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/yulu/Instagram_Filter">Instagram_Filter</a></p>

    <p>一个使用OpenGL ES Shaders模仿了Instagram滤镜效果的项目。</p>
  </li>
  <li>
    <p><a href="https://github.com/carlonzo/StikkyHeader">StikkyHeader</a></p>

    <p>This is a very simple library for Android that allows you to stick an header to a scrollable view and easly apply animation to it</p>

    <p>这是一个非常简单的库，可以让你轻松的给你一个可滚动的View添加stick Header并且可以添加动画效果。</p>

    <p><img src="https://raw.githubusercontent.com/carlonzo/StikkyHeader/develop/readme/example1.gif" alt="image" /><img src="https://raw.githubusercontent.com/carlonzo/StikkyHeader/develop/readme/example2.gif" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/nkzawa/socket.io-android-chat">socket.io-android-chat</a></p>
  </li>
</ol>

 	一个Socket.io的Demo项目。	

<h3 id="section-2">工具</h3>

<ol>
  <li>
    <p><a href="http://www.androiddevtools.cn">Android Studio 1.1 Preview 2</a></p>

    <p>本次主要更新：</p>

    <ol>
      <li>Lint工具新增了几条检查规则。</li>
      <li>又修复了十几个Bug。 </li>
    </ol>

    <p>具体更新详情见<a href="http://photo.weibo.com/5214309031/wbphotos/large/mid/3803387382973701/pid/005GSHYzjw1eona47dj7wj31kw2qe4qp">Android Studio 1.1 Preview 2 Release Notes</a></p>
  </li>
  <li>
    <p><a href="https://github.com/moallemi/gradle-advanced-build-version">gradle-advanced-build-version</a></p>

    <p>可以帮你自动生成版本号和版本名称的插件。</p>
  </li>
</ol>

<h3 id="section-3">视频</h3>

<ol>
  <li>
    <p><a href="http://www.imooc.com/view/238?from=itblog">百度地图在Android中的使用</a></p>

    <p>课程使用百度地图SDK，由浅入深的带领大家从申请百度地图API Key开始，一步一步实现地图在APP中的常见的功能，总体包括地图的引入、基本设置、模式的切换、定位的功能、方向传感器的结合、以及添加覆盖物。</p>
  </li>
</ol>

<h1 id="section-4">设计</h1>
<p>### 教程</p>

<ol>
  <li>
    <p><a href="http://www.uisdc.com/comprehensive-material-design-note#368390-tsina-1-73915-ebfdadd9b239798c6a2035c828aafd11">重磅教程！帮你全面彻底搞定MATERIAL DESIGN的学习笔记</a></p>

    <p>自从Material design发布以来，可乐橙就在一直收集相关素材与资源，研究别人的作品。这套设计风格非常鲜明，带有浓郁的Google式严谨和理性哲学，深得我心。</p>
  </li>
  <li>
    <p><a href="http://www.uisdc.com/ps-icon-pixel-perfect#">小技巧！利用PS CS6的新功能保持ICON细节饱满完美</a></p>

    <p>一些本来尺寸很大，质量很不错的高清png图片，经过缩小转为icon时却变得惨不忍睹。这对于高清控与细节控来说简直没法忍，今天分享一篇关于利用Photoshop cs6网格对齐功能绘制高清icon的文章。</p>
  </li>
</ol>

<h3 id="section-5">资源</h3>

<ol>
  <li>
    <p><a href="https://gitcafe.com/riku/Awesome-Sketch">Awesome-Sketch</a></p>

    <p>这是一份为想学 Sketch 的设计师、前端工程师们准备的不完全列表，包含了 Sketch 视频、文章、手册等。</p>
  </li>
</ol>

<hr />
<p>版权声明：欢迎自由转载-非商用-非衍生-保持署名 | <a href="http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh">Creative Commons BY-NC-ND 3.0</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android开发技术周报 Issue#16]]></title>
    <link href="http://www.inferjay.com/blog/2015/01/19/android-dev-weekly-issue-16/"/>
    <updated>2015-01-19T13:48:42+08:00</updated>
    <id>http://www.inferjay.com/blog/2015/01/19/android-dev-weekly-issue-16</id>
    <content type="html"><![CDATA[<h3 id="section">教程</h3>

<ol>
  <li>
    <p><a href="http://www.androidperformance.com/android-performance-optimization-overdraw-1.html">Android性能优化之过渡绘制(一)</a></p>

    <p>首先将讲解一下GPU过渡绘制，也是开发者最直接接触的部分吧，这个内容将分为两个部分来将讲，第一部分初步讲解一下gpu过渡绘制的原理，和一些优化建议，第二部分将用实际例子来讲解优化GPU过渡绘制的一般步骤。</p>
  </li>
  <li>
    <p><a href="http://www.androidperformance.com/android-performance-optimization-overdraw-2.html">Android性能优化之过渡绘制(二)</a></p>

    <p>这篇文章从实战的角度，讲解了一个过渡绘制的优化过程。当然这里用到的只是很少的一部分，毕竟每个应用差别很大，优化方式也各不一样。所以这篇文章仅供参考，想把这块做好还是要下功夫的。不过令我比较欣慰的是，在公司内推行这个优化之后，我们Flyme内部的自带应用已经做得很好了，当然还是有不少界面有优化的空间，但总体还是比较满意的。</p>
  </li>
  <li>
    <p><a href="http://stormzhang.com/devtools/2015/01/15/android-studio-tutorial6/">Android Studio系列教程六–Gradle多渠道打包</a></p>

    <p>由于国内Android市场众多渠道，为了统计每个渠道的下载及其它数据统计，就需要我们针对每个渠道单独打包，如果让你打几十个市场的包岂不烦死了，不过有了Gradle，这再也不是事了</p>
  </li>
</ol>

<!--more-->

<ol>
  <li>
    <p><a href="http://www.kuqin.com/shuoit/20141118/343265.html">你不可不知的10个Github功能</a></p>

    <p>Github深受开发者们喜爱，不过有很多Github功能还是不为大多数人熟知，有的，你可能从来没用过；有的，可能见过，却从未正真了解过。这里慧都控件网为大家收集了10个不可不知的Github功能。</p>
  </li>
  <li>
    <p><a href="http://www.imooc.com/wenda/detail/243880">ListView小知识整理：滑动背景、Item间隙等</a></p>

    <p>在Android中，ListView是最常用的一个控件，在做UI设计的时候，很多人希望能够改变一下它的背景，使他能够符合整体的UI设计，改变背景很简单只需要准备一张图片，然后指定属性 android:background=”@drawable/bg”，不过不要高兴地太早，当你这么做以后，发现背景是变了，但是当你拖动，或者点击 list空白位置的时候发现ListItem都变成黑色的了，破坏了整体效果，这是为什么呢？</p>
  </li>
  <li>
    <p><a href="http://lzyblog.com/2015/01/13/Android性能优化课程翻译（一）：渲染性能/">Android性能优化课程翻译（一）：渲染性能</a></p>

    <p>渲染性能意味着你可以有多快的速度绘制你的activity并让它在屏幕上刷新出来。这里的性能良好指的是你的用户感觉你的应用程序是流畅的，并且是快速响应的，这意味着你必须在16ms甚至更少的时间来完成所有的逻辑和渲染操作，但实际上这可能比你想象的要困难一些。</p>
  </li>
  <li>
    <p><a href="http://lzyblog.com/2015/01/09/Android应用监听自己是否被卸载，做反馈统计/">Android应用监听自己是否被卸载，做反馈统计</a></p>

    <p>最近做项目的时候碰到这样一个需求：用户卸载应用后提供反馈信息以便更好的改进软件，并统计卸载量。Android可以监听卸载广播，得到什么应用被卸载了，但是系统并没有提供监听自己卸载的方法，于是乎，在网上找了一些方法，根据自己需求做了些修改，最后完成这个需求。</p>
  </li>
  <li>
    <p><a href="http://lzyblog.com/tags/OkHttp/">Square开源库OkHttp的分析和使用系列教程</a></p>

    <p>HTTP是目前很多应用的网络连接方式，通过它我们可以交换数据和媒体。有效的使用HTTP会使你的应用获得更快的加载速度，并且更节约带宽。OKHttp就是为这个目标应运而生的。</p>
  </li>
  <li>
    <p><a href="http://www.oschina.net/translate/what-every-programmer-should-know-about-memory-part1?print">每个程序员都应该了解的内存知识【第一部分】</a></p>

    <p>早期计算机比现在更为简单。系统的各种组件例如CPU，内存，大容量存储器和网口，由于被共同开发因而有非常均衡的表现。例如，内存和网口并不比CPU在提供数据的时候更（特别的）快。曾今计算机稳定的基本结构悄然改变，硬件开发人员开始致力于优化单个子系统。于是电脑一些组件的性能大大的落后因而成为了瓶颈。</p>
  </li>
</ol>

<h3 id="section-1">代码&amp;开源库</h3>

<ol>
  <li>
    <p><a href="https://github.com/Yalantis/Pull-to-Refresh.Rentals-Android">Pull-to-Refresh.Rentals-Android</a></p>

    <p>一个动画效果很赞的下拉刷新的控件。</p>

    <p><img src="https://camo.githubusercontent.com/d406ac5a03a2b1fa5cf41fadc8d2408cb8709bdc/68747470733a2f2f6431337961637572716a676172612e636c6f756466726f6e742e6e65742f75736572732f3132353035362f73637265656e73686f74732f313635303331372f7265616c6573746174652d70756c6c5f312d322d332e676966" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/Yalantis/Side-Menu.Android">Side-Menu.Android</a></p>

    <p>一个动画效果很赞的侧滑菜单库。</p>

    <p><img src="https://camo.githubusercontent.com/cb6caa7a392d01d46bca9d9485c01fc173f55fac/68747470733a2f2f6431337961637572716a676172612e636c6f756466726f6e742e6e65742f75736572732f3132353035362f73637265656e73686f74732f313638393932322f6576656e74732d6d656e755f312d312d362e676966" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/Yalantis/Context-Menu.Android">Context-Menu.Android</a></p>

    <p>一个动画效果很赞的上下文菜单库。</p>

    <p><img src="https://camo.githubusercontent.com/46c15734b552ce3afefa7efd1518909046b4677e/68747470733a2f2f6431337961637572716a676172612e636c6f756466726f6e742e6e65742f75736572732f3132353035362f73637265656e73686f74732f313738353237342f39396d696c65732d70726f66696c652d6c696768745f312d312d342e676966" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/xiprox/WaniKani-for-Android">WaniKani-for-Android</a></p>

    <p>一个做的很棒的学习日本汉字的App.</p>
  </li>
  <li>
    <p><a href="https://github.com/crossle/KitKatEmoji">KitKatEmoji</a> (推荐人<a href="http://www.weibo.com/songxiaoming">@CrossleSong</a>)</p>

    <p>Android KitKat emoji表情库</p>

    <p><img src="https://raw.githubusercontent.com/crossle/KitKatEmoji/master/KitKatEmoji-sample/preview.gif" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/r0adkll/Slidr">Slidr</a></p>

    <p>一个方便你为Activity添加滑动后关闭的库。</p>

    <p><img src="https://raw.githubusercontent.com/r0adkll/Slidr/master/images/slidr_gif.gif" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/felipecsl/GifImageView">GifImageView</a></p>

    <p>Android原生的ImageView是不能显示Gif图片，而这个GifImageView对ImageView进行了扩展可以显示Gif图片。</p>
  </li>
  <li>
    <p><a href="https://github.com/akexorcist/Android-RoundCornerProgressBar">Android-RoundCornerProgressBar</a></p>

    <p>一个漂亮的圆角水平进度条。</p>

    <p><img src="https://raw.githubusercontent.com/akexorcist/Android-RoundCornerProgressBar/master/image/header.jpg" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/TannerPerrien/picasso-transformations">picasso-transformations</a></p>

    <p>适用于Picasso图片加载库的图片转场动画库。</p>
  </li>
  <li>
    <p><a href="https://github.com/AndroidDeveloperLB/ChipsLibrary">ChipsLibrary</a></p>

    <p>在Android EditText中实现打Tag功能.</p>

    <p><img src="https://camo.githubusercontent.com/304547454e09fa27bcc5dea41a8572d8d96ba219/68747470733a2f2f6c68332e676f6f676c6575736572636f6e74656e742e636f6d2f2d307469445852646a4539772f55454b53526455615336492f41414141414141416f71772f746874634b4d5753574b732f773339332d683638332d6e6f2f706e672e706e67" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/wasabeef/glide-transformations">glide-transformations</a></p>

    <p>适用于Glide图片加载库的图片转场动画库。</p>

    <p><img src="https://raw.githubusercontent.com/wasabeef/glide-transformations/master/art/demo.gif" alt="image" /></p>
  </li>
</ol>

<h3 id="section-2">工具</h3>

<ol>
  <li>
    <p><a href="http://www.androiddevtools.cn">Android Studio 1.1 Preview 1</a></p>

    <p>本次主要更新：</p>

    <ol>
      <li>在新建项目的时候创建的launcher图标会被作为@mipmap资源代替@drawable资源。</li>
      <li>Link检查工具增加一些检查规则。</li>
      <li>增加Android Wear的watch faces模版。</li>
      <li>捉了许多只🐛。</li>
    </ol>
  </li>
</ol>

<h3 id="section-3">视频</h3>

<ol>
  <li>
    <p><a href="http://www.imooc.com/view/263?from=itblog">Android属性动画赏析</a></p>

    <p>动画几乎是一个好的App所不可缺少的一部分，它体现了一种更友好的交互方式，在iOS、Android L中动画的使用越来越多，特别是后者更是着重强调设计更好的动画。从3.0开始，Android就提供了一种更为强大的属性动画框架。本次课程，将向你介绍如何使用属性动画做出更好的动画</p>
  </li>
</ol>

<h3 id="section-4">设计</h3>

<h3 id="section-5">工具</h3>

<ol>
  <li>
    <p><a href="http://fontpair.co">FontPair</a></p>

    <p>一个帮助设计师挑选Google字体的网站。</p>
  </li>
</ol>

<hr />
<p>版权声明：欢迎自由转载-非商用-非衍生-保持署名 | <a href="http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh">Creative Commons BY-NC-ND 3.0</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android开发技术周报 Issue#15]]></title>
    <link href="http://www.inferjay.com/blog/2015/01/12/android-dev-weekly-issue-15/"/>
    <updated>2015-01-12T09:59:10+08:00</updated>
    <id>http://www.inferjay.com/blog/2015/01/12/android-dev-weekly-issue-15</id>
    <content type="html"><![CDATA[<h3 id="section">教程</h3>

<ol>
  <li>
    <p><a href="http://stormzhang.com/devtools/2015/01/05/android-studio-tutorial5/">Android Studio系列教程五–Gradle命令详解与导入第三方包</a></p>

    <p>Android Studio + Gradle的组合用起来非常方便，很多第三方开源项目也早都迁移到了Studio，为此今天就来介绍下查看、编译并导入第三方开源项目的方法。</p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/qiujuer/article/details/42471119">打造极致Material Design动画风格Button</a></p>

    <p>在我的文章中曾经有两篇关于Material Design风格的按钮实现。在第一章中只是简单的实现了动画的波纹效果，而在第二篇中对此进行了一定的扩充与优化，最后实现可以自动移动到中心位置的动画；虽然两者都可用，但是在我的使用中却发现了一定的问题，如有些位置点击会出现波纹速度的运算上的问题。</p>
  </li>
  <li>
    <p><a href="http://www.osforce.cn/group/9/thread/1065?fr=weibo&amp;mu=140910XRNWcD">Android开发-API指南-AIDL</a></p>

    <p>Android 接口定义语言 AIDL（Android Interface Definition Language）与其他已有的 IDL 很类似。 客户端和服务端可以通过由它定义的编程接口来达成共识，以便通过进程间通讯（IPC）完成相互通讯。 在 Android 系统中，通常一个进程不允许直接访问另一个进程的内存。 因此为了能够实现对话，进程需要把对象分解为操作系统可以识别的原生数据，在跨越进程边界后再组装起来。 实现组装的代码非常枯燥无趣，因此 Android 通过 AIDL 可有助于完成这一过程。</p>
  </li>
  <li>
    <p><a href="http://www.osforce.cn/group/9/thread/1053?fr=weibo&amp;mu=140910XRNWcD">Android Proguard 详解</a></p>

    <p>Java代码是非常容易反编译的。为了很好的保护Java源代码，我们往往会对编译好的class文件进行混淆处理。ProGuard是一个混淆代码的开源项目。它的主要作用就是混淆，当然它还能对字节码进行缩减体积、优化等，但那些对于我们来说都算是次要的功能。官网网址是：http://proguard.sourceforge.net/</p>
  </li>
</ol>

<!--more-->

<ol>
  <li>
    <p><a href="http://www.importnew.com/14347.html">设计模式问答2</a></p>

    <p>这是设计模式问答1的连载。在这个系列，我们将覆盖到解释器、迭代器、调停者、备忘录和观察者模式。</p>
  </li>
  <li>
    <p><a href="http://www.importnew.com/14410.html">Java不同压缩算法的性能比较</a></p>

    <p>本文将会对常用的几个压缩算法的性能作一下比较。结果表明，某些算法在极端苛刻的CPU限制下仍能正常工作。文中进行比较的算有：JDK GZIP、JDK deflate、LZ4压缩算法的Java实现和Snappy。</p>
  </li>
  <li>
    <p><a href="http://www.programmer.com.cn/15036/">Android软件安全开发实践（上）</a></p>

    <p>Android开发是当前最火的话题之一，但很少有人讨论这个领域的安全问题。本系列将分两期，探讨Android开发中常见的安全隐患和解决方案。第一期将从数据存储、网络通信、密码和认证策略这三个角度，带你走上Android软件安全开发实践之旅。</p>
  </li>
  <li>
    <p><a href="http://www.programmer.com.cn/15273/">Android软件安全开发实践（下）</a></p>

    <p>在《Android软件安全开发实践（上）》中我们讨论了数据存储、网络通信、密码和认证策略等安全问题和解决方案，本期将继续从组件间通信、数据验证和保全保护等方面来实践Android软件安全开发之路。</p>
  </li>
  <li>
    <p><a href="http://www.freebuf.com/tools/55392.html">深度：针对超强手机木马DenDroid的分析与测试</a></p>

    <p>赛门铁克的研究人员就在手机移动领域发现了一种新的名为Dendroid木马，可以轻松实现对手机远程恶意操控。而在此前赛门铁克发现了一个名为AndroidRAT的android远程管理软件被认为是第一个恶意绑定软件。然而这款最新发现的运行在http上的Dendroid具有更强功能。</p>
  </li>
  <li>
    <p><a href="http://www.importnew.com/14260.html">解析IntelliJ IDEA内部设计</a></p>

    <p>IntelliJ IDEA第一版发布于2001年1月，这是第一款集成了高级代码导航和代码重构功能的Java IDE。2009年，JetBrains开源了其社区版。从那时开始，就新出现了许多基于其社区版的IDE，如Google的Android Studio。本文使用JArchitect作为工具，深入了解Intellij IDEA社区版，探索其中使用的一些内部设计决策。</p>
  </li>
</ol>

<h3 id="section-1">代码&amp;开源库</h3>

<ol>
  <li>
    <p><a href="https://github.com/Jhuster/ImageCropper">ImageCropper</a></p>

    <p>一个Android图片剪裁库,特性:1.支持通过手势移动和缩放剪裁窗口, 2支持固定剪裁窗口大小、固定窗口的长宽比率, 3.支持设置最大的窗口长和宽, 4.支持剪裁图片的旋转。</p>
  </li>
  <li>
    <p><a href="https://github.com/JakeWharton/Telecine">Telecine</a></p>

    <p>JakeWharton大神开发的一款录屏App。</p>
  </li>
  <li>
    <p><a href="https://github.com/ismoli/DynamicRecyclerView">DynamicRecyclerView</a></p>

    <p>对RecyclerView进行了扩展，天就拖拽排序功能。</p>
  </li>
  <li>
    <p><a href="https://github.com/tajchert/BusWear">BusWear</a></p>

    <p>BusWear是一个简单的支持Android Wear设备的EventBus（事件总线）库。仅需要一行代码就可获得异步的事件总线（synchronized event buses）在Wear和移动平台之间。</p>

    <p><img src="https://raw.githubusercontent.com/tajchert/BusWear/master/docs/diagram_simple.png" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/TonicArtos/SuperSLiM">SuperSLiM</a></p>

    <p>SuperSLiM为RecyclerView提供了一个布局管理器允许您创建垂直列表和每节标题和布局。 </p>

    <p><img src="https://camo.githubusercontent.com/3a55cfd0bbfd28e72aa875f4905cc23cc37a87f4/68747470733a2f2f342e62702e626c6f6773706f742e636f6d2f2d657034364a4b70476138342f564a685831706c575743492f4141414141414141585a592f394131417272563361336b2f73313630302f5375706572534c694d2d44656d6f2d736d616c6c2e676966" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/AChep/Header2ActionBar">Header2ActionBar</a></p>

    <p>Header2ActionBar是一个实现了像Play Music and Google Newspaper应用中褪色（fading）Action Bar效果的Action Bar。</p>
  </li>
  <li>
    <p><a href="https://github.com/wasabeef/recyclerview-animators">recyclerview-animators</a></p>

    <p>一个方便你给RecyclerView items添加item动画的库。</p>
  </li>
  <li>
    <p><a href="https://github.com/Raizlabs/Singleton">Singleton</a></p>

    <p>一个非常简洁的库，可以帮助你方便将一个对象存储在磁盘。</p>
  </li>
  <li>
    <p><a href="https://github.com/JoanZapata/android-asyncservice">android-asyncservice</a></p>

    <p>AsyncService使用注释来缩短开始异步长时间运行的任务所需的代码,并返回结果。</p>
  </li>
  <li>
    <p><a href="https://github.com/sakebook/Reachability">Reachability</a></p>

    <p>类似于iPhone 6 &amp; 6 Plus的下拉悬停从而方便你操作屏幕的顶部。</p>

    <p><img src="https://raw.githubusercontent.com/sakebook/Reachability/master/images/demo.gif" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/twotoasters/SectionCursorAdapter">SectionCursorAdapter</a></p>

    <p>对CursorAdapter进行了扩展，添加sections和快速滚动滑块。</p>

    <p><img src="https://raw.githubusercontent.com/twotoasters/SectionCursorAdapter/master/screenshots/sections.png" alt="image" /><img src="https://raw.githubusercontent.com/twotoasters/SectionCursorAdapter/master/screenshots/dialog.png" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/phishman3579/android-quick-response-code">android-quick-response-code</a></p>

    <p>Android QR码编码解码库。</p>
  </li>
</ol>

<h3 id="section-2">工具</h3>

<ol>
  <li>
    <p><a href="https://github.com/tmiyamon/gradle-mdicons">gradle-mdicons</a></p>

    <p>一个帮助你管理google’s official material design图标的插件。</p>

    <p><img src="https://raw.githubusercontent.com/tmiyamon/gradle-mdicons/master/gradle-mdicons-result.png" alt="image" /></p>
  </li>
</ol>

<h3 id="section-3">视频</h3>

<ol>
  <li>
    <p><a href="http://i.youku.com/chinagdg">ChinaGDG 视频中心</a></p>

    <p>ChinaGDG 视频中心。第一时间同步 Google Developers 的各种技术视频，如 Android、Web 等技术，方便国内开发者学习。视频已包含英文字幕，部分视频还有来自国内志愿者提供的中文翻译字幕。</p>
  </li>
  <li>
    <p><a href="http://t.cn/RZJaz5I">Android性能模式</a></p>

    <p>老美新年放假归来，官方更新了16集与Android性能优化相关的视频《 Android Performance Patterns》视频已运至墙内，主题为“New year, new initiative” 详细查看<a href="http://t.cn/RZt1F4S">G+社区</a> 和 <a href="http://www.infoq.com/cn/news/2015/01/google-android-performance?utm_campaign=infoq_content&amp;utm_source=infoq&amp;utm_medium=feed&amp;utm_term=global&amp;utm_reader=feedly#0-tsina-1-92503-397232819ff9a47a7b7e80a40613cfe1">Google探讨Android性能模式的16个视频总结</a></p>
  </li>
  <li>
    <p><a href="http://www.imooc.com/view/237?from=itblog">打造Android流式布局和热门标签</a></p>

    <p>本课程将带大家通过自定义ViewGroup实现流式布局，课程详细介绍了自定义控件需要掌握的步骤，每个步骤相关方法的作用、调用时机的讲解以及编写。在完成自定义ViewGroup编写后，实战应用于热门标签（包括动态添加）的显示。</p>
  </li>
</ol>

<h3 id="section-4">设计</h3>

<h3 id="section-5">工具</h3>

<ol>
  <li>
    <p><a href="https://github.com/abynim/SketchSquares">SketchSquares</a></p>

    <p>一个将Sketch的layers自动替换为Instagram照片的插件。</p>
  </li>
</ol>

<hr />
<p>版权声明：欢迎自由转载-非商用-非衍生-保持署名 | <a href="http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh">Creative Commons BY-NC-ND 3.0</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android开发周报 Issue#14]]></title>
    <link href="http://www.inferjay.com/blog/2015/01/05/android-dev-weekly-issue-14/"/>
    <updated>2015-01-05T23:41:36+08:00</updated>
    <id>http://www.inferjay.com/blog/2015/01/05/android-dev-weekly-issue-14</id>
    <content type="html"><![CDATA[<h3 id="section">新闻</h3>

<ol>
  <li>
    <p><a href="http://www.infoq.com/cn/news/2015/01/java-date-format-with-caution">慎用Java日期格式化</a></p>

    <p>这条留言实际指向了Twitter上的一个帖子，这个帖子提醒大家，如果使用了YYYY的格式符来格式化日期，那么就有可能用错格式了。Reddit的一位读者解释说，Twitter由于误用格式符，把当天的日期变成了2015年12月的某天。</p>
  </li>
</ol>

<h3 id="section-1">教程</h3>

<ol>
  <li>
    <p><a href="http://blog.csdn.net/luoshengyang/article/details/42072975">ART运行时垃圾收集机制简要介绍和学习计划</a></p>

    <p>为了学习ART运行时的垃圾收集机制，我们先把Dalvik虚拟机的垃圾收集机制研究了一遍。这是因为两者都使用到了Mark-Sweep算法，因此它们在概念上有很多一致的地方。然而在实现上，Dalvik虚拟机的垃圾收集机制要简单一些。这样我们就可以先从简单的Dalvik虚拟机垃圾收集机制入手，然后再逐步深入地学习复杂的ART运行时垃圾收集机制。</p>
  </li>
  <li>
    <p><a href="http://www.jianshu.com/p/6c2b7d261e1a">Material Design in Action — 猿题库</a></p>

    <p>猿题库很早之前就发布了 Android 版本的客户端，但猿题库的联合创始人，郭常圳 先生，并不认同 Android Design （或者现在的 Material Design），而且认为应用程序的设计规范，应当由开发商来规定。然而当我试用猿题库的时候发现，这个应用对其进行 Material Design 的适配，其实并不困难。因此就有了对其进行重新设计的念头。</p>
  </li>
  <li>
    <p><a href="http://blog.jobbole.com/78995/">正确使用Android性能分析工具——TraceView</a></p>

    <p>最近公司app中有些列表在滑动的时候会有卡顿现象，我就开始着手解决这些问题，解决问题之前首先要分析列表滑动的性能瓶颈在什么地方。因为之前不会正确使用TraceView这个工具，主要是看不懂TraceView界面下方数据指标的值代表什么意思…以前我用StopWatch类来分析性能，现在觉得弱爆了…不过有些地方StopWatch工具类还是很简单好用的~</p>
  </li>
</ol>

<!--more-->

<ol>
  <li>
    <p><a href="http://testerhome.com/topics/1756">Gradle 中的 task 依赖</a></p>

    <p>文章讲解了如何自定义Gradle的task，以及怎样定义task之间的依赖关系。</p>
  </li>
  <li>
    <p><a href="http://www.lightskystreet.com/2014/12/15/viewpager-anim/">动画系列 - ViewPger动画</a></p>

    <p>本篇文章介绍的ViewPager动画，可以分为两类，第一类是针对于ViewPager的界面滑动动画(这个是PageTransformer的真正用途)，分析并比较了AndroidImageSlider和JazzyViewPager两种实现，第二类是对ViewPager中的内容进行动画处理，这个是这个是PageTransformer的巧妙应用，处理好了可以达到很棒的交互效果，示例是Yahoo天气的视差效果。</p>
  </li>
  <li>
    <p><a href="http://www.csdn.net/article/2014-12-30/2823366-Locate-Android-NDK">如何定位Android NDK开发中遇到的错误</a></p>

    <p>Android NDK中的错误定位对很多开发者来说是一件头疼的事，本文通过一个Demo程序详细讲解了NDK的错误是如何产生的，以及如何通过命令行工具定位NDK的问题所在。</p>
  </li>
  <li>
    <p><a href="http://www.cnblogs.com/sunzn/archive/2013/05/10/3064129.html">Android 编程下 Touch 事件的分发和消费机制</a></p>

    <p>Android 中与 Touch 事件相关的方法包括：dispatchTouchEvent(MotionEvent ev)、onInterceptTouchEvent(MotionEvent ev)、onTouchEvent(MotionEvent ev)；能够响应这些方法的控件包括：ViewGroup、View、Activity。</p>
  </li>
  <li>
    <p><a href="http://weibo.com/p/1001603793195556321741">Android源码下载和编译总结</a></p>

    <p>前几天常用的笔记本电脑挂了，要拿去维修，于是就准备用另一台备用电脑来重新下载和编译一下Android源码，以便工作研究之用。鉴于最近一直都有人问下载和编译Android源码的问题，并且我上一次写Android源码编译的文章已经是2011年的事情，于是就趁这个机会写篇文章总结一下。</p>
  </li>
</ol>

<h3 id="section-2">代码&amp;开源库</h3>

<ol>
  <li>
    <p><a href="https://github.com/wasabeef/awesome-android-ui">awesome-android-ui</a></p>

    <p>一些 Android UI/UX 库的集合列表。</p>
  </li>
  <li>
    <p><a href="https://github.com/nhachicha/android-native-dependencies">android-native-dependencies</a></p>

    <p>一个解析和下载Android native 依赖的Gradle插件。</p>
  </li>
  <li>
    <p><a href="https://github.com/xiprox/ErrorView">ErrorView</a></p>

    <p>一个用来显示错误信息的自定义View，包含图标、主标题、自标题和重试按钮。</p>

    <p><img src="https://raw.githubusercontent.com/xiprox/ErrorView/master/graphics/screenshots/ss_01.png" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/wangjiegulu/DraggableFlagView">DraggableFlagView</a></p>

    <p>可拖拽的红点，（仿新版QQ，tab下面拖拽标记为已读的效果），拖拽一定的距离可以消失回调。</p>
  </li>
</ol>

<h3 id="section-3">工具</h3>

<ol>
  <li>
    <p><a href="https://hyperfox.org/">Hyperfox</a></p>

    <p>一个用Go 语言写的强悍的抓包工具！可以抓取https协议的！</p>

    <p><img src="https://hyperfox.org/images/hyperfox-diagram.png" alt="image" /></p>
  </li>
</ol>

<h3 id="section-4">设计</h3>

<h3 id="section-5">教程</h3>

<ol>
  <li>
    <p><a href="http://www.tuyiyi.com/w/36011.html">大屏手机时代，如何重塑界面交互</a></p>

    <p>这是一个大屏手机的时代。强调这件事情的意义在于，这已经成为事实。Medium上存在一份个人统计。在过去7年，新上市的手机屏幕尺寸越来越大。</p>
  </li>
</ol>

<hr />
<p>版权声明：欢迎自由转载-非商用-非衍生-保持署名 | <a href="http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh">Creative Commons BY-NC-ND 3.0</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android开发周报 Issue#13]]></title>
    <link href="http://www.inferjay.com/blog/2014/12/29/android-dev-weekly-issue-13/"/>
    <updated>2014-12-29T10:18:59+08:00</updated>
    <id>http://www.inferjay.com/blog/2014/12/29/android-dev-weekly-issue-13</id>
    <content type="html"><![CDATA[<h3 id="section">新闻</h3>
<ol>
  <li>
    <p><a href="http://www.infoq.com/cn/news/2014/12/oracle-java-jar-package">Oracle开始从Java运行时中移除JAR包</a></p>

    <p>早在2012年8月，在Java平台首席架构师Mark Reinhold宣布<a href="http://openjdk.java.net/projects/jigsaw/">模块化项目Jigsaw</a>之后不久，<a href="http://openjdk.java.net/jeps/162">JEP 162</a>这一题为“准备模块化”的提案就指出，在Jigsaw项目中为模块化系统开发的代码不会集成到JDK 8中。那次延期直接将模块化支持推迟到JDK 9，最早也得到2016年。</p>
  </li>
  <li>
    <p><a href="http://www.eoeandroid.com/thread-558758-1-1.html">android5.0让位，Android 6.0曝光这是神马情况？</a></p>

    <p>　Android 5.0刚和我们见面没多久，下一代操作系统Android 6.0就曝光了。外媒报道称，谷歌另一个开发小组已经着手进行一款代号为“M”的系统的研发工作，而这个“M”很有可能就是Android 6.0的代号。据猜测，Android 6.0最主要的变化将会是优化车载表现，可直接安装在汽车当中，这样用户无需智能手机即可直接控制汽车。</p>
  </li>
</ol>

<h3 id="section-1">教程</h3>

<ol>
  <li>
    <p><a href="http://www.cnblogs.com/ct2011/p/4183553.html">将Eclipse代码导入到AndroidStudio的两种方式</a></p>

    <p>说到使用AndroidStudio，除了新建的项目，我们都会面临的问题是原先Eclipse的代码该怎么导入到AndroidStudio中使用。Google为了让我们更加方便的使用AndroidStudio，提供了两种导入Eclipse代码的方式：一种兼容Eclipse，一种是全新的Android Gradle Project.</p>
  </li>
  <li>
    <p><a href="http://www.importnew.com/14227.html">Java 注解指导手册 – 终极向导</a></p>

    <p>在这篇文章中我们将阐述什么是Java注解，它们如何工作，怎么使用它们。我们将揭开Java注解的面纱，包括内建注解或称元注解，还将讨论Java8中与之相关的的新特性。最后，我们将实现自定义的注解，编写一个使用注解的处理程序（消费器），它通过java反射使用注解。</p>
  </li>
  <li>
    <p><a href="http://blog.jobbole.com/30940/">缓存、缓存算法和缓存框架简介</a></p>

    <p>我们都听过 cache，当你问他们是什么是缓存的时候，他们会给你一个完美的答案，可是他们不知道缓存是怎么构建的，或者没有告诉你应该采用什么标准去选择缓存框架。在这篇文章，我们会去讨论缓存，缓存算法，缓存框架以及哪个缓存框架会更好。</p>
  </li>
</ol>

<!--more-->

<ol>
  <li>
    <p><a href="http://www.infoq.com/cn/news/2014/12/qq-mobile-practice">手机QQ的移动化实践之路</a></p>

    <p>手机QQ的移动化实践之路】在刚刚结束的AS北京上，腾讯即时通讯平台部技术总监范瑞彬做了题为《手机QQ的移动化实践之路》的演讲，从移动环境的特点、如何做好接入、架构设计理念三个方面分享了手Q一路走来的诸多经验。演讲PPT下载：<a href="http://pan.baidu.com/s/1mgIDMtU">http://pan.baidu.com/s/1mgIDMtU</a></p>
  </li>
  <li>
    <p><a href="http://www.infoq.com/cn/news/2014/12/taobao-app-evolution">手机淘宝构架演化实践</a></p>

    <p>阿里心石：手机淘宝构架演化实践】在本届ArchSummit中，来自阿里无线事业部的高级专家李敏（花名心石 @allblue_华丽地低调 ）与我们分享了《手机淘宝架构演化实践》，畅谈阿里巴巴无线从开始之初到成为日活上亿级别电商应用技术变迁和积累。演讲PPT下载：<a href="http://pan.baidu.com/s/1kTgMfMv">http://pan.baidu.com/s/1kTgMfMv</a></p>
  </li>
  <li>
    <p><a href="http://www.testerhome.com/topics/1718">Gradle 学习专辑</a></p>

    <p>该学习专辑包含：gradle 初步构建（一）、Java Project Gradle Emma、Android Project Gradle jacoco、Android Gradle Espresso tests、自由的使用 gradle 构建你的应用、Groovy 初探（一）、gradle 集成修改 Android Manifest.xml 打多个包实践和Gradle 编译交互小技巧等，并且还在持续更新中。</p>
  </li>
  <li>
    <p><a href="http://tech.glowing.com/cn/dai-ma-gui-fan-he-androidxiang-mu-zhong-de-xie-ke-yong-gong-ju/">代码规范和Android项目中的一些可用工具</a></p>

    <p>这里主要讲一下关于代码规范的相关问题，和在Android项目中如何利用一些工具进行规范和检查。代码规范不是一个Android项目特有的问题，所以前部分内容是不单针对Android的。</p>
  </li>
  <li>
    <p><a href="http://stormzhang.gitcafe.com/devtools/2014/12/18/android-studio-tutorial4/">Android Studio系列教程四–Gradle基础</a></p>

    <p><a href="http://weibo.com/zhangqi8">googdev</a>结合Stduio 1.0正式版与最新的Gradle语法通过自己的开源项目 <a href="https://github.com/stormzhang/9GAG">9GAG</a> 讲解了Gradle相关的知识，后续会介绍一种我常用的快速方便的编译查看第三方开源项目的方法，如何导入Android Studio，Gradle常用基本命令，多渠道打包配置等。</p>
  </li>
  <li>
    <p><a href="http://top.jobbole.com/17733/">每个程序员至少阅读两次的 10 篇技术论文</a></p>

    <p>这10篇论文包括：编程语言中的基本概念、为什么函数式编程重要、计算机编程的公理基础、分布式系统中的时间、时钟和事件顺序、理解类型、数据抽象和多态、符号表达式的递归函数，及其机器计算等。</p>
  </li>
</ol>

<h3 id="section-2">代码&amp;开源库</h3>

<ol>
  <li>
    <p><a href="https://github.com/oli107/material-range-bar">MaterialRangeBar</a></p>

    <p>Android widget for selecting a range of values.</p>
  </li>
  <li>
    <p><a href="https://github.com/StanKocken/SVG2Drawable">SVG2Drawable</a></p>

    <p>Use a jar executable to create a Drawable class to display a SVG on Android.</p>
  </li>
  <li>
    <p><a href="https://github.com/kageiit/gradle-robojava-plugin">gradle-robojava-plugin</a></p>

    <p>Gradle plugin to integrate Robolectric tests into Android Studio。</p>
  </li>
  <li>
    <p><a href="https://github.com/westlinkin/AndroidLocalizationer">AndroidLocalizationer</a></p>

    <p>This is a Android Studio/ IntelliJ IDEA plugin to localize your Android app, translate your string resources automactically. <a href="https://plugins.jetbrains.com/plugin/7629">https://plugins.jetbrains.com/plugin/7629</a></p>
  </li>
  <li>
    <p><a href="https://github.com/telly/MrVector">MrVector</a></p>

    <p>AKA VectorDrawableCompat: A 14+ backport of VectorDrawable.</p>
  </li>
  <li>
    <p><a href="https://github.com/frogermcs/HelloMultidex">HelloMultidex</a></p>

    <p>Example project for multi-dex project in Android.</p>
  </li>
  <li>
    <p><a href="https://github.com/jasonpolites/gesture-imageview">gesture-imageview</a></p>

    <p>Implements pinch-zoom, rotate, pan as an ImageView for Android 2.1+.</p>
  </li>
  <li>
    <p><a href="https://github.com/nispok/slidingtabs">slidingtabs</a></p>

    <p>Gradle port of Google’s SlidingTabLayout to display a custom ViewPager title strip.</p>
  </li>
  <li>
    <p><a href="https://github.com/Malinskiy/SuperRecyclerView">SuperRecyclerView</a></p>

    <p>Pumped up RecyclerView.This is an attempt to make RecyclerView easier to use.</p>

    <p>Features built in:</p>

    <ul>
      <li>ProgressBar while adapter hasn’t been set</li>
      <li>EmptyView if adapter is empty</li>
      <li>SwipeRefreshLayout (Google’s one)</li>
      <li>Infinite scrolling, when you reach the X last item, load more of them.</li>
      <li>Swipe To Dismiss</li>
      <li>Sticky headers (via <a href="https://github.com/eowise/recyclerview-stickyheaders">Eowise</a>, see sample)</li>
    </ul>
  </li>
  <li>
    <p><a href="https://github.com/aicaprio/CurtainView">CurtainView</a></p>

    <p>An android view,which can layer on any gravity for swiping.</p>
  </li>
</ol>

<h3 id="section-3">工具</h3>

<ol>
  <li>
    <p>国内几个Android SDK镜像</p>

    <p>大连东软信息学院镜像服务器的地址: <code>http://mirrors.neusoft.edu.cn</code> 端口：80</p>

    <pre><code>北京化工大学镜像服务器的地址: 
1. IPv4: `http://ubuntu.buct.edu.cn/` 端口：80
2. IPv4: `http://ubuntu.buct.cn/`   端口：80
3. IPv6: `http://ubuntu.buct6.edu.cn/`  端口：80
</code></pre>

    <p>上海GDG镜像服务器地址:<code>http://sdk.gdgshanghai.com </code>  端口：8000</p>

    <p><strong>使用方法</strong>：</p>

    <ol>
      <li>启动 Android SDK Manager ，打开主界面，依次选择『<strong>Tools</strong>』、『<strong>Options…</strong>』，弹出『<strong>Android SDK Manager - Settings</strong>』窗口；</li>
      <li>在『<strong>Android SDK Manager - Settings</strong>』窗口中，在『<strong>HTTP Proxy Server」和「HTTP Proxy Port</strong>』输入框内填入上面镜像服务器地址和端口，并且选中『<strong>Force https://… sources to be fetched using http://…</strong>』复选框。设置完成后单击『<strong>Close</strong>』按钮关闭『<strong>Android SDK Manager - Settings</strong>』窗口返回到主界面；</li>
      <li>依次选择『<strong>Packages</strong>』、『<strong>Reload</strong>』。</li>
    </ol>
  </li>
  <li>
    <p><a href="https://github.com/mcxiaoke/gradle-packer-plugin">gradle-packer-plugin Android 多渠道打包工具</a></p>

    <p>gradle-packer-plugin 是Android多渠道打包工具Gradle插件，可方便的于自动化构建系统集成，通过很少的配置可实现如下功能 ：</p>

    <ul>
      <li>支持自动替换AndroidManifest文件中的meta-data字段实现多渠道打包</li>
      <li>支持自定义多渠道打包输出的存放目录和最终APK文件名</li>
      <li>支持自动修改versionName中的build版本号，实现版本号自动增长</li>
    </ul>
  </li>
  <li>
    <p><a href="https://gitter.im">Gitter.im</a></p>

    <p>Chat, for GitHub.</p>

    <p><img src="http://ww4.sinaimg.cn/bmiddle/005GSHYzjw1eniqp77z75j31kw0w74ii.jpg" alt="image" /></p>
  </li>
</ol>

<h3 id="section-4">视频</h3>

<ol>
  <li><a href="http://v.youku.com/v_show/id_XNTMzMjYzMzM2.html">阿里技术沙龙第十六期《android插件化及动态部署—ATLAS 》伯奎</a></li>
</ol>

<h3 id="section-5">设计</h3>

<h3 id="section-6">教程</h3>

<ol>
  <li>
    <p><a href="http://zhuanlan.zhihu.com/rijing/19845226">Sketch 制作扁平图标</a></p>

    <p>用Sketch一步一步教你制作扁平图标，步骤很详细</p>
  </li>
  <li>
    <p><a href="http://leonpd.lofter.com/post/20f397_4cb74d1">动效软件 Form 教程：概览与基础 patch 介绍</a></p>

    <p>都说产品设计师的设计可以用 Axure + Sketch + Origami三者联动，完成原型、视觉和动效的一条龙工作，前一段时间也抽空学习了一下 Quartz Composer（以下简称 QC） + Origami，虽然有一定的上手难度，但是确实能够做出非常逼真的效果。</p>
  </li>
</ol>

<hr />
<p>版权声明：欢迎自由转载-非商用-非衍生-保持署名 | <a href="http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh">Creative Commons BY-NC-ND 3.0</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android Studio 自动更新失败解决办法]]></title>
    <link href="http://www.inferjay.com/blog/2014/12/26/update-android-studio-fail/"/>
    <updated>2014-12-26T12:53:00+08:00</updated>
    <id>http://www.inferjay.com/blog/2014/12/26/update-android-studio-fail</id>
    <content type="html"><![CDATA[<p>昨天在G+中看到Android Studio又有更新了就心血来潮想去更新体验一下，可是无论我怎么点Check Update却一直提示<code>Connection failed. Please check your network connection and try again</code>，开始以为是由于G*W在捣乱，但是打开VPN后还是无法更新，然后开始Google了一下找到了下面的解决办法。</p>

<p><img src="http://www.inferjay.com/images/notes_images/android-studio-update-error.png" alt="image" title="android-studio-update-error" /></p>

<h3 id="mac-osx">Mac OSX</h3>
<p>首先打开<code>Finder</code>在左边选择<code>Application</code>目录，在右边找到<code>Android Studio.app</code>,然后右击选择“显示包内容”如下图：</p>

<p><img src="http://www.inferjay.com/images/notes_images/android_studio_in_finder.png" alt="alt text" title="android_studio_in_finder" /></p>

<!--More-->

<p>然后找到 <code>Contents/bin/</code> 目录下的 <code>.vmoptions</code> 后缀的文件</p>

<p><img src="http://www.inferjay.com/images/notes_images/mac-studio-vmoptions.png" alt="image" title="mac-studio-vmoptions" /></p>

<h3 id="linux">Linux</h3>
<p>找到 <code>bin/</code> 目录下的 <code>studio.vmoptions</code> (32位系统) 或者 <code>studio64.vmoptions</code> (64位系统)文件</p>

<p><img src="http://www.inferjay.com/images/notes_images/linux-studio-vmoptions.png" alt="image" title="linux-studio-vmoptions" /></p>

<h3 id="windows">Windows</h3>
<p>找到 <code>bin/</code> 目录下的 <code>studio.vmoptions</code> (32位系统) 或者 <code>studio64.exe.vmoptions</code> (64位系统)文件</p>

<p><img src="http://www.inferjay.com/images/notes_images/windows-studio-vmoptions.png" alt="image" title="windows-studio-vmoptions" /></p>

<p>接着用自己趁手的编辑器打开 <code>idea.vmoptions</code> 或者 <code>studio.vmoptions/studio64.vmoptions</code> 或者 <code>studio.exe.vmoptions/studio64.exe.vmoptions</code> 文件添加如下内容：</p>

<div class="bogus-wrapper"><notextile><figure class="code"><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class="line-number">1</span>
<span class="line-number">2</span>
<span class="line-number">3</span>
</pre></td><td class="code"><pre><code class=""><span class="line">-Djava.net.preferIPv4Stack=true  
</span><span class="line">-Didea.updates.url=http://dl.google.com/android/studio/patches/updates.xml  
</span><span class="line">-Didea.patches.url=http://dl.google.com/android/studio/patches/  </span></code></pre></td></tr></table></div></figure></notextile></div>
<p>保存后，重新打开<code>Android Studio</code>点击Check Update就会弹出更新信息提示了</p>

<p><img src="http://www.inferjay.com/images/notes_images/android-studio-update-info.jpg" alt="alt text" title="android-studio-update-info" /></p>

<p>如果仍然无效，将url里的修改<code>http</code>为<code>https</code>，然后重启点击Check Update试试~~~</p>

<hr />
<p>版权声明：欢迎自由转载-非商用-非衍生-保持署名 | <a href="http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh">Creative Commons BY-NC-ND 3.0</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android开发周报 Issue#12]]></title>
    <link href="http://www.inferjay.com/blog/2014/12/22/android-dev-weekly-issue-12/"/>
    <updated>2014-12-22T09:54:44+08:00</updated>
    <id>http://www.inferjay.com/blog/2014/12/22/android-dev-weekly-issue-12</id>
    <content type="html"><![CDATA[<h3 id="section">文章</h3>

<ol>
  <li>
    <p><a href="http://blog.csdn.net/luoshengyang/article/details/41822747">Dalvik虚拟机垃圾收集（GC）过程分析</a></p>

    <p>前面我们分析了Dalvivk虚拟机堆的创建过程，以及Java对象在堆上的分配过程。这些知识是理解Dalvik虚拟机垃圾收集过程的基础。垃圾收集是一个复杂的过程，它要将那些不再被引用的对象进行回收。一方面要求Dalvik虚拟机能够标记出哪些对象是不再被引用的。另一方面要求Dalvik虚拟机尽快地回收内存，避免应用程序长时间停顿。本文就将详细分析Dalvik虚拟机是如何解决上述问题完成垃圾收集过程的。</p>
  </li>
  <li>
    <p><a href="http://www.jianshu.com/p/c85984cf99e2?utm_campaign=maleskine&amp;utm_content=note&amp;utm_medium=writer_share&amp;utm_source=weibo">使用Android Studio查看Android Lollipop源码</a></p>

    <p>作为Google的亲儿子,Nexus手机系列所收到的待遇大家有目共睹.Android5.0出来之后,Nexus5第一时间就升级到了最新的系统.那么作为Google亲儿子的Android Studio同样备受Google的重视,我也是第一时间从Eclipse转投到了Android Studio的怀抱中,从最初的测试版本一路升级到现在的1.0正式版本(今天发布了1.0.2,果断已经升级了),关于Android Studio的好处我就不用说了…</p>
  </li>
  <li>
    <p><a href="http://greenrobot.me/devnews/facebook-engineer-improve-android-app/">Facebook工程师是如何改进他们Android客户端的</a></p>

    <p>作为世界上最大的社交网络，Facebook的Android客户端面临着各种各样的使用环境（地理环境、Android设备以及移动网络等环境的差异）。也正是这个原因，为了检测自家Android客户端在发展中国家的性能表现，Android的产品经理、工程师在2013年的时候去了一趟非洲。当时我看到这个新闻的时候觉得有点怪异，后来看到他们这篇博客才有点理解他们这样做的原因了。</p>
  </li>
  <li>
    <p><a href="http://greenrobot.me/devpost/i-dont-need-your-permission/">你的Android应用完全不需要那么多的权限</a></p>

    <p>Android系统的权限从用户的角度来看有时候的确有点让人摸不着头脑。有时候可能你只需要做一些简单的事情（对联系人的信息进行编辑），却申请了远超你应用所需的权限（比如访问所有联系人信息的权限）。</p>
  </li>
</ol>

<!--more-->

<ol>
  <li>
    <p><a href="http://greenrobot.me/devpost/about-android-dex-method-number-limit/">关于 Android Dex 方法限制的一些总结</a></p>

    <p>在了解这个问题之前我们先要来看看Android 应用编译的过程:1. IDE中的资源打包工具 (Android Asset Packaging Tool ，即图中的aapt) 会将应用中的资源文件进行编译，这些资源文件包括 AndroidManifest.xml文件，为Activity定义的 XML 文件等等。在这个编译过程中也会产生一个 R.java 文件，这样你就可以在你的Java代码中引用这些资源了。</p>
  </li>
  <li>
    <p><a href="http://bobao.360.cn/learning/detail/122.html">安卓Hacking科普系列</a></p>

    <p>本系列科普文章包含：<a href="http://bobao.360.cn/learning/detail/122.html">Part 1: 应用组件攻防</a>、<a href="http://bobao.360.cn/learning/detail/127.html">Part 2: Content Provider攻防</a>、<a href="http://bobao.360.cn/learning/detail/126.html">Part 3：Broadcast Receivers攻防</a>、<a href="http://bobao.360.cn/learning/detail/133.html">Part 4:非预期的信息泄露（边信道信息泄露）</a>、<a href="http://bobao.360.cn/learning/detail/138.html">Part 5:使用JDB调试Java应用</a>、<a href="http://bobao.360.cn/learning/detail/140.html">Part 6：调试Android应用</a>、<a href="http://bobao.360.cn/learning/detail/142.html">Part 7:攻击WebView</a>、<a href="http://bobao.360.cn/learning/detail/144.html">Part 8:Root的检测和绕过</a>、<a href="http://bobao.360.cn/learning/detail/150.html">Part9: 不安全的本地存储：Shared Preferences</a>、<a href="http://bobao.360.cn/learning/detail/152.html">Part 10:不安全的本地存储</a>等，还在更新中。</p>
  </li>
</ol>

<h3 id="section-1">代码&amp;开源库</h3>

<ol>
  <li>
    <p><a href="https://github.com/golang/mobile">Go on Android</a></p>

    <p>The Go mobile repository holds packages and build tools for using Go on Android.</p>
  </li>
  <li>
    <p><a href="https://github.com/KeithYokoma/AccountAutoCompleteEditText">AccountAutoCompleteEditText</a></p>

    <p>Just a simple implementation for use of auto complete text view with device account suggestion.</p>
  </li>
  <li>
    <p><a href="https://github.com/pungrue26/SelectableRoundedImageView">SelectableRoundedImageView</a></p>

    <p>Android ImageView that supports different radiuses on each corner. It also supports oval(and circle) shape and border. This would be especially useful for using inside CardView which should be rounded only top left and top right corners(Don’t forget to call setPreventCornerOverlap(false) on your cardview).</p>
  </li>
  <li>
    <p><a href="https://github.com/ObjectLayout/ObjectLayout">ObjectLayout</a></p>

    <p>Java classes designed with optimizable object layout in mind 
<a href="http://objectlayout.github.com/ObjectLayout/">http://objectlayout.github.com/ObjectLayout/</a>。</p>
  </li>
  <li>
    <p><a href="https://github.com/glomadrian/MvpCleanArchitecture">MvpCleanArchitecture</a></p>

    <p>A sample project using Clean architecture and MVP in Android。</p>
  </li>
  <li>
    <p><a href="https://github.com/paveldudka/ViewStateSaveDemo">ViewStateSaveDemo</a></p>

    <p>Simple Demo of how do you save View’s state in Android。</p>
  </li>
  <li>
    <p><a href="https://github.com/jmolsmobile/LandscapeVideoCamera">LandscapeVideoCamera</a></p>

    <p>Powerful custom Android Camera with granular control over the video quality and filesize, restricting recordings to landscape only.</p>
  </li>
  <li>
    <p><a href="https://github.com/andkulikov/transitions-everywhere">transitions-everywhere</a></p>

    <p>Backport of Transitions API from Android KitKat and Lollipop. Compatible with Android 2.2+。</p>
  </li>
  <li>
    <p><a href="https://github.com/krschultz/android-proguard-snippets">android-proguard-snippets</a></p>

    <p>Example Proguard configurations for common Android libraries。</p>
  </li>
</ol>

<h3 id="section-2">工具</h3>

<ol>
  <li>
    <p><a href="http://tools.android.com/download/studio/canary/1-0rc4">Android Studio 1.0.2</a></p>

    <p><strong>墙内下载地址：</strong><a href="http://www.androiddevtools.cn/#android-studio">http://www.androiddevtools.cn/#android-studio</a>	 	 </p>
  </li>
</ol>

<h3 id="section-3">视频</h3>

<ol>
  <li>
    <p><a href="http://v.youku.com/v_show/id_XODUxODEzMDQ4.html?f=23217955">Android DevBytes</a></p>

    <p>墙内DevBytes视频更新啦！包括最新的《Android Vector Graphics》（难得有个华裔面孔！）、《Introducing Route 85》（Google面向iOS开发即将推出一系列视频）以及Auto和Wear（有车有表！）</p>
  </li>
</ol>

<h3 id="section-4">设计</h3>

<h4 id="section-5">工具</h4>

<ol>
  <li>
    <p><a href="http://www.materialpalette.com">Material Design Color Palette Generator - Material Palette</a></p>

    <p>一个可以快速搭配Material Design主题颜色的并且提供下载的在线网站.</p>
  </li>
  <li>
    <p><a href="https://github.com/t32k/material-design-color-palette-sketch-plugin">material-design-color-palette-sketch-plugin</a></p>

    <p>Sketch app plugin for displaying Google material design color palette.</p>
  </li>
</ol>

<hr />
<p>版权声明：欢迎自由转载-非商用-非衍生-保持署名 | <a href="http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh">Creative Commons BY-NC-ND 3.0</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android开发周报 Issue#11]]></title>
    <link href="http://www.inferjay.com/blog/2014/12/15/android-dev-weekly-issue-11/"/>
    <updated>2014-12-15T13:56:36+08:00</updated>
    <id>http://www.inferjay.com/blog/2014/12/15/android-dev-weekly-issue-11</id>
    <content type="html"><![CDATA[<h3 id="section">文章</h3>

<ol>
  <li>
    <p><a href="http://droidyue.com/blog/2014/11/29/why-onsharedpreferencechangelistener-was-not-called/">Google为何这样设计OnSharedPreferenceChangeListener</a></p>

    <p>之前使用OnSharedPreferenceChangeListener，遇到了点小问题，就是有些时候OnSharedPreferenceChangeListener没有被触发。最近花了点时间研究了一下，小做整理。本文将会介绍监听器不被触发的原因，解决方法，以及其中隐含的一些技术细节。</p>
  </li>
  <li>
    <p><a href="http://blog.isming.me/2014/12/12/import-library-to-android-studio/">导入开源库到基于Android Studio构建的项目中</a></p>

    <p>前两天，谷歌发布了Android Studio 1.0的正式版，也有更多的人开始迁移到Android Studio进行开发。然而，网上很多的开源库,控件等还是以前的基于Eclipse进行开发，很多人不知道怎么导入到自己的基于Android Studio项目中来，微博上也有人私信我，让我来写写，正好今天回来的比较早，就写写吧。主要介绍一下常见的一些导包的场景。</p>
  </li>
  <li>
    <p><a href="http://www.cnblogs.com/ct2011/p/4152323.html">Android批量打包提速 - 1分钟900个市场不是梦</a></p>

    <p>使用Ant或者Gradle来给程序进行多渠道批量打包，通常都是在manifest文件中写入一个meta标签：<code>&lt;meta-data android:name="CHANNEL" android:value="xxx" /&gt;</code> meta的key值固定，通过循环改变meta中的value值来实现市场渠道的写入。Ant批量打包实现相对麻烦，以前写的时候多亏了<a href="http://www.cnblogs.com/qianxudetianxia/archive/2012/07/04/2573687.html">谦虚的天下-《App自动化之使用Ant编译项目多渠道打包》</a> 。如果没有这篇帖子，真不知道当时Ant要折腾多少回才能写好。</p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/maosidiaoxian/article/details/41692535">上传Android或Java库到Maven central repository</a></p>

    <p>主要介绍利用Sonatype将jar或aar提交到Maven的中央仓库。是不是希望将自己的jar或是aar传到maven官方库中，在The Central Repository中可以被其他人搜索使用呢，是的话，往下看吧。</p>
  </li>
</ol>

<!--more-->

<ol>
  <li>
    <p><a href="http://greenrobot.me/devpost/android-custom-layout/">深入解析Android的自定义布局</a></p>

    <p>这篇文章是前Firefox Android工程师（现在跳槽去Facebook了） Lucas Rocha所写，文中对Android中常用的四种自定义布局方案进行了很好地分析，并结合这四种Android自定义布局方案所写的示例项目讲解了它们各自的优劣以及四种方案之间的比较。</p>
  </li>
  <li>
    <p><a href="http://greenrobot.me/devpost/java-faster-less-jvm-garbage/">Linkedin工程师是如何优化他们的Java代码的</a></p>

    <p>最近在刷各大公司的技术博客的时候，我在Linkedin的技术博客上面发现了一篇很不错博文。这篇博文介绍了Linkedin信息流中间层Feed Mixer，它为Linkedin的Web主页，大学主页，公司主页以及客户端等多个分发渠道提供支撑（如下图所示）。</p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/column/details/android5.html">跟着ym学习Android5.0</a></p>

    <p>跟着作者一步步学习Android 5.0开发。从创建模拟器开始，再到Material主题、Palette、AnimatedVectorDrawable、RecyclerView、CardView、Activity过渡动画、如何定义阴影等。</p>
  </li>
  <li>
    <p><a href="http://qichaochen.github.io/2014/12/08/108-Android-Toolbar-DrawerLayout-01/">[Material Design]使用Toolbar + DrawerLayout快速实现高大上菜单侧滑</a></p>

    <p>如果你有在关注一些遵循最新的Material Design设计规范的应用的话（如果没有，假设你有！），也许会发现有很多使用了看起来很舒服、很高大上的侧滑菜单动画效果。</p>
  </li>
  <li>
    <p><a href="http://www.dgtle.com/article-5885-1.html">安卓中的 Cydia — Xposed 框架插件专题</a></p>

    <p>大名鼎鼎的 Xposed，相信不少经常泡在各类安卓论坛的安卓粉们都听说过。在安卓进入 4.0 的时代后，不少“大神”也都会在自己做的 Rom 中添加这个 Xposed 软件。</p>
  </li>
</ol>

<h3 id="section-1">代码&amp;开源库</h3>

<ol>
  <li>
    <p><a href="https://github.com/chrisbatt/AndroidFastImageProcessing">AndroidFastImageProcessing</a></p>

    <p>A framework for speeding up image processing on android devices by taking advantage of shaders on the GPU.	</p>
  </li>
  <li>
    <p><a href="https://github.com/stephanenicolas/loglifecycle">loglifecycle</a></p>

    <p>Logs all lifecycle methods of annotated Activities, Fragments, Services, Views, etc.</p>
  </li>
  <li>
    <p><a href="https://github.com/Narfss/ParallaxEverywhere">ParallaxEverywhere</a></p>

    <p>Parallax everywhere is a library with alternative android widgets with parallax effects.</p>
  </li>
  <li>
    <p><a href="https://github.com/adnan-SM/TimelyTextView">TimelyTextView</a></p>

    <p>Animated TextView like Timely app.</p>
  </li>
  <li>
    <p><a href="https://github.com/Manabu-GT/ExpandableTextView">ExpandableTextView</a></p>

    <p>ExpandableTextView是一个可以使开发人员能够轻松地创建可扩展/折叠的TextView效果，就像Google Play里用于显示App描述的TextView一样.</p>
  </li>
  <li>
    <p><a href="https://github.com/googlesamples">Google Samples</a></p>

    <p>Google在Github上发布了大量Demo，针对不同的特性，也包含了最新的API 21 (Lollipop).</p>
  </li>
</ol>

<h3 id="section-2">工具</h3>

<ol>
  <li>
    <p><a href="http://tools.android.com/download/studio/canary/1-0rc4">Android Studio 1.0正式版发布啦</a></p>

    <p><strong>墙内下载地址：</strong><a href="http://www.androiddevtools.cn/#android-studio">http://www.androiddevtools.cn/#android-studio</a>	 	 </p>
  </li>
  <li>
    <p><a href="https://github.com/airk000/gologcat">gologcat</a></p>

    <p>一个由golang编写，可以在终端中彩色输出logcat的实用工具，支持自定义颜色。</p>
  </li>
  <li>
    <p><a href="http://inloop.github.io/shadow4android/">Android 9-patch shadow generator</a></p>

    <p>Android点9图片阴影生成器。</p>
  </li>
</ol>

<h3 id="section-3">视频</h3>

<ol>
  <li>
    <p><a href="http://v.youku.com/v_show/id_XODQ1MjI2MDQ0.html?f=23088492">精通Android触摸系统(中英字幕)</a></p>

    <p><a href="http://www.weibo.com/oceancx?from=feed&amp;loc=nickname">@Ocean-藏心</a>同学历经3周的翻译,将1小时18分钟的视频,终于完成了. 简介:<a href="http://t.cn/RzxZs6E">的姊妹篇</a>，详细讲解了Android自定义事件处理的方方面面。配合<a href="http://blog.csdn.net/guolin_blog/">guolin</a> 大神CSDN的博客和上一个视频，让你对开发Android 自定义控件游刃有余。此外还有<a href="http://">@Trinea</a>大神的<a href="http://www.trinea.cn/android/touch-event-delivery-mechanism/">Android Touch事件传递机制</a>简略解读。</p>

    <p>视频中用到的PPT(PDF版)下载地址：<a href="http://wugengxin.cn/download/pdf/android/PRE_andevcon_mastering-the-android-touch-system.pdf">http://wugengxin.cn/download/pdf/android/PRE_andevcon_mastering-the-android-touch-system.pdf</a></p>
  </li>
  <li>
    <p><a href="http://www.jikexueyuan.com/course/396.html">Android Studio 1.0 (稳定版)的使用</a></p>

    <p>经过 2 年时间的研发，Google 终于在近日正式发布了面向 Android 开发者的集成开发环境 Android Studio 1.0（稳定版）。Android Studio 是 Google 开发的一款面向 Android 开发者的 IDE，支持 Windows、Mac、Linux 等操作系统，基于流行的 Java 语言集成开发环境 IntelliJ 搭建而成。该 IDE 在 2013 年 5 月的 Google I/O 开发者大会上首次露面，此间推出了若干个测试版，12 月 8 日发布的版本是 Android Studio 的首个稳定版。Google 称，相对于其他开发工具，Android Studio 更快、更具生产力，Android Studio 1.0 推出后，Google 将逐步放弃对原来主要的 Android 开发工具 Eclipse ADT 的支持。</p>
  </li>
</ol>

<h3 id="section-4">设计</h3>

<h4 id="section-5">文章</h4>

<ol>
  <li>
    <p><a href="http://www.jianshu.com/p/a3b2422b5465?utm_campaign=hugo&amp;utm_medium=reader_share&amp;utm_content=note&amp;utm_source=weibo">关于Material Design，做到这四点便足以让用户惊喜</a></p>

    <p>Material Design 主张将现实世界中的交互体验，应用到界面设计中来，以求用户的经验能够迁移，并更快习惯新系统。Teambition 已经根据 Material Design 重新设计了旗下所有的 Android 客户端产品。在实践过程中，设计和产品团队总结了一些值得分析的要点，与大家分享。</p>
  </li>
  <li>
    <p><a href="http://www.cocoachina.com/special/design/">给程序员的设计学习指南</a></p>

    <p>这是给 移动开发者 准备的设计学习指南。在这里你将接触到三大平台的设计规范、基础设计理论，以及设计实践，还有一些学习设计的资源。程序员为什么需要学习设计？理解设计能让程序员更上一层楼，能让TA与设计师的交流协作更高效愉快，甚至拥有独立开发面向大众的APP的能力。 <a href="http://www.cocoachina.com/programmer/20141113/10214.html">《程序员需要学习设计的5大理由》</a>。</p>
  </li>
  <li>
    <p><a href="http://zhuanlan.zhihu.com/zhezhexiong/19565895">[无线手册-4] dp、sp、px傻傻分不清楚[完整]</a></p>

    <p>做移动设计的同学，不管是原生app或者web app，应该对字体字号都是很头痛的问题。根本原因是，我们用唯一分辨率的电脑，设计各个不同尺寸大小分辨率的设备，那简直要疯掉了。 <a href="http://zhuanlan.zhihu.com/zhezhexiong/1956455">[无线手册-2]不得不说的icon-font</a> 	<a href="http://zhuanlan.zhihu.com/zhezhexiong/1956）4893">[无线手册-3] 移动App上的动画们</a></p>
  </li>
</ol>

<h4 id="section-6">资源</h4>

<ol>
  <li>
    <p><a href="http://www.androidicons.com/">250 free icons in 5 sizes and 14 colors</a></p>

    <p>包含5种尺寸和14种颜色的250个免费icons。</p>
  </li>
</ol>

<hr />
<p>版权声明：欢迎自由转载-非商用-非衍生-保持署名 | <a href="http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh">Creative Commons BY-NC-ND 3.0</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Androoid Stidio 1.0正式版和SDK Tools R24下载地址]]></title>
    <link href="http://www.inferjay.com/blog/2014/12/09/androoid-stidio-1-0-and-sdk-tools-r24-download-urli/"/>
    <updated>2014-12-09T16:26:58+08:00</updated>
    <id>http://www.inferjay.com/blog/2014/12/09/androoid-stidio-1-0-and-sdk-tools-r24-download-urli</id>
    <content type="html"><![CDATA[<blockquote>
  <p>提示：所有链接复制到迅雷里就可以下载<strong>无需翻墙</strong></p>
</blockquote>

<h2 id="sdk-tools">SDK Tools下载地址</h2>

<h4 id="windows">Windows</h4>

<p>安装版(官方推荐)：<a href="http://dl.google.com/android/installer_r24-windows.exe">http://dl.google.com/android/installer_r24-windows.exe</a></p>

<p>绿色版：<a href="http://dl.google.com/android/android-sdk_r24-windows.zip">http://dl.google.com/android/android-sdk_r24-windows.zip</a></p>

<h4 id="mac-os-x">Mac OS X</h4>
<p><a href="http://dl.google.com/android/android-sdk_r24-macosx.zip">http://dl.google.com/android/android-sdk_r24-macosx.zip</a></p>

<h4 id="linux">Linux</h4>
<p><a href="http://dl.google.com/android/android-sdk_r24-linux.tgz">http://dl.google.com/android/android-sdk_r24-linux.tgz</a></p>

<h2 id="android-studio">Android Studio下载地址</h2>

<!-- More -->

<h4 id="windows-1">Windows</h4>

<p>官方推荐下载安装版(包含SDT Tools)：<a href="http://dl.google.com/dl/android/studio/install/1.0.0/android-studio-bundle-135.1629389.exe">http://dl.google.com/dl/android/studio/install/1.0.0/android-studio-bundle-135.1629389.exe</a></p>

<p>安装版(不包含SDT Tools)：<a href="http://dl.google.com/dl/android/studio/install/1.0.0/android-studio-ide-135.1629389.exe">http://dl.google.com/dl/android/studio/install/1.0.0/android-studio-ide-135.1629389.exe</a></p>

<p>绿色版： <a href="http://dl.google.com/dl/android/studio/ide-zips/1.0.0/android-studio-ide-135.1629389-windows.zip">http://dl.google.com/dl/android/studio/ide-zips/1.0.0/android-studio-ide-135.1629389-windows.zip</a></p>

<h4 id="mac-os-x-1">Mac OS X</h4>
<p><a href="http://dl.google.com/dl/android/studio/install/1.0.0/android-studio-ide-135.1629389.dmg">http://dl.google.com/dl/android/studio/install/1.0.0/android-studio-ide-135.1629389.dmg</a></p>

<h4 id="linux-1">Linux</h4>
<p><a href="http://dl.google.com/dl/android/studio/ide-zips/1.0.0/android-studio-ide-135.1629389-linux.zip">http://dl.google.com/dl/android/studio/ide-zips/1.0.0/android-studio-ide-135.1629389-linux.zip</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android开发周报 Issue#10]]></title>
    <link href="http://www.inferjay.com/blog/2014/12/08/android-dev-weekly-issue-10/"/>
    <updated>2014-12-08T11:10:12+08:00</updated>
    <id>http://www.inferjay.com/blog/2014/12/08/android-dev-weekly-issue-10</id>
    <content type="html"><![CDATA[<h3 id="section">文章</h3>

<ol>
  <li>
    <p><a href="http://blog.csdn.net/maosidiaoxian/article/details/41692535">Android Apk 拆分机制</a></p>

    <p>拆分机制比起使用 flavors，能让应用程序更有效地构建一些形式的多个apk。多 apk 只支持以下类型: 1.
屏幕密度 2.ABI.使用新的拆分机制，构建同一个应用程序的hdpi版本和mdpi版本，能够共享很多的任务 （如 javac，dx，proguard）。此外，它会被认为是一个单一的variant，并且同一个测试程序将会被用来测试每​​个多APK。</p>
  </li>
  <li>
    <p><a href="http://relex.me/using-manifestplaceholders/">使用manifestPlaceholders</a></p>

    <p>在项目中我需要打包不同渠道的APK，需要在AndroidManifest中定义渠道名称，以便在java中调用。以前ant或gradle打包时动态改变渠道的思路是：正则AndroidManifest的特定字符然后替换.</p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/xushuaic/article/details/40424379">Property Anim详解</a></p>

    <p>本篇文章将对PropertyAnimation进行全面深入的探讨，本篇文章可以分为两大块，从第六部分可以作为分界点。前五部分着重讲解了PropertyAnim的动画值的计算过程，ValueAnimator与ObjectAnimator以及TimeInterpolation与TypeEvaluator之间的介绍和比较，这几点是比较重要的，从第六部分开始是通过源码的角度分析了整个动画计算以及内部的处理细节，以及引出了对JakeWharton大神的NineOldAndroids 开源库的分析，如果你觉得太多，可以分开来看，有理解不准确的地方，欢迎大家指正。</p>
  </li>
</ol>

<!--more-->

<ol>
  <li>
    <p><a href="http://stormzhang.com/posts.html#AndroidStudio">Android Studio系列教程</a></p>

    <p>相信大家对Android Studio已经不陌生了，Android Studio是Google于2013 I/O大会针对Android开发推出的新的开发工具，目前很多开源项目都已经在采用，Google的更新速度也很快，明显能感觉到这是Android开发的未来，那么我们还有什么理由不去拥抱未来呢？虽然推出了很久，但是国内貌似普及的程度并不高，鉴于很多朋友求studio的详细教程，那么今天我就手把手教大家下载、安装、使用，Studio之路从这里开始。</p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/luoshengyang/article/details/41581063">Dalvik虚拟机Java堆创建过程分析</a></p>

    <p>使用C/C++开发应用程序最令头痛的问题就是内存管理。慎不留神，要么内存泄漏，要么内存破坏。虚拟机要解决的问题之一就是帮助应用程序自动分配和释放内存。为了达到这个目的，虚拟机在启动的时候向操作系统申请一大块内存当作对象堆。之后当应用程序创建对象时，虚拟机就会在堆上分配合适的内存块。而当对象不再使用时，虚拟机就会将它占用的内存块归还给堆。Dalvik虚拟机也不例外，本文就分析它的Java堆创建过程。</p>
  </li>
</ol>

<h3 id="section-1">代码&amp;开源库</h3>

<ol>
  <li>
    <p><a href="https://github.com/googlesamples">Google Samples</a></p>

    <p>Google在Github上发布了大量Demo，针对不同的特性，也包含了最新的API 21 (Lollipop),学习的好资料/</p>
  </li>
  <li>
    <p><a href="https://github.com/Rogero0o/MatchView">MatchView</a></p>

    <p>TextView中的文字由类似火柴棍分散组合的效果。</p>

    <p><img src="https://camo.githubusercontent.com/a71e9d26a7f90ea70270b3681d99785a29f83be5/687474703a2f2f7777312e73696e61696d672e636e2f6d773639302f6136393561636465677731656d79746e6b347334356732306567306d6b3439302e676966" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/Musenkishi/wally">Wally</a></p>

    <p>Wally is a fast and efficient open source wallpaper application for Android.</p>
  </li>
  <li>
    <p><a href="https://github.com/kyze8439690/FolderLayout">FolderLayout</a></p>

    <p>A layout like a stack of files and you can choose one to open. Just imitate the UI of Tencent’s QQ手机管家.</p>
  </li>
  <li>
    <p><a href="https://github.com/Malinskiy/android-material-icons">android-material-icons</a></p>

    <p>一个让你方便的在Android开发中使用Google发布出来的Material Design风格图标的库。	</p>
  </li>
  <li>
    <p><a href="https://github.com/quiqueqs/BabushkaText">BabushkaText</a></p>

    <p>A simpler way to style your TextViews</p>

    <p><img src="https://github.com/quiqueqs/BabushkaText/raw/master/images/example.png" alt="image" /></p>
  </li>
</ol>

<h3 id="section-2">工具</h3>

<ol>
  <li>
    <p><a href="http://www.chinagdg.com/thread-6053-1-1.html">Google 技术资源离线版</a></p>

    <p>Google 发布了一套4张 DVD，将 Google Developers 上的在线技术文档和视频打包到离线文件中。内容很丰富，如 Android 官方文档和SDK、Google Cloud 文档和视频、Web Fundamentals 文档、I/O 大会和 Dev Bytes 视频、Google Udacity 课程视频 等等。</p>
  </li>
  <li>
    <p><a href="http://tools.android.com/download/studio/canary/1-0rc4">Android Studio 1.0 Release Candidate 4</a></p>

    <p><strong>墙内下载地址：</strong><a href="http://www.androiddevtools.cn/#android-studio">http://www.androiddevtools.cn/#android-studio</a></p>
  </li>
</ol>

<h3 id="section-3">设计</h3>

<h4 id="section-4">文章</h4>

<ol>
  <li>
    <p><a href="http://www.ui.cn/project.php?id=33849">中国移动应用设计趋势解读</a></p>

    <p>铺天盖地的二维码、丧心病狂的小红点，还有繁花似锦的安卓ROMs…</p>

    <p>——老外对中国式App设计趋势的分析  by  Dan Grover (微信产品经理) </p>
  </li>
</ol>

<hr />
<p>版权声明：欢迎自由转载-非商用-非衍生-保持署名 | <a href="http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh">Creative Commons BY-NC-ND 3.0</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android开发周报 Issue#9]]></title>
    <link href="http://www.inferjay.com/blog/2014/12/01/android-dev-weekly-issue-9/"/>
    <updated>2014-12-01T12:42:08+08:00</updated>
    <id>http://www.inferjay.com/blog/2014/12/01/android-dev-weekly-issue-9</id>
    <content type="html"><![CDATA[<h3 id="section">文章</h3>

<ol>
  <li>
    <p><a href="http://blog.csdn.net/luoshengyang/article/details/41581063">Dalvik虚拟机Java堆创建过程分析</a></p>

    <p>使用C/C++开发应用程序最令头痛的问题就是内存管理。慎不留神，要么内存泄漏，要么内存破坏。虚拟机要解决的问题之一就是帮助应用程序自动分配和释放内存。为了达到这个目的，虚拟机在启动的时候向操作系统申请一大块内存当作对象堆。之后当应用程序创建对象时，虚拟机就会在堆上分配合适的内存块。而当对象不再使用时，虚拟机就会将它占用的内存块归还给堆。Dalvik虚拟机也不例外，本文就分析它的Java堆创建过程。</p>
  </li>
  <li>
    <p><a href="http://www.kuqin.com/shuoit/20140826/341828.html?url_type=39&amp;object_type=crawler&amp;pos=1">为什么Android的图片质量会比iPhone的差？</a></p>

    <p>经常看到有人问：“安卓版微信发出去的图片怎么那么渣！比iPhone的差远了！”。不只是微信，很多应用安卓版的图片质量就是要比iPhone版逊色很多，这到底是怎么回事？</p>
  </li>
  <li>
    <p><a href="http://qichaochen.github.io/2014/11/21/107-Facebook-Rebound-Demo/">[Material Design]使用Fackbook Rebound快速实现弹簧动画效果</a></p>

    <p>Rebound是Facebook推出的一款Android的物理和动画库，于2013年10月在Mobile@Scale大会上正式发布，旨在解决笨重、缓慢的传统移动网络界面。Rebound不是一款通用物理库，但其弹簧模型在应用程序中引入了现实世界的物理，易于集成，创建的动画能够让人感觉到非常自然，并且可以和Material Design的设计原则呼应，可用于滚动条、切换开关、呼叫等场景下。</p>
  </li>
  <li>
    <p><a href="http://stormzhang.com/devtools/2014/11/07/use-curl-debug/">使用curl来调试你的应用</a></p>

    <p>我们在客户端开发过程中总免不了和后端进行api对接，有时候需要对返回的数据格式进行调试，有时候每次运行客户端来发送请求，这个未免效率太低，这里就来介绍一个好用的工具–curl。</p>
  </li>
</ol>

<!--more-->

<ol>
  <li>
    <p><a href="http://www.codeceo.com/article/android-taskaffinity.html">Android taskAffinity属性使用详解</a></p>

    <p>Activity的归属，也就是Activity应该在哪个Task中，Activity与Task的吸附关系。我们知道，一般情况下在同一个应用中，启 动的Activity都在同一个Task中，它们在该Task中度过自己的生命周期，这些Activity是从一而终的好榜样。</p>
  </li>
  <li>
    <p><a href="http://www.codeceo.com/article/android-memory-manage.html">每个Android开发者必须知道的内存管理知识</a></p>

    <p>相信一步步走过来的Android从业者，每个人都会遇到OOM的情况。如何避免和防范OOM的出现，对于每一个程序员来说确实是一门必不可少的能力。今天我们就谈谈在Android平台下内存的管理之道，开始今天的主题之前，先再次回顾两个概念。</p>
  </li>
</ol>

<h3 id="section-1">代码&amp;开源库</h3>

<ol>
  <li>
    <p><a href="https://github.com/liaohuqiu/android-Ultra-Pull-To-Refresh">android-Ultra-Pull-To-Refresh</a></p>

    <p>很炫的下拉刷新效果库。</p>

    <p><img src="https://camo.githubusercontent.com/588a2ef2cdcfb6c71e88437df486226dd15605b3/687474703a2f2f737261696e2d6769746875622e71696e6975646e2e636f6d2f756c7472612d7074722f73746f72652d686f7573652d737472696e672d61727261792e676966" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/AnderWeb/discreteSeekBar">discreteSeekBar</a></p>

    <p><img src="https://camo.githubusercontent.com/e717e2597779d1ddc980ace6f3943f62483d8a8c/68747470733a2f2f6c68332e676f6f676c6575736572636f6e74656e742e636f6d2f2d376e62565058785568596b2f56472d724f3634704d57492f414141414141414148734d2f614d52676c7432567a726b2f773633392d683438302f616e696d6174696f6e2e676966" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/frogermcs/InstaMaterial">InstaMaterial</a></p>

    <p>Material Design风格的Instagram的客户端。</p>
  </li>
  <li>
    <p><a href="https://github.com/pnikosis/materialish-progress">materialish-progress</a></p>

    <p>Material Design风格的圆形进度条，最低支持到2.3的系统。</p>

    <p><img src="https://github.com/pnikosis/materialish-progress/raw/master/spinningwheel.gif" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/inaka/galgo">galgo</a></p>

    <p>Android日志工具库，可以把log显示在屏幕上。</p>

    <p><img src="https://camo.githubusercontent.com/1e2d3b204a0898b697876817cc19ab4a2fef5de2/687474703a2f2f6936312e74696e797069632e636f6d2f327177336279302e676966" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/cookpad/puree-android">puree-android</a></p>

    <p>一个Log日志收集框架。</p>
  </li>
  <li>
    <p><a href="https://github.com/gdpancheng/LoonAndroid">LoonAndroid</a></p>

    <p>一个ioc（依赖注入）框架，但是整个框架式不同于androidannotations，Roboguice等ioc框架，这是一个类似spring的实现方式。在整应用的生命周期中找到切入点，然后对activity的生命周期进行拦截，然后插入自己的功能。</p>
  </li>
</ol>

<h3 id="section-2">工具</h3>

<ol>
  <li>
    <p><a href="http://tools.android.com/download/studio/canary/1-0rc2">Android Studio 1.0 Release Candidate 2</a></p>

    <p>本次Release没有添加什么新的特性，只是修复了一些Bug，如果你之前已经升级到了RC1建议更新到RC2版。另外本次Release还针对Windows用户推出了包含SDK的安装包。</p>

    <p><strong>墙内下载地址：</strong><a href="http://www.androiddevtools.cn/#android-studio">http://www.androiddevtools.cn/#android-studio</a></p>
  </li>
</ol>

<h3 id="section-3">设计</h3>

<h4 id="section-4">文章</h4>

<ol>
  <li>
    <p><a href="http://www.oschina.net/news/57379/what-is-good-ui-design#0-tsina-1-76379-397232819ff9a47a7b7e80a40613cfe1">什么才是优秀的用户界面设计</a></p>

    <p>本文分享一些 Good UI 在一些项目中获取的设计以及运营策略等方面的经验。Good UI 是一家研究用户体验的设计机构。我们知道成功的页面设计不仅有很高的转化率更便于用户使用，既能满足商业目标更能为用户带来良好的体验。</p>
  </li>
  <li>
    <p><a href="https://medium.com/sebs-top-tips/material-navigation-drawer-sizing-558aea1ad266">Material Navigation Drawer sizing</a></p>

    <p>本文分析了Material的抽屉导航的大小到底多少才最符合设计规范和美观。</p>
  </li>
</ol>

<h4 id="section-5">素材</h4>

<ol>
  <li>
    <p><a href="https://dribbble.com/shots/1683873-Android-L-GUI-KIT">Android L GUI KIT</a></p>

    <p>Android L GUI KIT。</p>
  </li>
</ol>

<h4 id="section-6">工具</h4>

<ol>
  <li>
    <p><a href="http://oven.chrometaphore.com">OVEN</a></p>

    <p>A BETTER ASSETS WORKFLOW For Photoshop CC / 2014。</p>

    <p><img src="http://oven.chrometaphore.com/assets/oven_panel_screenshot@2x.png" alt="image" /></p>
  </li>
</ol>

<hr />
<p>版权声明：欢迎自由转载-非商用-非衍生-保持署名 | <a href="http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh">Creative Commons BY-NC-ND 3.0</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android开发周报 Issue#8]]></title>
    <link href="http://www.inferjay.com/blog/2014/11/24/android-dev-weekly-issue-8/"/>
    <updated>2014-11-24T10:56:01+08:00</updated>
    <id>http://www.inferjay.com/blog/2014/11/24/android-dev-weekly-issue-8</id>
    <content type="html"><![CDATA[<h3 id="section">文章</h3>

<ol>
  <li>
    <p><a href="http://blog.isming.me/2014/11/21/use-gradle-new/">使用gradle构建android项目（续）</a></p>

    <p>在几个月之前，我已经写过一篇使用gradle构建android项目的博客了<a href="http://blog.isming.me/2014/05/20/android4gradle/">http://blog.isming.me/2014/05/20/android4gradle/</a>,那篇文章已经介绍了如何使用gradle进行项目构建，以及为谷歌会推荐使用gradle。当时android的gradle插件是0.11.0,现在插件的版本已经是0.14.3了，对于一些老的方法和api，有一些已经被移除，无法使用。因此有必要再写一篇博客介绍这些被移除的部分和替代方案。同时由于个人学识原因，当时没有介绍的一些技巧，其他功能，也会在本文中进行介绍。</p>
  </li>
  <li>
    <p><a href="http://www.csdn.net/article/2014-11-21/2822753-material-design-libs/1">直接拿来用！十大Material Design开源项目</a></p>

    <p>本文详细介绍了十个Material Design开源项目，从示例、FAB、菜单、动画、Ripple到Dialog，看被誉为“Google第一次在设计语言和规范上超越了Apple”的Material Design是如何逐渐成为App的一种全新设计标准。另外推荐大家去 Github 上 Star 或者 Fork <a href="https://github.com/lightSky/MaterialDesignCenter"><code>MaterialDesignCenter</code></a>这个项目，该收集整理了</p>
  </li>
  <li>
    <p><a href="http://www.cnblogs.com/ct2011/p/4100132.html">放弃WebView，使用Crosswalk做富文本编辑器</a></p>

    <p>Android WebView做普通浏览还好，做富文本编辑器（<code>document.body.contentEditable=true;</code>），常常会遇到各种奇葩的bug，而且很难修复。尽管Google在版本迭代中不断修复bug，但依旧没法用它来做富文本编辑。</p>
  </li>
  <li>
    <p><a href="http://blog.isming.me/2014/11/17/material-design-for-pre-lollipop-android/">在低版本android系统上实现Material设计应用</a></p>

    <p>​Material Design真的很好看，动画效果真的很实用。前面也写了一些文章介绍如何编写Material风格的程序，但是很多都是一些新的api，低版本上面没有这些api，我们没办法使用。但是不用气馁，google官方，以及一些大牛，给我们提供了一些程序，让我们在低版本上面可以实现Material风格的程序，这里就给大家介绍一下。</p>
  </li>
</ol>

<!--more-->

<ol>
  <li>
    <p><a href="http://qichaochen.github.io/2014/11/17/106-Android-RoundedBitmapDrawable/">使用RoundedBitmapDrawable快速生成圆角和圆形图片</a></p>

    <p>在I/O大会之后，Google发布了新的Support lib，其中有一个是RoundedBitmapDrawable类，通过这个类可以很容易实现圆角和圆形图片。</p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/androidsecurity/article/details/41207959">“黑暗潜伏者” – 手机病毒新型攻击方式分析</a></p>

    <p>近期百度安全实验室发现一款“黑暗潜伏者”新型手机病毒。该病毒附着在众多壁纸和游戏类应用中。截至目前，已经发现感染该病毒的应用超过1万多款，感染用户超过3000万。</p>
  </li>
  <li>
    <p><a href="http://blog.jobbole.com/78995/">正确使用Android性能分析工具——TraceView</a></p>

    <p>TraceView是一个非常强大的性能分析工具，因为Android 官网对这个工具的使用介绍文档很少，而且一些中文博客中写的也都是抄来抄去，没有讲到底怎么使用。</p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/xyz_lmn/article/details/41052977#0-tsina-1-81289-397232819ff9a47a7b7e80a40613cfe1">移动web开发框架研究</a></p>

    <p>纯粹的总结一下移动web开发框架，移动web开发框架有jQuery Mobile 、Sencha Touch等等,他们都来源于web开发，是成熟的框架，jQuery Mobile出自于jQuery家族，Sencha Touch来自于ExtJS。jQuery Mobile 和Sencha Touch都是比较成熟老牌的框架，项目中也有应用。国内也有公司，像BAT巨头也在探索和实现了适合自己的移动web框架。</p>
  </li>
</ol>

<h3 id="section-1">代码&amp;开源库</h3>

<ol>
  <li>
    <p><a href="https://github.com/ekx/GitLabAndroid">GitLabAndroid</a></p>

    <p>GitLab的非官方开源客户端.</p>

    <p><img src="https://github.com/ekx/GitLabAndroid/raw/master/screenshots.png" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/snowdream/awesome-android">awesome-android</a></p>

    <p>收集整理了Gihub上Android相关的各种开源控件。</p>
  </li>
  <li>
    <p><a href="https://github.com/vince-styling/Netroid">Netroid</a></p>

    <p>Netroid是一个基于Volley实现的Android Http库。提供执行网络请求、缓存返回结果、批量图片加载、大文件断点下载的常见Http交互功能。致力于避免每个项目重复开发基础Http功能，实现显著地缩短开发周期的愿景。</p>
  </li>
  <li>
    <p><a href="https://github.com/kyze8439690/RevealLayout">RevealLayout</a></p>

    <p>附带一些Reveal动画效果的Layout，支持Android4.0以上系统。</p>
  </li>
  <li>
    <p><a href="https://github.com/03uk/CircularReveal">CircularReveal</a></p>

    <p>可以让你在2.3+系统使用Android 5.0的Reveal动画效果的库。</p>
  </li>
  <li>
    <p><a href="https://github.com/pavlospt/RoundedLetterView">RoundedLetterView</a></p>

    <p>仿Android 5.0联系人App的列表效果。</p>
  </li>
  <li>
    <p><a href="http://git.oschina.net/shelwee/UpdateHelper">UpdateHelper</a></p>

    <p>UpdateHelper是一个为了简化Android App的迭代升级开发的Android Library。</p>
  </li>
</ol>

<h3 id="section-2">新闻</h3>

<ol>
  <li>
    <p><a href="http://www.csdn.net/article/2014-11-20/2822732-google-play-android-dev-china">不任性了！Google Play宣布开通国内开发者通道</a></p>

    <p>Google今天宣布，中国的开发者现在可以通过Google Play将付费应用程序向130个国家进行发布。开发者可以利用Google Play发布免费及付费应用程序，并支持应用程序内购买和订阅，收入将汇至开发者在中国本地银行账户。</p>
  </li>
  <li>
    <p><a href="http://linux.cn/article-4249-1.html">安卓编年史(1)</a></p>

    <p>让我们跟着安卓从0.5版本到4.4的无尽迭代来看看它的发展历史。安卓已经以不止一种形式陪伴了我们六年以上。在这段时间内，我们已经看到了不同于任何已有开发周期的，绝对惊人的变化速度。当Google卷入智能手机的战场中时，它拿出了它的快速迭代，Web风格的更新周期，把它们应用到了开发这个操作系统之中，而结果就是突击式的持续改进。</p>
  </li>
</ol>

<h3 id="section-3">视频</h3>

<ol>
  <li>
    <p><a href="http://www.youku.com/playlist_show/id_23094862.html">Google Play 中国开发者中文入门视频</a></p>

    <p>Google Developers 最新发布的 3个 Google Play 中国开发者中文入门视频。教你怎么注册成为Google play开发者。</p>
  </li>
  <li>
    <p><a href="http://v.youku.com/v_show/id_XODMwMjg5Nzg4.html">Tutorial Enhancing Android UI with Custom Views</a></p>

    <p>Android自定义View视频教程，中文字幕，示例源码地址:http://pan.baidu.com/s/1pJp0CIn</p>
  </li>
  <li>
    <p><a href="http://www.youku.com/playlist_show/id_23078962.html">Droidcon London 2014的视频</a></p>

    <p>包含《What’s New in Android》、《Material design &amp; implementation》和《Deep Dive Into the Gradle》这个3个视频，都是来自官方工程师的干货。</p>
  </li>
  <li>
    <p><a href="http://www.infoq.com/cn/presentations/expose-mobile-application-performance">移动应用性能揭秘</a></p>

    <p>目前大部分移动应用都是需要与服务器进行交互的，哪么影响这些应用程序性能的主要因素有哪些？如网络请求、IO操作、多线程等都会对性能产生影响，本议题将分享基调网络在移动应用性能监控中遇到的与移动应用性能提升相关的代码问题，希望能够为程序员开发高性能的应用提供帮助。</p>
  </li>
</ol>

<h3 id="section-4">工具</h3>

<ol>
  <li>
    <p><a href="https://developer.magnet.com">rest2mobile</a></p>

    <p>一个可以将REST services生成Objective-C、Javascript和Java代码的开源工具，并且提供了支持Xcode、Android Studio &amp; IntelliJ IDEA的生成代码的插件以及可以生成iOS，JS和Android跨平台代码的命令行工具。</p>

    <p><img src="http://ww2.sinaimg.cn/bmiddle/8a41f469jw1emk7cqynx7j21cw1660xx.jpg" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://chrome.google.com/webstore/detail/octotree/bkhaagjahfmjljalopjnoealnfndnagc">树形展示 Github 项目代码的Chrome插件</a> （@程序员的那些事）</p>

    <p>国外程序员 Buu Nguyen 做的一个 Chrome 插件，安装之后，浏览托管在Github上的项目，可看到左侧的树形结构，更方便查看代码（有点 IDE 的感觉，用着好来点个赞吧）。</p>

    <p><img src="http://ww4.sinaimg.cn/bmiddle/7cc829d3jw1egep4g1ljcj20h10ae3zy.jpg" alt="image" /></p>
  </li>
  <li>
    <p><a href="http://jgilfelt.github.io/AndroidAssetStudio/icons-launcher.html#foreground.space.trim=1&amp;foreground.space.pad=0&amp;foreColor=E8EAF6%2C0&amp;crop=0&amp;backgroundShape=square&amp;backColor=3F51B5%2C100&amp;effects=none&amp;elevate=0">Android Launcher图标在线生成工具</a></p>

    <p>一个帮助你快速生成Android Launcher图标的在线生成工具，此工具是由Google 的 <a href="https://github.com/romannurik"><code>Roman Nurik</code></a>大神开发的 <a href="https://github.com/romannurik/AndroidAssetStudio"><code>AndroidAssetStudio</code></a> 系列Android资源自动生成工具（包含：）中的其中一个，支持从指定图片、文字和内置的icon生成Android Launcher图标，并且可以设置图标的前景和背景色，缩放类型、图标形状等。</p>

    <p><img src="http://ww4.sinaimg.cn/bmiddle/005GSHYzjw1emit4rrvf7j318g158tds.jpg" alt="image" /></p>
  </li>
  <li>
    <p><a href="http://astralapp.com">Astral</a>（@WillYan）</p>

    <p>可以把你Github上加星的项目进行标签管理，用Github账号授权登陆即可，强迫症患者的福音啊😄。</p>

    <p><img src="http://ww2.sinaimg.cn/bmiddle/5fb87788tw1emils89ritj20x50g6tb2.jpg" alt="image" /></p>
  </li>
  <li>
    <p><a href="http://tools.android.com/download/studio/canary/1-0rc1">Android Studio 1.0 Release Candidate 1</a>	
 这次发布的是Android Studio 1.0候选版，那么距离发布Android Studio 1.0 正式版已经不远喽😄。此次更新主要修复了一些Bug，更换了新的图标和启动界面以及包含了Android Gradle插件所需要的所有依赖，当你新建一个项目的时候就不需要联网了。
 墙内下载地址：<a href="http://www.androiddevtools.cn/#android-studio">http://www.androiddevtools.cn/#android-studio</a></p>
  </li>
  <li>
    <p><a href="https://tinyjpg.com">TinyJPG</a></p>

    <p>一个支持jpg和png格式的图片压缩工具，只压图片的大小而图片的质量不会损失。</p>

    <p><img src="http://ww1.sinaimg.cn/bmiddle/8a41f469jw1emhtewxnysj21kw0imagj.jpg" alt="image" /></p>
  </li>
  <li>
    <p><a href="http://www.appiconsizes.com">IOS and Android App Icon size generator</a></p>

    <p>一键生成iPhone, Android, IOS, Facebook, web touch icons, Blackberry, Windows Phone, Bada and WebOS 等系统App图标的在线工具.</p>
  </li>
  <li>
    <p><a href="http://google.github.io/fplutil/">fplutil</a></p>

    <p>一套可以用于开发Android和其他跨平台应用的库和工具。</p>
  </li>
</ol>

<hr />
<p>版权声明：欢迎自由转载-非商用-非衍生-保持署名 | <a href="http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh">Creative Commons BY-NC-ND 3.0</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android开发周报 Issue#7]]></title>
    <link href="http://www.inferjay.com/blog/2014/11/17/android-dev-weekly-issue-7/"/>
    <updated>2014-11-17T16:31:09+08:00</updated>
    <id>http://www.inferjay.com/blog/2014/11/17/android-dev-weekly-issue-7</id>
    <content type="html"><![CDATA[<h3 id="section">新闻</h3>

<ol>
  <li>
    <p><a href="http://www.csdn.net/article/2014-11-14/2822647-12-great-lollipop-apis/1">盘点最受开发者喜爱的Android 5.0 Lollipop API</a></p>

    <p>作为Android系统的一次重大升级，Android 5.0 Lollipop突出采用全新的Material Design设计语言，不但在视觉和操作上更胜一筹，还包含扩展UI工具包供开发者使用，为应用添加3D实时阴影，可缩放矢量“drawbles”以及流畅的动画效果。本文着重介绍了其中值得开发者深爱的12款API，赶紧一睹为快吧！</p>
  </li>
  <li>
    <p><a href="http://news.cnblogs.com/n/508431/">.NET开源了，VS开始支持Android和iOS编程并自带Android模拟器</a></p>

    <p>北京时间今天凌晨的 Connect (); 大会上，多少程序员的假想成为现实。.NET 开源，集成 Clang 和 LLVM 并且自带 Android 模拟器，这意味着 Visual Studio 这个当下最好没有之一的 IDE 正式支持编写 Android 和 iOS 程序。</p>
  </li>
  <li>
    <p><a href="http://digi.it.sohu.com/20141113/n405991228.shtml">Android 5.0正式开启：Nexus系列最早更新</a>	
 从谷歌给出的公告来看，今天就将会有用户收到Android 5.0的更新提示，而首批设备包含了Nexus 4、Nexus 5、Nexus 7以及Nexus 10。值得一提的是，今天早些时候，摩托罗拉也开始向Moto G的用户提供5.0系统的升级，随后到来的是Moto X，很快LG的G3也将得到系统的升级。</p>
  </li>
</ol>

<h3 id="section-1">文章</h3>

<ol>
  <li>
    <p><a href="http://blog.csdn.net/xiaanming/article/details/41084843#0-tsina-1-26268-397232819ff9a47a7b7e80a40613cfe1">Android 那些你所不知道的Bitmap对象详解</a></p>

    <p>我们知道Android系统分配给每个应用程序的内存是有限的，Bitmap作为消耗内存大户，我们对Bitmap的管理稍有不当就可能引发OutOfMemoryError，而Bitmap对象在不同的Android版本中存在一些差异，今天就给大家介绍下这些差异，并提供一些在使用Bitmap的需要注意的地方。</p>
  </li>
  <li>
    <p><a href="http://greenrobot.me/category/devpost/">如何给你的Android 安装文件（APK）瘦身</a></p>

    <p>Android的apk文件越来越大了这已经是一个不争的事实。在Android 还是最初版本的时候，一个app的apk文件大小也还只有2 MB左右，到了现在，一个app的apk文件大小已经升级到10MB到20MB这个范围了。apk文件大小的爆炸式增长主要是因为用户对app质量的期待越来越高以及开发者的开发经验增长。</p>
  </li>
  <li>
    <p><a href="http://blog.isming.me/tags/material-design/">创建Material Design风格的Android应用系列文章</a></p>

    <p>随着Android 5.0的发布，Android Developer网站也更新了，增加了创建Material Design风格的Android应用指南,也更新了Support Library，在support library增加了一些Material Design风格的控件和动画等，这里给大家简单介绍一下怎样开发aterial Design风格的Android应用。</p>
  </li>
</ol>

<!--more-->

<ol>
  <li>
    <p><a href="http://www.importnew.com/13107.html">从Java代码到字节码（1）</a></p>

    <p>理解Java代码是如何被编译为字节码并在Java虚拟机（JVM）上执行是非常重要的，这将帮助理解你的程序是如何执行的。这样的理解不仅仅能够让你在逻辑上更好的掌握语言特性，而且能够有机会理解在做出重要决定时所需的权衡以及相应的副作用。</p>
  </li>
  <li>
    <p><a href="http://www.pedant.cn/2014/07/04/webview-js-java-interface-research/">在WebView中如何让JS与Java安全地互相调用</a></p>

    <p>在现在安卓应用原生开发中，为了追求开发的效率以及移植的便利性，使用WebView作为业务内容展示与交互的主要载体是个不错的折中方案。那么在这种Hybrid(混合式) App中，难免就会遇到页面JS需要与Java相互调用，调用Java方法去做那部分网页JS不能完成的功能。</p>
  </li>
  <li>
    <p><a href="http://droidyue.com/blog/2014/11/08/understanding-garbage-collection-output-messages-in-android/">译文：理解Android中垃圾回收日志信息</a></p>

    <p>如果你是一名Android开发者并且常常看程序日志的话，你会经常在logcat的调试日志窗口看到像 <code>GC_CONCURRENT freed 178K, 41% free 3673K/6151K, external 0K/0K, paused 2ms+2ms</code> 这样的日志信息，这就是Android系统垃圾回收的部分输出信息，本文将具体介绍这些日志信息的每一部分的含义来帮助帮助大家更好地了解垃圾回收的运行情况。</p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/t12x3456/article/details/40837287">Android 使用android-support-multidex解决Dex超出方法数的限制问题,让你的应用不再爆棚</a></p>

    <p>随着应用不断迭代，业务线的扩展,应用越来越大(比如集成了各种第三方sdk或者公共支持的jar包,项目耦合性高，重复作用的类越来越多)，相信很多人都遇到过如下的错误: <code>java.lang.IllegalArgumentException: method ID not in [0, 0xffff]: 65536 </code> 没错，你的应用中的Dex 文件方法数超过了最大值65536的上限,简单来说，应用爆棚了.</p>
  </li>
</ol>

<h3 id="section-2">代码&amp;开源库</h3>

<ol>
  <li>
    <p><a href="https://github.com/lightSky/MaterialDesignCenter">MaterialDesignCenter</a></p>

    <p>收集整理了Android Material Design相关的设计资源、视频教程、译文教程和开源库等。</p>
  </li>
  <li>
    <p><a href="https://github.com/BlueMor/Android-PullLayout">Android-PullLayout</a></p>

    <p>仿UC天气下拉和微信下拉眼睛</p>

    <p><img src="https://raw.githubusercontent.com/BlueMor/Android-PullLayout/master/screenshoot/123.gif" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/pedant/safe-java-js-webview-bridge">safe-java-js-webview-bridge</a></p>

    <p>抛弃使用高风险的WebView addJavascriptInterface方法，利用onJsPrompt解析纯JSON字符串，来实现网页JS层反射调用Java方法，同时通过对js层调用函数及回调函数的包装，支持方法参数传入所有已知的类型，包括number、string、boolean、object、function。</p>
  </li>
  <li>
    <p><a href="https://github.com/lzyzsd/CircleProgress">CircleProgress</a></p>

    <p>各种样式的自定义圆形进度条。</p>

    <p><img src="https://raw.githubusercontent.com/lzyzsd/CircleProgress/master/demos/circle_progress.gif" alt="image" /></p>
  </li>
  <li>
    <p><a href="https://github.com/kyleduo/SwitchButton">SwitchButton</a></p>

    <p>同时支持Material Design和iOS7风格的SwitchButton。</p>

    <p><img src="https://raw.githubusercontent.com/kyleduo/SwitchButton/master/preview/easy_to_style.png" alt="image" /></p>
  </li>
</ol>

<h3 id="section-3">视频</h3>

<ol>
  <li>
    <p><a href="http://www.jikexueyuan.com/course/364.html?hmsr=sina_weibo_VisualStudio">使用Visual Studio 2015开发Android应用</a></p>

    <p>2014年的微软Connect();在线开发者大会在11月12日和11月13日举行。在大会上，微软公布了很多新的特性和功能。其中最吸引人的是.Net开源和Android模拟器。显示了微软更开放的战略思想。并突出了微软CEO移动优先和云优先的理念。</p>
  </li>
</ol>

<h3 id="section-4">工具</h3>

<ol>
  <li>
    <p><a href="https://github.com/akonior/icon-version">icon-version</a></p>

    <p>可以给Android的App图标添加版本号和变种名字的Android gradle插件。</p>

    <p><img src="https://github.com/akonior/icon-version/raw/master/doc/icon-version-screenshot.png" alt="image" /></p>
  </li>
</ol>

<h3 id="section-5">书</h3>

<ol>
  <li>
    <p><a href="http://snowdream86.gitbooks.io/github-cheat-sheet/content/zh/index.html">GitHub秘籍</a></p>

    <p>本秘籍收录了一些Git和Github非常酷同时又少有人知的功能。灵感来自于Zach Holman在2012年Aloha Ruby Conference和2013年WDCNZ上所做的演讲：Git and GitHub Secrets(slides)和More Git and GitHub Secrets(slides)。</p>
  </li>
</ol>

<h3 id="section-6">设计</h3>

<h4 id="section-7">文章</h4>

<ol>
  <li>
    <p><a href="http://mux.baidu.com/?p=3367">切图小贴士</a></p>

    <p>用户手中看到的产品界面，并非设计师呕心沥血创作的效果图，而是一个个单独的切图经由开发同学技术实现。切图作为设计师与开发者之间的桥梁，它的作用很关键，合适的切图、精准的位置可以最大限度的还原效果图的设计，精妙的切图更会有事半功倍的效果哦！	</p>
  </li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Android开发周报 Issue#6]]></title>
    <link href="http://www.inferjay.com/blog/2014/11/10/android-dev-weekly-issue-6/"/>
    <updated>2014-11-10T16:45:18+08:00</updated>
    <id>http://www.inferjay.com/blog/2014/11/10/android-dev-weekly-issue-6</id>
    <content type="html"><![CDATA[<h3 id="section">新闻</h3>

<ol>
  <li>
    <p><a href="http://linux.cn/article-4172-1.html">Android 5.0 Lollipop源代码发布</a></p>

    <p>Google将最新的Android 5.0 Lollipop系统源代码上传在公开的<a href="http://source.android.com/source/index.html">Android Open Source Project(AOSP) 库</a>。</p>
  </li>
  <li>
    <p><a href="http://linux.cn/article-4168-1.html">Android 5.0 Lollipop 安全特性详解</a></p>

    <p>Android 5.0 Lollipop 正式版发布在即，根据 Google 的说法，Android 5.0 是 Android 历史上最为重大的版本变更，带来了全新的设计风格，全新的软件运行环境，更好的续航能力以及大量的细节改进。可能关于 Material Design、ART 模式等等新特性你已经有所了解，但是我们今天要聊的是 5.0 的另一个重大变革，关于安全性的改进。</p>
  </li>
  <li>
    <p><a href="http://www.pingwest.com/copresence-is-airdrop-between-android-ios/">Copresence: Google 正为 iOS 和 Android 之间数据通讯架设的桥梁</a></p>

    <p>Google 最近被人发现正在开发的名为「Copresence」的功能，未来很有可能成为跨移动操作系统数据传输的最好解决方案。Copresence 的功能将允许 Android 和 iOS 操作系统设备之间互相传输文件、照片、发送导航定位、文字信息等多种类型的数据——并非通过互联网，而是更加本地化的点对点连接方式。</p>
  </li>
</ol>

<h3 id="section-1">文章</h3>

<ol>
  <li>
    <p><a href="https://github.com/AWCNTT/ArticleTranslateProject/blob/master/translated/Issue%23105/2014-11-06-Creating-a-Cards-UI-on-Android.md">在Android上创建卡片式UI</a></p>

    <p>自从卡片式UI第一次在Google+ app上亮相，这种设计模式在Android社区上开始变得越来越火。很多人都热衷于这种设计模式并在他们的开发中使用。这不只归功于其时尚的外观，还有它实用之处。每张卡片拥有其相关的内容及其内容所触发的动作。换句话来说，每张卡片有它唯一的内容管理机制。</p>
  </li>
  <li>
    <p><a href="http://www.codeceo.com/article/android-adb-shell.html">34个Android常用adb shell命令汇总</a></p>

    <p>调试Android程序有时需要adb shell 命令，adb全称Android Debug Bridge ，就是起到调试桥的作用。通过adb我们可以在Eclipse中通过DDMS来调试Android程序，说白了就是debug工具。adb通过监听Socket TCP 5554等端口让IDE和Qemu通讯。</p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/isming/article/details/26985317"> 使用Gradle构建Android项目</a></p>

    <p>Gradle是以Groovy为基础，面向java应用，基于DSL语法的自动化构建工具。是google引入，替换ant和maven的新工具，其依赖兼容maven和ivy。使用gradle的目的:更容易重用资源和代码；可以更容易创建不同的版本的程序，多个类型的apk包；更容易配置，扩展;更好的IDE集成;</p>
  </li>
  <li>
    <p><a href="http://toughcoder.net/blog/2014/10/26/best-practices-to-support-multiple-screen/">适配多屏幕的最佳实践</a></p>

    <p>对于Android应用开发来讲，比较头疼的，也是比较重要的一个工作就是要尽可能多的支持市场上的Android设备，由于Android的开放性，各种奇奇怪怪的设备都有，符合标准的，不符合标准的，行货，水货，山寨货鱼龙混杂，防不胜防。</p>
  </li>
  <li>
    <p><a href="http://toughcoder.net/blog/2014/10/25/tricks-to-remove-duplicates/">如何有效的减少重复的代码</a></p>

    <p>重复的代码一直都是可维护性的大敌，重构的重要任务之一也就是要去除掉重复的代码，有效的减少重复代码，可以大大提高软件的扩展性。</p>
  </li>
  <li>
    <p><a href="http://blog.csdn.net/isming/article/details/39404407">在android中画圆形图片的几种办法</a>	
 在开发中经常会有一些需求,比如显示头像，显示一些特殊的需求,将图片显示成圆角或者圆形或者其他的一些形状。但是往往我们手上的图片或者从服务器获取到的图片都是方形的。这时候就需要我们自己进行处理，将图片处理成所需要的形状。</p>
  </li>
</ol>

<!--more-->

<h3 id="section-2">代码&amp;开源库</h3>

<ol>
  <li>
    <p><a href="https://github.com/ajaysahani/MultiActionTextView">MultiActionTextView</a></p>

    <p>MultiActionTextView 一个textview的开源库，可以分别给TextView中的某几个字设置点击事件。</p>
  </li>
  <li>
    <p><a href="https://github.com/cymcsg/UltimateAndroid">UltimateAndroid</a></p>

    <p>快速开发Android应用的框架，框架目前主要包含的功能有View Injection,ORM,异步网络请求和图片加载，自动化脚本测试,磁盘LRU等功能.同时提供了类似于TripleDes、Webview快速设置、Md5处理、String处理,Https处理等常用工具类，还有超过100多种UI控件效果。</p>
  </li>
  <li>
    <p><a href="https://github.com/MustafaFerhan/DebugLog">DebugLog</a></p>

    <p>DebugLog可以帮你创建更简单和更容易理解的调试日志，能够友好的显示调试信息所在类和函数。</p>
  </li>
  <li>
    <p><a href="https://github.com/rengwuxian/MaterialEditText">MaterialEditText</a></p>

    <p>Material Design风格的EditText。虽然AppCompat v21中也提供了 Material Design 的控件外观支持，其中包括 EditText 。但 AppCompat 中的 EditText 实在有点难用，因为它是通过 colorAccent 来自动为控件着色的，并没有提供设置颜色的api，因此需要通过为控件定制theme的方式来实现自定义控件颜色。 另外，除了外观上的变化， AppCompat 没有提供任何 Google Material Design Spec 中提到的特性。  </p>
  </li>
</ol>

<h3 id="section-3">视频</h3>

<ol>
  <li>
    <p><a href="http://v.youku.com/v_show/id_XODE5NDI1MTI4.html">GoogleFit APIs for Android</a></p>

    <p>来自Google美女工程师的DevBytes系列《GoogleFit APIs for Android》视频共两集,现已搬至优酷，关注Google Fit的可以看内容，不感兴趣内容可以看美女，程序猿们我懂你们的！！！</p>
  </li>
</ol>

<h3 id="section-4">工具</h3>

<ol>
  <li>
    <p><a href="https://github.com/intrications/material-design-icons-adt-template">material-design-icons-adt-template</a></p>

    <p>Android Studio / Eclipse ADT template for including icon resources from <a href="https://github.com/google/material-design-icons">https://github.com/google/material-design-icons</a> in your project.</p>
  </li>
  <li>
    <p><a href="http://tools.android.com/download/studio/canary">Android Studio 0.9.2 Released</a></p>

    <p>Android Studio 0.9.1 released to the canary channel! </p>
  </li>
</ol>

<h3 id="section-5">书</h3>

<ol>
  <li>
    <p><a href="http://it-ebooks.info/book/646/">Pro Android Apps Performance Optimization</a></p>

    <p>Today’s Android apps developers are often running into the need to refine, improve and optimize their apps performances. As more complex apps can be created, it is even more important for developers to deal with this critical issue. </p>
  </li>
</ol>

<h3 id="section-6">设计</h3>

<h4 id="section-7">文章</h4>

<ol>
  <li>
    <p><a href="http://www.ui.cn/project.php?id=30796">熊氏切图法–一键导出App icon</a></p>

    <p>做App设计的小伙伴有没有遇到这种情况呢，同一个icon要输出N种尺寸，用传统的方法批处理调整图片大小比较繁琐，不方便同时整体预览，如果后续修改了设计，又要重复一次这个批处理的过程，有没有一键输出所有尺寸的方法呢？本熊这就给大家推荐一种强大的技巧：智能对象+生成图像资源，是的，本熊不要脸的将其命名为“熊氏切图法”.</p>
  </li>
  <li>
    <p><a href="http://www.ui.cn/project.php?id=30921">UE+UI设计流程之一二三</a></p>

    <p>在做移动端app的设计过程中，经常会碰到一些二次返工或者时间的浪费，在这里分享下自己在项目中的流程经验，供遇到问题的小伙伴们参考。</p>
  </li>
  <li>
    <p><a href="http://www.ui.cn/project.php?id=30538">从Material UI得到的设计感悟</a></p>

    <p>如果你读过Google的Material设计文档，你就会发现其对细节和深度的注重。在文档中你能学到很多东西。其中最为重要的一项，就是其证明了编写复杂视觉风格指南是完全可能的。尽管可能困难重重，但还是可能的。特别是对于Google复杂多样的产品组合来说。</p>
  </li>
  <li>
    <p><a href="http://www.ui.cn/project.php?id=30540">APP规范实例(详细的UI设计方法</a></p>

    <p>设计是无限的，可作为借鉴，这一套UI设计规范，包含了界面布局、颜色、文字规范、按钮规范、图标规范、图片规范、列表规范、控件规范、弹出浮层，超级详细。大家可以借鉴下，学会自己设计一套APP设计规范，成为高级设计师。但是不要生搬硬套，毕竟不是一个产品，总之可参考的价值很高。</p>
  </li>
</ol>

<h4 id="section-8">工具&amp;资源</h4>

<ol>
  <li>
    <p><a href="https://github.com/romashamin/Size-Marks-PS">Size-Marks-PS</a></p>

    <p>Photoshop Javascript插件，可以以新建图层的方式直接在PS中标注尺寸。</p>

    <p><img src="http://ww1.sinaimg.cn/mw1024/4b4d632fgw1elyr9qvsipg20kf08jdjf.gif" alt="image" /></p>
  </li>
  <li>
    <p><a href="http://www.uisdc.com/21-photoshop-plugins-for-designer">高效神器！21款强大实用的PHOTOSHOP扩展插件</a></p>

    <p>21款扩展插件，特别适合网页设计师。这些神器可以让平时复杂繁琐的操作变得更加简单.</p>
  </li>
</ol>

<hr />
<p>版权声明：欢迎自由转载-非商用-非衍生-保持署名 | <a href="http://creativecommons.org/licenses/by-nc-nd/3.0/deed.zh">Creative Commons BY-NC-ND 3.0</a></p>
]]></content>
  </entry>
  
</feed>
